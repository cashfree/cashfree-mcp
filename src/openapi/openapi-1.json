{
  "openapi": "3.0.0",
  "info": {
    "title": "Cashfree Subscription API",
    "description": "Create and manage subscriptions and collect recurring payments from customers easily with Cashfree Subscriptions.",
    "version": "v2"
  },
  "externalDocs": {
    "url": "https://docs.cashfree.com/reference/postman-collection-1",
    "description": "This url will have the information of all the APIs."
  },
  "servers": [
    {
      "url": "https://sandbox.cashfree.com",
      "description": "Sandbox server"
    },
    {
      "url": "https://api.cashfree.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/v2/subscriptions/seamless/subscription": {
      "post": {
        "tags": [
          "Seamless APIs"
        ],
        "summary": "Create Seamless Subscription with Plan ID",
        "description": "Use this API to create a subscription by providing a custom payment experience to your customers by specifying the plan ID and the customer details. You can also specify the bank account information when you create the subscription to ensure that mandates are created via the specified bank account only. TPV is applicable only for eNACH and UPI.",
        "operationId": "createSeamlessSubscriptionWithPlanId",
        "parameters": [
          {
            "name": "x-client-id",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "{{X-Client-Id}}"
            }
          },
          {
            "name": "x-client-secret",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "{{X-Client-Secret}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionId": {
                    "type": "string",
                    "description": "Unique identifier for the subscription.",
                    "example": "DemoSubscription"
                  },
                  "planId": {
                    "type": "string",
                    "description": "Unique identifier for the subscription plan.",
                    "example": "TestPlan_ReArch_002"
                  },
                  "customerName": {
                    "type": "string",
                    "description": "Name of the customer subscribing.",
                    "example": "John"
                  },
                  "customerPhone": {
                    "type": "string",
                    "description": "Customer's phone number.",
                    "example": "99999XXXXX"
                  },
                  "customerEmail": {
                    "type": "string",
                    "description": "Customer's email address.",
                    "example": "john@gmail.com"
                  },
                  "returnUrl": {
                    "type": "string",
                    "description": "URL to redirect the user after successful subscription.",
                    "example": "www.google.com"
                  },
                  "authAmount": {
                    "type": "number",
                    "description": "Authorization amount for the subscription.",
                    "example": 1
                  },
                  "expiresOn": {
                    "type": "string",
                    "description": "Expiration date for the subscription.",
                    "example": "2024-12-02 09:20:12"
                  },
                  "firstChargeDate": {
                    "type": "string",
                    "description": "First charge date for the subscription.",
                    "example": "2024-12-02"
                  },
                  "payerAccountDetails": {
                    "type": "object",
                    "properties": {
                      "accountNumber": {
                        "type": "string",
                        "description": "Customer's account number.",
                        "example": "007200000000"
                      },
                      "accountHolderName": {
                        "type": "string",
                        "description": "Name of the account holder.",
                        "example": "John"
                      },
                      "bankId": {
                        "type": "string",
                        "description": "Bank identifier.",
                        "example": "ICIC"
                      },
                      "accountType": {
                        "type": "string",
                        "description": "Type of the bank account.",
                        "example": "SAVINGS"
                      },
                      "ifsc": {
                        "type": "string",
                        "description": "IFSC code of the bank.",
                        "example": "ICIC0000072"
                      }
                    }
                  },
                  "notificationChannels": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Notification channels for subscription.",
                      "example": "EMAIL"
                    },
                    "example": [
                      "EMAIL",
                      "SMS"
                    ]
                  },
                  "tpvEnabled": {
                    "type": "boolean",
                    "description": "Whether Third Party Verification (TPV) is enabled.",
                    "example": true
                  },
                  "splitDetails": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "merchantVendorId": {
                              "type": "string",
                              "description": "Vendor ID for split payments.",
                              "example": "test-vendor-1"
                            },
                            "percentage": {
                              "type": "number",
                              "description": "Percentage of split payment.",
                              "example": 10
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "createSeamlessSubscriptionWithoutTPV": {
                  "summary": "Create Seamless Subscription without TPV",
                  "value": {
                    "subscriptionId": "DemoSubscription",
                    "planId": "TestPlan_ReArch_002",
                    "customerName": "John",
                    "customerPhone": "99999XXXXX",
                    "customerEmail": "john@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 1,
                    "expiresOn": "2024-12-02 09:20:12",
                    "firstChargeDate": "2024-12-02",
                    "payerAccountDetails": {
                      "accountNumber": "007200000000",
                      "accountHolderName": "John",
                      "bankId": "ICIC",
                      "accountType": "SAVINGS",
                      "ifsc": "ICIC0000072"
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ]
                  }
                },
                "createSeamlessSubscriptionWithTPV": {
                  "summary": "Create Seamless Subscription with TPV enabled",
                  "value": {
                    "subscriptionId": "DemoSubscription",
                    "planId": "TestPlan_ReArch_002",
                    "customerName": "",
                    "customerPhone": "9999988888",
                    "customerEmail": "demo.email@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 1,
                    "expiresOn": "2024-12-02 09:20:12",
                    "firstChargeDate": "2024-12-02",
                    "tpvEnabled": true,
                    "payerAccountDetails": {
                      "accountNumber": "0072XX52XXXX",
                      "accountHolderName": "John",
                      "bankId": "ICIC",
                      "accountType": "SAVINGS",
                      "ifsc": "ICIC0000072"
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ]
                  }
                },
                "createSeamlessSubscriptionWithSplitDetails": {
                  "summary": "Create Seamless Subscription with Split Details",
                  "value": {
                    "subscriptionId": "DemoSubscription",
                    "planId": "TestPlan_ReArch_002",
                    "customerName": "John",
                    "customerPhone": "99999XXXXX",
                    "customerEmail": "john@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 1,
                    "expiresOn": "2024-12-02 09:20:12",
                    "firstChargeDate": "2024-12-02",
                    "payerAccountDetails": {
                      "accountNumber": "007200000000",
                      "accountHolderName": "John",
                      "bankId": "ICIC",
                      "accountType": "SAVINGS",
                      "ifsc": "ICIC0000072"
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ],
                    "splitDetails": {
                      "scheme": [
                        {
                          "merchantVendorId": "test-vendor-1",
                          "percentage": 10
                        },
                        {
                          "merchantVendorId": "test-vendor-2",
                          "percentage": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful subscription creation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status code of the response.",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "description": "Status message.",
                      "example": "Subscription Created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subReferenceId": {
                          "type": "integer",
                          "description": "Subscription reference ID.",
                          "example": 107350
                        },
                        "subscriptionId": {
                          "type": "string",
                          "description": "Unique identifier for the created subscription.",
                          "example": "DemoSubscription"
                        },
                        "customerPhone": {
                          "type": "string",
                          "description": "Customer's phone number.",
                          "example": "9999988888"
                        },
                        "customerEmail": {
                          "type": "string",
                          "description": "Customer's email address.",
                          "example": "demo.email@gmail.com"
                        },
                        "planId": {
                          "type": "string",
                          "description": "Unique identifier for the subscription plan.",
                          "example": "TestPlan_ReArch_002"
                        },
                        "status": {
                          "type": "string",
                          "description": "Current status of the subscription.",
                          "example": "INITIALIZED"
                        },
                        "currentCycle": {
                          "type": "integer",
                          "description": "Current subscription cycle.",
                          "example": 0
                        },
                        "authAmount": {
                          "type": "number",
                          "description": "Authorization amount for the subscription.",
                          "example": 1
                        },
                        "returnUrl": {
                          "type": "string",
                          "description": "URL to redirect the user after successful subscription.",
                          "example": "www.google.com"
                        },
                        "startDate": {
                          "type": "object",
                          "properties": {
                            "E_MANDATE": {
                              "type": "string",
                              "description": "Start date for E_MANDATE payment type.",
                              "example": "2024-12-02"
                            },
                            "UPI": {
                              "type": "string",
                              "description": "Start date for UPI payment type.",
                              "example": "2024-12-02"
                            }
                          }
                        },
                        "endDate": {
                          "type": "string",
                          "description": "Expiration date for the subscription.",
                          "example": "2024-12-02 09:20:12"
                        },
                        "tpvEnabled": {
                          "type": "boolean",
                          "description": "Indicates if TPV is enabled.",
                          "example": false
                        },
                        "paymentOptions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of payment option.",
                                "example": "E_MANDATE"
                              },
                              "accountTypes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Available account types for the payment option.",
                                "example": [
                                  "SAVINGS",
                                  "CURRENT"
                                ]
                              },
                              "frequentBankDetails": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "bankId": {
                                      "type": "string",
                                      "description": "Bank identifier.",
                                      "example": "SBIN"
                                    },
                                    "bankName": {
                                      "type": "string",
                                      "description": "Name of the bank.",
                                      "example": "STATE BANK OF INDIA"
                                    },
                                    "accountAuthModes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Authorization modes for the bank.",
                                      "example": [
                                        "DEBIT_CARD",
                                        "NET_BANKING"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid subscription input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the response.",
                      "example": "ERROR"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Error code.",
                      "example": "400"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Invalid subscription expiresOn"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the response.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/seamless/authorization": {
      "post": {
        "tags": [
          "Seamless APIs"
        ],
        "summary": "Create Authorization Request",
        "description": "Use this API to create an authorisation request for a particular subscription. This API is applicable only if you have created a subscription via Create Seamless Subscription API. Use the response of the Create Seamless Subscription API to get the supported banks for E_MANDATE and supported UPI handles.",
        "operationId": "createAuthorizationRequest",
        "parameters": [
          {
            "name": "x-client-id",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "{{X-Client-Id}}"
            }
          },
          {
            "name": "x-client-secret",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "{{X-Client-Secret}}"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subReferenceId": {
                    "type": "integer",
                    "description": "Reference ID for the subscription.",
                    "example": 123456
                  },
                  "merchantTxnId": {
                    "type": "string",
                    "description": "Unique transaction ID for the merchant.",
                    "example": "merchant-txn-id-1"
                  },
                  "authPaymentInfo": {
                    "type": "object",
                    "properties": {
                      "paymentType": {
                        "type": "string",
                        "description": "Type of payment (e.g., UPI, CARD, E_MANDATE).",
                        "example": "UPI"
                      },
                      "vpa": {
                        "type": "string",
                        "description": "Virtual Payment Address for UPI payments.",
                        "example": "johndoe@upi"
                      },
                      "authFlow": {
                        "type": "string",
                        "description": "Type of UPI flow (e.g., UPI_COLLECT, UPI_INTENT).",
                        "example": "UPI_COLLECT"
                      },
                      "cardNumber": {
                        "type": "string",
                        "description": "Card number for card payments.",
                        "example": "4444333322221111"
                      },
                      "cardHolderName": {
                        "type": "string",
                        "description": "Name on the card.",
                        "example": "John Doe"
                      },
                      "cardCvv": {
                        "type": "string",
                        "description": "CVV number of the card.",
                        "example": "123"
                      },
                      "cardExpiryMonth": {
                        "type": "string",
                        "description": "Expiry month of the card.",
                        "example": "12"
                      },
                      "cardExpiryYear": {
                        "type": "string",
                        "description": "Expiry year of the card.",
                        "example": "2099"
                      },
                      "accountHolderName": {
                        "type": "string",
                        "description": "Account holder name for E_MANDATE.",
                        "example": "John Doe"
                      },
                      "accountNumber": {
                        "type": "string",
                        "description": "Account number for E_MANDATE.",
                        "example": "1234567890"
                      },
                      "bankId": {
                        "type": "string",
                        "description": "Bank identifier for E_MANDATE.",
                        "example": "SBIN"
                      },
                      "accountType": {
                        "type": "string",
                        "description": "Account type for E_MANDATE (e.g., SAVINGS).",
                        "example": "SAVINGS"
                      },
                      "authMode": {
                        "type": "string",
                        "description": "Authentication mode for E_MANDATE (e.g., DEBIT_CARD, NET_BANKING).",
                        "example": "DEBIT_CARD"
                      },
                      "pNachFileId": {
                        "type": "string",
                        "description": "Physical Nach File ID for mandate.",
                        "example": "1475380791"
                      },
                      "mandateCreationDate": {
                        "type": "string",
                        "description": "Date the mandate was created.",
                        "example": "2023-07-25"
                      },
                      "mandateStartDate": {
                        "type": "string",
                        "description": "Start date of the mandate.",
                        "example": "2023-07-27"
                      }
                    }
                  }
                }
              },
              "examples": {
                "upiAuthorizationRequest": {
                  "summary": "UPI Authorization Request",
                  "value": {
                    "subReferenceId": 123456,
                    "merchantTxnId": "merchant-txn-id-1",
                    "authPaymentInfo": {
                      "paymentType": "UPI",
                      "vpa": "johndoe@upi",
                      "authFlow": "UPI_COLLECT"
                    }
                  }
                },
                "cardAuthorizationRequest": {
                  "summary": "Card Authorization Request",
                  "value": {
                    "subReferenceId": 123456,
                    "merchantTxnId": "merchant-txn-id-2",
                    "authPaymentInfo": {
                      "paymentType": "CARD",
                      "cardNumber": "4444333322221111",
                      "cardHolderName": "John Doe",
                      "cardCvv": "123",
                      "cardExpiryMonth": "12",
                      "cardExpiryYear": "2099"
                    }
                  }
                },
                "eMandateAuthorizationRequest": {
                  "summary": "E_MANDATE Authorization Request",
                  "value": {
                    "subReferenceId": 123456,
                    "merchantTxnId": "merchant-txn-id-3",
                    "authPaymentInfo": {
                      "paymentType": "E_MANDATE",
                      "accountHolderName": "John Doe",
                      "accountNumber": "1234567890",
                      "bankId": "SBIN",
                      "accountType": "SAVINGS",
                      "authMode": "DEBIT_CARD"
                    }
                  }
                },
                "physicalMandateRequest": {
                  "summary": "Seamless Physical Mandate Request",
                  "value": {
                    "subReferenceId": 260684,
                    "authPaymentInfo": {
                      "paymentType": "PHYSICAL_MANDATE",
                      "pNachFileId": "1475380791",
                      "accountHolderName": "John Doe",
                      "accountNumber": "1234567890",
                      "bankId": "SBIN",
                      "accountType": "SAVINGS",
                      "ifsc": "SBIN0001852",
                      "mandateCreationDate": "2023-07-25",
                      "mandateStartDate": "2023-07-27"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authorization request.",
            "content": {
              "application/json": {
                "examples": {
                  "defaultAuthorization": {
                    "summary": "Default Authorization Response",
                    "value": {
                      "status": 200,
                      "message": "Authorization Created",
                      "data": {
                        "subReferenceId": 123456,
                        "authId": 23456789,
                        "authStatus": "INITIALIZED",
                        "merchantTxnId": "txn.id-1_2_3",
                        "authPaymentData": {
                          "paymentType": "UPI"
                        }
                      }
                    }
                  },
                  "eMandateAuthorization": {
                    "summary": "E_MANDATE Authorization Response",
                    "value": {
                      "status": 200,
                      "message": "Authorization Created",
                      "data": {
                        "subReferenceId": 123456,
                        "authId": 23456789,
                        "authStatus": "INITIALIZED",
                        "authPaymentData": {
                          "paymentType": "E_MANDATE",
                          "link": "https://enach.npci.org.in/onmags/sendRequest",
                          "method": "POST",
                          "postData": {
                            "BankID=HDFC": null,
                            "AuthMode=DebitCard": null,
                            "Data=xyz": null
                          }
                        }
                      }
                    }
                  },
                  "upiIntentAuthorization": {
                    "summary": "UPI Intent Authorization Response",
                    "value": {
                      "status": 200,
                      "message": "Authorization Created",
                      "data": {
                        "authId": 4302698,
                        "subReferenceId": 4576585,
                        "authStatus": "INITIALIZED",
                        "authPaymentData": {
                          "paymentType": "UPI",
                          "upiIntentData": {
                            "androidAuthAppLinks": {
                              "AMAZONPAY": "intent://mandate?<upi-deeplink-params>",
                              "BHIM": "intent://mandate?<upi-deeplink-params>",
                              "GPAY": "gpay://upi/mandate?<upi-deeplink-params>",
                              "PAYTM": "intent://mandate?<upi-deeplink-params>",
                              "DEFAULT": "upi://mandate?<upi-deeplink-params>"
                            },
                            "iosAuthAppLinks": {
                              "PAYTM": "paytm://upi/mandate?<upi-deeplink-params>"
                            }
                          }
                        }
                      }
                    }
                  },
                  "upiQrAuthorization": {
                    "summary": "UPI QR Authorization Response",
                    "value": {
                      "status": 200,
                      "message": "Authorization Created",
                      "data": {
                        "authId": 4302759,
                        "subReferenceId": 4576585,
                        "authStatus": "INITIALIZED",
                        "authPaymentData": {
                          "paymentType": "UPI",
                          "qrData": "upi://mandate?<upi-QR-params>"
                        }
                      }
                    }
                  },
                  "cardAuthorization": {
                    "summary": "Card Authorization Response",
                    "value": {
                      "status": 200,
                      "message": "Authorization Created",
                      "data": {
                        "subReferenceId": 12345678,
                        "authId": 232363523,
                        "authStatus": "INITIALIZED",
                        "authPaymentData": {
                          "paymentType": "CARD",
                          "link": "https://centinelapi.cardinalcommerce.com/V2/Cruise/StepUp",
                          "redirectMethod": "post",
                          "postData": {
                            "JWT": "eyJhb...",
                            "MD": "125235236"
                          }
                        }
                      }
                    }
                  },
                  "physicalMandateAuthorization": {
                    "summary": "Physical Mandate Authorization Response",
                    "value": {
                      "status": 200,
                      "message": "Authorization Created",
                      "data": {
                        "authId": 72637,
                        "subReferenceId": 260684,
                        "authStatus": "INITIALIZED",
                        "authPaymentData": {
                          "paymentType": "PHYSICAL_MANDATE"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters.",
            "content": {
              "application/json": {
                "examples": {
                  "subscriptionNotExist": {
                    "summary": "Subscription Not Exist Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Subscription Does not exist for subReferenceId : 1060772"
                    }
                  },
                  "invalidPaymentType": {
                    "summary": "Invalid Payment Type Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid payment type, use 'E_MANDATE', 'UPI' or 'CARD'"
                    }
                  },
                  "invalidMerchantId": {
                    "summary": "Invalid Merchant ID Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "invalid merchantId for subscription"
                    }
                  },
                  "invalidVPA": {
                    "summary": "Invalid VPA Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "reason": "vpa is Invalid, check your param."
                    }
                  },
                  "invalidAuthFlow": {
                    "summary": "Invalid Auth Flow Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "reason": "authFlow is Invalid, check your param."
                    }
                  },
                  "authorizationPaymentInfoMismatch": {
                    "summary": "Authorization Payment Info Mismatch Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Authorization payment info doesn't match with subscription creation payment info."
                    }
                  },
                  "tpvNotSupported": {
                    "summary": "TPV Not Supported Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "TPV currently not allowed for Intent and Qr auth flow"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "examples": {
                  "serverError": {
                    "summary": "General Server Error",
                    "value": {
                      "status": "ERROR",
                      "message": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/seamless/authorization/{authId}/poll": {
      "get": {
        "tags": [
          "Seamless APIs"
        ],
        "summary": "Get Authorization Status",
        "description": "Use this API to fetch the status of the authorisation request. Provide the authID that is available in the Create Auth API response. This API is applicable only if you have created a subscription using the Create Seamless Subscription API",
        "operationId": "getAuthorizationStatus",
        "parameters": [
          {
            "name": "authId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Authorization ID to poll the status for.",
              "example": "123456"
            }
          },
          {
            "name": "x-client-id",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "{{X-Client-Id}}"
            }
          },
          {
            "name": "x-client-secret",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "{{X-Client-Secret}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful authorization status fetch.",
            "content": {
              "application/json": {
                "examples": {
                  "Payment Type UPI": {
                    "value": {
                      "status": 200,
                      "message": "Auth status fetched successfully",
                      "data": {
                        "authStatus": "PENDING",
                        "subReferenceId": 99124,
                        "paymentType": "UPI",
                        "umn": "abcdefghijklmnop@okaxis",
                        "subscriptionId": "test-1674467137-ss",
                        "authAmount": 1,
                        "orderId": "SUB_110926_AUTH_122424"
                      }
                    }
                  },
                  "Payment Type E_MANDATE": {
                    "value": {
                      "status": 200,
                      "message": "Auth status fetched successfully",
                      "data": {
                        "authStatus": "PENDING",
                        "subReferenceId": 99124,
                        "paymentType": "E_MANDATE",
                        "umrn": "SBIN000000000000",
                        "subscriptionId": "test-1674467137-ss",
                        "authAmount": 0,
                        "orderId": "SUB_110926_AUTH_122424"
                      }
                    }
                  },
                  "Failed Authorization": {
                    "value": {
                      "status": 200,
                      "message": "Auth Status Fetched Successfully",
                      "data": {
                        "failureReason": "RESPAUTHMANDATE DECLINED BY PSP | TRANSACTION DECLINED BY CUSTOMER",
                        "authStatus": "FAILED",
                        "authAmount": 1,
                        "subReferenceId": 99911,
                        "paymentType": "UPI",
                        "orderId": "SUB_96805677_AUTH_12344",
                        "subscriptionId": "test-1674467137-ss"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid authorization ID or other issues.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Auth ID": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Authorization Does not exist for id : 112377"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/seamless/authorization/simulate": {
      "post": {
        "tags": [
          "Seamless APIs"
        ],
        "summary": "Update Authorization Status",
        "description": "Use this API to update the status of the authorisation from INITIALIZED to SUCCESS or FAILED. Provide the authID and the payment status. This is applicable only in the test environment.",
        "operationId": "updateAuthorizationStatus",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authId": {
                    "type": "integer",
                    "description": "Authorization ID for which the status is to be updated.",
                    "example": 52250
                  },
                  "paymentStatus": {
                    "type": "string",
                    "description": "The new status of the authorization. It could be \"SUCCESS\" or other valid statuses.",
                    "example": "SUCCESS"
                  }
                }
              },
              "examples": {
                "Update Authorization Request": {
                  "value": {
                    "authId": 52250,
                    "paymentStatus": "SUCCESS"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update of authorization status.",
            "content": {
              "application/json": {
                "examples": {
                  "Successful Update": {
                    "value": {
                      "status": 200,
                      "message": "Update Authorization Successful",
                      "data": {
                        "authId": 53296
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid authorization state or ID.",
            "content": {
              "application/json": {
                "examples": {
                  "Authorization Does Not Exist": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Authorization Does not exist for id : 5225000"
                    }
                  },
                  "Invalid Authorization State": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid Authorization State : Expected Status : INITIALIZED : Actual Status : PENDING"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/create-refund": {
      "post": {
        "tags": [
          "Subscription Refund"
        ],
        "summary": "Create Subscription Refund",
        "description": "Use this API to create a refund for the payment of a Subscription. Only one of paymentId or merchantTxnId should be passed. If both are passed then the request will be rejected.",
        "operationId": "createSubscriptionRefund",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "type": "string",
                    "description": "Payment ID for which the refund is to be created.",
                    "example": "1223"
                  },
                  "refundAmount": {
                    "type": "number",
                    "description": "Amount to be refunded.",
                    "example": 100
                  },
                  "refundNote": {
                    "type": "string",
                    "description": "Note associated with the refund.",
                    "example": "Charge refund"
                  },
                  "merchantRefundId": {
                    "type": "string",
                    "description": "Unique ID for the merchant's refund request.",
                    "example": "test-refund"
                  },
                  "requestedSpeed": {
                    "type": "string",
                    "description": "The requested speed for processing the refund (e.g., STANDARD).",
                    "example": "STANDARD"
                  }
                }
              },
              "examples": {
                "Create Refund Request": {
                  "value": {
                    "paymentId": "1223",
                    "refundAmount": 100,
                    "refundNote": "Charge refund",
                    "merchantRefundId": "test-refund",
                    "requestedSpeed": "STANDARD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creation of the refund.",
            "content": {
              "application/json": {
                "examples": {
                  "Create Refund": {
                    "value": {
                      "subRefundId": "SUB_76d688d5-cbcc-49ea-960b-21b11433b641",
                      "merchantRefundId": "test-refund",
                      "paymentId": 1223,
                      "subReferenceId": 191645,
                      "refundAmount": 100,
                      "refundStatus": "INITIALIZED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or other issues.",
            "content": {
              "application/json": {
                "examples": {
                  "Create Refund Error": {
                    "value": {
                      "subRefundId": "SUB_76d688d5-cbcc-49ea-960b-21b11433b641",
                      "merchantRefundId": "test-refund",
                      "paymentId": 1223,
                      "subReferenceId": 191645,
                      "refundAmount": 100,
                      "refundStatus": "INITIALIZED"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/refund-details": {
      "get": {
        "tags": [
          "Subscription Refund"
        ],
        "summary": "Get Subscription Refund Details",
        "description": "Use this API to fetch the status of the refund of a Subscription. Only one of paymentId or merchantRefundId should be passed as query parameter. If both are passed then the request will be rejected.",
        "operationId": "getSubscriptionRefundDetails",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "paymentId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Payment ID for which refund details are to be fetched.",
              "example": "12344"
            }
          },
          {
            "name": "merchantRefundId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Merchant Refund ID for which refund details are to be fetched.",
              "example": "test-refund"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of refund details.",
            "content": {
              "application/json": {
                "examples": {
                  "Get Refund": {
                    "value": {
                      "refundId": 12,
                      "subReferenceId": 123,
                      "paymentId": 12344,
                      "subRefundId": "SUB_john194d4",
                      "refundAmount": 1,
                      "refundNote": "",
                      "refundType": "AUTH",
                      "refundStatus": "PENDING",
                      "addedOn": "2023-10-16 16:24:57"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or both paymentId and merchantRefundId being provided or absent.",
            "content": {
              "application/json": {
                "examples": {
                  "Both PaymentId and MerchantRefundId Present": {
                    "value": {
                      "title": "REQUEST_INVALID",
                      "detail": "Both paymentId and merchantRefundId are present, Please provide any one of them",
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Both paymentId and merchantRefundId are present, Please provide any one of them"
                    }
                  },
                  "Both PaymentId and MerchantRefundId Absent": {
                    "value": {
                      "title": "REQUEST_INVALID",
                      "detail": "Either one of paymentId or merchantRefundId is mandatory",
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Either one of paymentId or merchantRefundId is mandatory"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get Subscription Details",
        "description": "Fetch the details of a subscription for a specific subscription reference ID.",
        "operationId": "getSubscriptionDetails",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf14"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qw9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription whose details are to be fetched.",
              "example": 127056
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of subscription details.",
            "content": {
              "application/json": {
                "examples": {
                  "Get Subscription Details": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription Details",
                      "subscription": {
                        "subscriptionId": "SUB-1",
                        "subReferenceId": 127056,
                        "planId": "Basic-1",
                        "customerName": "John Doe",
                        "customerEmail": "johndoe@gmail.com",
                        "customerPhone": "9999999999",
                        "mode": "NPCI_SBC",
                        "status": "ACTIVE",
                        "firstChargeDate": null,
                        "addedOn": "2021-12-16 16:20:52",
                        "scheduledOn": "2021-12-16 20:30:02",
                        "currentCycle": 0,
                        "authLink": "http://cfre.in/t9i2oku",
                        "bankAccountNumber": "5XXXXXXXXXXXXX",
                        "bankAccountHolder": "John Doe",
                        "umrn": "HDFCXXXXXXXXXXXXXXXX",
                        "splitDetails": {
                          "scheme": [
                            {
                              "merchantVendorId": "test-vendor-1",
                              "percentage": 10
                            },
                            {
                              "merchantVendorId": "test-vendor-2",
                              "percentage": 10
                            }
                          ]
                        }
                      }
                    }
                  },
                  "Get Subscription Details UPI": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription Details",
                      "subscription": {
                        "subscriptionId": "Test_Subs",
                        "subReferenceId": 67969,
                        "planId": "Test_Plan",
                        "customerName": "Test",
                        "customerEmail": "success@upi",
                        "customerPhone": "9999999999",
                        "mode": "SBC_UPI",
                        "status": "ACTIVE",
                        "firstChargeDate": "2022-04-09",
                        "addedOn": "2022-04-07 13:55:55",
                        "scheduledOn": "2022-04-09 00:10:00",
                        "currentCycle": 0,
                        "authLink": "https://cfre.in/5sw943pv",
                        "upiId": "success@upi",
                        "umn": "85819b19f1e24e20bc3414e039774f84@upi",
                        "tpvEnabled": false,
                        "payerAccountDetails": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid subscription reference ID.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Subscription Reference ID": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Subscription Does not exist for subReferenceId : 127056"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/recurring-amount": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Recurring Amount",
        "description": "Update the recurring amount for a specific subscription reference ID.",
        "operationId": "updateRecurringAmount",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "144436e71d659a"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "TEST365fd19c"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription whose recurring amount is to be updated.",
              "example": 113598
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The new recurring amount for the subscription.",
                    "example": 4.99
                  }
                }
              },
              "examples": {
                "Update Recurring Amount Request": {
                  "value": {
                    "amount": 4.99
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update of the recurring amount.",
            "content": {
              "application/json": {
                "examples": {
                  "Update Recurring Amount Success": {
                    "value": {
                      "status": "OK",
                      "message": "Recurring Amount Updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or the subscription not being a periodic one.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Subscription Type": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Recurring amount update is valid only for Periodic Subscriptions"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/payments": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Fetch Subscription Payments",
        "description": "Fetch all payments associated with a specific subscription reference ID.",
        "operationId": "fetchSubscriptionPayments",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription whose payments are to be fetched.",
              "example": 175124
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "The last payment ID from the previous fetch to continue retrieving payments.",
              "example": 3027869
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "The number of payments to fetch in the current request.",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of subscription payments.",
            "content": {
              "application/json": {
                "examples": {
                  "Fetch Subscription Payments Success": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription Payments",
                      "payments": [
                        {
                          "paymentId": 98456,
                          "cfOrderId": 2571132,
                          "orderId": "SUB_test_checkout_123_AUTH_98456",
                          "referenceId": 885308845,
                          "subReferenceId": 73949,
                          "currency": "INR",
                          "amount": 0,
                          "cycle": 0,
                          "status": "SUCCESS",
                          "remarks": "auth payment",
                          "addedOn": "2022-06-23 15:23:08",
                          "scheduledOn": null,
                          "retryAttempts": 0,
                          "failureReason": null
                        },
                        {
                          "paymentId": 3027901,
                          "cfOrderId": 647464356,
                          "orderId": "SUB_AUTH_98456",
                          "referenceId": 584317815,
                          "subReferenceId": 2568045,
                          "currency": "INR",
                          "amount": 1,
                          "cycle": 0,
                          "status": "PENDING",
                          "remarks": "Scheduled payment",
                          "addedOn": "2021-10-25 12:33:01",
                          "scheduledOn": null,
                          "retryAttempts": 0,
                          "failureReason": null
                        },
                        {
                          "paymentId": 3027869,
                          "cfOrderId": 647456025,
                          "orderId": "SUB_TXN_836464",
                          "referenceId": 584310425,
                          "subReferenceId": 2568045,
                          "currency": "INR",
                          "amount": 1,
                          "cycle": 0,
                          "status": "FAILED",
                          "addedOn": "2021-10-25 12:26:47",
                          "scheduledOn": null,
                          "retryAttempts": 0,
                          "failureReason": "Update Enrolment failure with MmsApiException"
                        }
                      ],
                      "lastId": 3027869
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or missing required information.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Parameters": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid parameters provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/payments/{paymentId}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Fetch Single Subscription Payment",
        "description": "Fetch details of a specific payment associated with a subscription reference ID.",
        "operationId": "fetchSingleSubscriptionPayment",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription.",
              "example": 2568045
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The payment ID whose details are to be fetched.",
              "example": 3027869
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the payment details.",
            "content": {
              "application/json": {
                "examples": {
                  "Fetch Single Subscription Payment Success": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription Payment",
                      "payment": {
                        "paymentId": 2276563,
                        "referenceId": 214308920,
                        "cfOrderId": 236286405,
                        "orderId": "ORD_24534",
                        "subReferenceId": 5513463,
                        "currency": "INR",
                        "amount": 250,
                        "cycle": 5,
                        "status": "INITIALIZED",
                        "remarks": null,
                        "scheduledOn": "2021-09-13",
                        "addedOn": "2021-09-09 11:05:19",
                        "retryAttempts": 0,
                        "failureReason": null,
                        "merchantTxnId": null,
                        "splitDetails": {
                          "scheme": [
                            {
                              "merchantVendorId": "test-vendor-1",
                              "percentage": 10
                            },
                            {
                              "merchantVendorId": "test-vendor-2",
                              "percentage": 10
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or missing required information.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Parameters": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid parameters provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/payments/merchantTxnId/{merchantTxnId}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Fetch Payment by Merchant Transaction ID",
        "description": "Fetch details of a specific payment associated with a given merchant transaction ID.",
        "operationId": "fetchPaymentByMerchantTxnId",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "<x-client-id>"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "<x-client-secret>"
            }
          },
          {
            "name": "merchantTxnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The merchant transaction ID whose payment details are to be fetched.",
              "example": "test-txn-id-4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the payment details.",
            "content": {
              "application/json": {
                "examples": {
                  "Fetch Payment By Merchant Transaction ID Success": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription Payment",
                      "payment": {
                        "paymentId": 121799,
                        "referenceId": 1489904256,
                        "cfOrderId": 3528817,
                        "orderId": "SUB_109826_CHARGE_121799",
                        "subReferenceId": 109826,
                        "currency": "INR",
                        "amount": 1,
                        "cycle": 1,
                        "status": "PENDING",
                        "remarks": null,
                        "scheduledOn": null,
                        "addedOn": "2023-01-18 13:00:38",
                        "retryAttempts": 0,
                        "failureReason": null,
                        "merchantTxnId": "test-txn-id-4",
                        "splitDetails": {
                          "scheme": [
                            {
                              "merchantVendorId": "test-vendor-1",
                              "percentage": 10
                            },
                            {
                              "merchantVendorId": "test-vendor-2",
                              "percentage": 10
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or missing required information.",
            "content": {
              "application/json": {
                "examples": {
                  "Payment Not Found": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Payment Does not exist for merchantTxnId: test-txn-id-4"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/cancel": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Cancel Subscription",
        "description": "Use this API to cancel the subscription. After a successful cancellation, the subscription status will move to \"CANCELLED\", and the customer will no longer be charged. Subscription, once cancelled, cannot be reactivated.",
        "operationId": "cancelSubscription",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription to be cancelled.",
              "example": 2749411
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful cancellation of the subscription.",
            "content": {
              "application/json": {
                "examples": {
                  "Cancel Subscription Success": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription Cancelled"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or missing required information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Invalid subscription reference ID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/pause-subscription": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Pause Subscription",
        "description": "Use this API to temporarily pause a subscription. Once this API is called, the subscription status will be updated to \"PAUSED\". Only a periodic subscription can be paused. To reactivate the subscription, you can use the Activate Subscription API.",
        "operationId": "pauseSubscription",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "clientId123"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "clientSecret456"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription to be paused.",
              "example": 95491
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful pause of the subscription.",
            "content": {
              "application/json": {
                "examples": {
                  "Pause Subscription Success": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription paused successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or subscription type/status.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Subscription Type": {
                    "value": {
                      "error": 400,
                      "message": "subscription type is not periodic"
                    }
                  },
                  "Invalid Subscription Status": {
                    "value": {
                      "error": 400,
                      "message": "invalid subscription status"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/charge": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Charge Subscription",
        "description": "Charge a specific subscription using the provided subscription reference ID.",
        "operationId": "chargeSubscription",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription to be charged.",
              "example": 2596620
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount to be charged.",
                    "example": 1
                  },
                  "scheduledOn": {
                    "type": "string",
                    "format": "date",
                    "description": "Date to schedule the charge.",
                    "example": "2023-01-20"
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Remarks for the charge.",
                    "example": "Charge Subscription"
                  },
                  "merchantTxnId": {
                    "type": "string",
                    "description": "Merchant transaction ID for the charge.",
                    "example": "test-txn-id-888"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful charge of the subscription.",
            "content": {
              "application/json": {
                "examples": {
                  "Charge Subscription Success": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription charge initialized",
                      "payment": {
                        "paymentId": 122129,
                        "cfOrderId": 112234,
                        "referenceId": null,
                        "subReferenceId": 110386,
                        "currency": "INR",
                        "amount": 1,
                        "cycle": 1,
                        "status": "INITIALIZED",
                        "addedOn": "2023-01-19 16:49:49",
                        "retryAttempts": 0,
                        "remarks": "",
                        "failureReason": "",
                        "scheduledOn": "2023-01-20",
                        "initiatedOn": "2023-01-19",
                        "merchantTxnId": "test-txn-id-888"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or subscription state.",
            "content": {
              "application/json": {
                "examples": {
                  "Future Date Error": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Unable to charge subscription | Invalid Schedule On. Date should be future date"
                    }
                  },
                  "Subscription Not Active": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Unable to charge subscription | subscription is not active"
                    }
                  },
                  "Invalid Charge Amount": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Unable to charge subscription | Cannot charge more than Max Amount of the Subscription"
                    }
                  },
                  "Invalid Merchant ID": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Unable to charge subscription | MerchantTxnId: testtxnID already exists"
                    }
                  },
                  "Invalid Merchant ID Format": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Unable to charge subscription | merchantTxnId : allows only alpha numerics,dot,hyphen,underscore"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/charge-retry": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Retry Subscription Charge",
        "description": "Applicable only for Periodic Subscriptions. Use this API to retry the last failed payment for a subscription in ON HOLD state. On a successful retry, the subscription gets activated. Use the Retry API when the subscription debit has failed at your customer's end. Only one retry attempt is allowed per day and 3 retry attempts are allowed for a failed transaction within the cycle. Retry is not allowed if the current cycle expires.",
        "operationId": "retrySubscriptionCharge",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription to retry the charge.",
              "example": 2646214
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nextScheduledOn": {
                    "type": "string",
                    "format": "date",
                    "description": "Date for the next scheduled retry.",
                    "example": "2021-12-17"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful retry of the subscription charge.",
            "content": {
              "application/json": {
                "examples": {
                  "Retry Subscription Charge Success": {
                    "value": {
                      "status": "OK",
                      "subStatus": "ON_HOLD",
                      "payment": {
                        "paymentId": 3293789,
                        "amount": 1,
                        "status": "PENDING",
                        "addedOn": "2021-12-17 08:41:30",
                        "retryAttempts": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing parameters or invalid subscription state.",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Scheduled Date": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "scheduledOn is mandatory for the payment mode"
                    }
                  },
                  "OnDemand Subscription Retry Error": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Retrying on on-demand plans not allowed, Please try to create another on-demand charges"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/mandate/port": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Port Mandate",
        "description": "Use this API to import an existing mandate into the Cashfree subscription system. This is applicable where mandates are already created with another provider or system. By porting the mandate, you can manage the subscription within Cashfree's ecosystem.",
        "operationId": "portMandate",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerDetails": {
                    "type": "object",
                    "description": "Details of the customer.",
                    "properties": {
                      "customerEmail": {
                        "type": "string",
                        "description": "Email of the customer.",
                        "example": "john.doe@gmail.com"
                      },
                      "customerPhone": {
                        "type": "string",
                        "description": "Phone number of the customer.",
                        "example": "9999999999"
                      },
                      "debitAccountNumber": {
                        "type": "string",
                        "description": "Customer's bank account number.",
                        "example": "1234567890"
                      },
                      "debitAccountHolderName": {
                        "type": "string",
                        "description": "Name of the account holder.",
                        "example": "John Doe"
                      },
                      "debitBankId": {
                        "type": "string",
                        "description": "Bank code (e.g., SBIN for State Bank of India).",
                        "example": "SBIN"
                      },
                      "debitAccountType": {
                        "type": "string",
                        "description": "Type of the account (e.g., SAVINGS or CURRENT).",
                        "example": "SAVINGS"
                      }
                    }
                  },
                  "subscriptionDetails": {
                    "type": "object",
                    "description": "Details of the subscription.",
                    "properties": {
                      "umrn": {
                        "type": "string",
                        "description": "Unique Mandate Reference Number (UMRN) of the existing mandate.",
                        "example": "SBIN0000000000000000"
                      },
                      "paymentType": {
                        "type": "string",
                        "description": "Type of mandate (e.g., E_MANDATE).",
                        "example": "E_MANDATE"
                      },
                      "fixedAmount": {
                        "type": "number",
                        "description": "Fixed amount for the subscription (if applicable).",
                        "example": 10
                      },
                      "maxAmount": {
                        "type": "number",
                        "description": "Maximum amount allowed for the subscription.",
                        "example": 100
                      },
                      "portingFrequency": {
                        "type": "string",
                        "description": "Frequency of the subscription (e.g., MNTH for monthly Periodic subscription, ADHO for On-Demand subscription).",
                        "example": "MNTH"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the subscription.",
                        "example": "2025-03-28"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date",
                        "description": "End date of the subscription.",
                        "example": "2025-08-04"
                      },
                      "maxCycles": {
                        "type": "integer",
                        "description": "Maximum number of cycles for the subscription.",
                        "example": 10
                      },
                      "subscriptionId": {
                        "type": "string",
                        "description": "Unique ID for the subscription.",
                        "example": "subs-import-mandate"
                      },
                      "firstChargeDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of the first charge for the subscription (Required for periodic subscriptions).",
                        "example": "2025-04-03"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mandate ported successfully.",
            "content": {
              "application/json": {
                "examples": {
                  "Port Mandate Success": {
                    "value": {
                      "status": "OK",
                      "message": "Mandate Porting Successful",
                      "data": {
                        "subReferenceId": 12345,
                        "subscriptionId": "subs-import-mandate",
                        "status": "ACTIVE"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or missing fields.",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Parameters": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid or missing parameters in the request."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/physical-mandate-file/upload": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Upload Physical Mandate File",
        "description": "Use this API to upload the Physical Nach registration forms that contain your customer’s bank account details and signature. Use the fileId you get in the response in the \"Create Auth Seamless PhysicalMandate API\".",
        "operationId": "uploadPhysicalMandateFile",
        "parameters": [
          {
            "name": "x-client-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "x-client-id"
            }
          },
          {
            "name": "x-client-secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "x-client-secret"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The physical mandate file to be uploaded.",
                    "example": "@/Users/abcd/Documents/pnach/250723/file.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful upload of the physical mandate file.",
            "content": {
              "application/json": {
                "examples": {
                  "File Upload Success": {
                    "value": {
                      "status": 200,
                      "message": "File Uploaded Successfully",
                      "data": {
                        "pNachFileId": "1475380791"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid file size or format.",
            "content": {
              "application/json": {
                "examples": {
                  "File Size Exceeded": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "File Size exceeded."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/{subReferenceId}/activate": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Activate Subscription",
        "description": "Use this API to activate a subscription that is in ONHOLD state. For periodic subscriptions, the next charge date is calculated for the next cycle.",
        "operationId": "activateSubscription",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription to be activated.",
              "example": 2646214
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nextScheduledOn": {
                    "type": "string",
                    "format": "date",
                    "description": "The next scheduled date for the subscription activation.",
                    "example": "2021-12-17"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful activation of the subscription.",
            "content": {
              "application/json": {
                "examples": {
                  "Activate Subscription Success": {
                    "value": {
                      "status": "OK",
                      "subStatus": "ACTIVE",
                      "subscriptionResponse": {
                        "subReferenceId": 123456,
                        "subscriptionId": "testabcd",
                        "planId": "test_demo",
                        "customerPhone": "9876543210",
                        "customerName": "John Doe",
                        "customerEmail": "abc@gmail.com",
                        "addedOn": "2021-02-24 11:15:10"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or subscription state.",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Next Scheduled Date": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "nextScheduledOn is mandatory for activation."
                    }
                  },
                  "Invalid Subscription State": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Subscription cannot be activated due to its current state."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscription/{subReferenceId}/charge/{chargeId}/cancel": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Cancel Subscription Charge",
        "description": "Use this API to cancel a transaction that is in the INITIALIZED state.",
        "operationId": "cancelSubscriptionCharge",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "subReferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The reference ID of the subscription.",
              "example": 123456
            }
          },
          {
            "name": "chargeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the charge to be cancelled.",
              "example": 9876543
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful cancellation of the subscription charge.",
            "content": {
              "application/json": {
                "examples": {
                  "Cancel Charge Success": {
                    "value": {
                      "status": "OK",
                      "message": "Subscription charge cancelled",
                      "payment": {
                        "paymentId": 2276563,
                        "referenceId": 214308920,
                        "subReferenceId": 5513463,
                        "cfOrderId": 236286405,
                        "currency": "INR",
                        "amount": 250,
                        "cycle": 5,
                        "status": "CANCELLED",
                        "remarks": null,
                        "scheduledOn": "2021-09-13",
                        "addedOn": "2021-09-09 11:05:19",
                        "retryAttempts": 0,
                        "failureReason": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Subscription or Charge ID": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid subscription or charge ID provided."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/charge/{paymentId}/simulate": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Charge Status",
        "description": "Use this API to update the status of the charge from PENDING to SUCCESS or FAILED. This is applicable only in the test environment.",
        "operationId": "updateChargeStatus",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the payment whose status is being updated.",
              "example": 120322
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The new status of the payment.",
                    "enum": [
                      "SUCCESS",
                      "FAILED"
                    ],
                    "example": "SUCCESS"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update of the charge status.",
            "content": {
              "application/json": {
                "examples": {
                  "Update Charge Success": {
                    "value": {
                      "status": "OK",
                      "message": "Update Charge - Simulator",
                      "chargeResponse": {
                        "paymentId": 120322,
                        "status": "SUCCESS"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or status change.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Status Change": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Charge status cannot be changed from INITIALIZED to SUCCESS"
                    }
                  },
                  "Repeating Status Change": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Charge status cannot be changed from SUCCESS to SUCCESS"
                    }
                  },
                  "Invalid Payment ID": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Payment does not exist for id: 121322"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/charge/{paymentId}/transaction-return-summary/generate": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Generate Transaction Return Summary",
        "description": "Use this API to generate transaction return summary for failed transactions (insufficient balance). You will have to hit the API again to check the status of the transaction return summary, or go to the [Merchant Dashboard](https://merchant.cashfree.com/merchants) and download the same.",
        "operationId": "generateTransactionReturnSummary",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the payment whose transaction return summary is to be generated.",
              "example": 123456
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful generation of the transaction return summary.",
            "content": {
              "application/json": {
                "examples": {
                  "Status Generated": {
                    "value": {
                      "status": 200,
                      "message": "Transaction return summary status fetched successfully.",
                      "data": {
                        "paymentId": 123456,
                        "status": "GENERATED",
                        "link": "<download-link>"
                      }
                    }
                  },
                  "Status Initialized": {
                    "value": {
                      "status": 200,
                      "message": "Transaction return summary status fetched successfully.",
                      "data": {
                        "paymentId": 123456,
                        "status": "INITIALIZED"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or payment ID.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Payment": {
                    "value": {
                      "title": "REQUEST_INVALID",
                      "detail": "Payment is not valid for bounce memo generation.",
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Payment is not valid for bounce memo generation."
                    }
                  },
                  "Payment Does Not Exist": {
                    "value": {
                      "title": "PAYMENT_DOES_NOT_EXIST_EXCEPTION",
                      "detail": "Payment Does not exist for id: 235123",
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Payment Does not exist for id: 235123"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscription-plans": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Create a Subscription Plan",
        "description": "Use this API to create a new plan. Provide the planId, planName, and the plan type(PERIODIC/ON_DEMAND).",
        "operationId": "createSubscriptionPlan",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "asdf1234"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "qwer9876"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planId": {
                    "type": "string",
                    "description": "Unique ID for the subscription plan.",
                    "example": "1682406696"
                  },
                  "planName": {
                    "type": "string",
                    "description": "Name of the subscription plan.",
                    "example": "Plan 1682406656"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the subscription plan.",
                    "enum": [
                      "PERIODIC",
                      "ON_DEMAND"
                    ],
                    "example": "PERIODIC"
                  },
                  "recurringAmount": {
                    "type": "number",
                    "description": "Recurring amount for the plan.",
                    "example": 10
                  },
                  "maxAmount": {
                    "type": "number",
                    "description": "Maximum amount for the plan.",
                    "example": 100
                  },
                  "intervals": {
                    "type": "integer",
                    "description": "Number of intervals for the periodic plan.",
                    "example": 1
                  },
                  "intervalType": {
                    "type": "string",
                    "description": "Interval type for the periodic plan.",
                    "enum": [
                      "day",
                      "week",
                      "month",
                      "year"
                    ],
                    "example": "month"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscription plan created successfully.",
            "content": {
              "application/json": {
                "examples": {
                  "Periodic Plan": {
                    "value": {
                      "message": "Plan created successfully",
                      "status": "OK",
                      "data": {
                        "planId": "1682406696",
                        "planName": "Plan 1682406656",
                        "type": "PERIODIC",
                        "currency": "INR",
                        "amount": 10,
                        "maxAmount": 100,
                        "intervals": 1,
                        "intervalType": "month",
                        "isActive": true,
                        "addedOn": "2023-04-25 13:50:17"
                      }
                    }
                  },
                  "On Demand Plan": {
                    "value": {
                      "message": "Plan created successfully",
                      "status": "OK",
                      "data": {
                        "planId": "1682222986",
                        "planName": "Plan 1682406656",
                        "type": "ON_DEMAND",
                        "currency": "INR",
                        "maxAmount": 100,
                        "isActive": true,
                        "addedOn": "2023-04-25 13:54:39"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or missing fields.",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid Plan ID": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "planId : allows only alpha numerics,dot,hyphen,underscore"
                    }
                  },
                  "Plan Already Exists": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "PlanId: 100 already exists"
                    }
                  },
                  "Missing Fields": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "reason": "planId is missing in the request, planName is missing in the request, type is missing in the request."
                    }
                  },
                  "Invalid Amount": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid Amount for Periodic Plan"
                    }
                  },
                  "Invalid Interval Type": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Invalid Interval Type for Periodic Plan"
                    }
                  },
                  "Payment Type Missing": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "reason": "paymentType is missing in the request."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/subscriptions/nonSeamless/subscription": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Create a Subscription",
        "description": "Use this API to create a subscription by specifying the plan ID or plan Info and customer details.You can also specify the bank account information when you create the subscription to ensure that mandates are created via the specified bank account only. TPV is applicable only for eNACH and UPI Autopay. The Auth Link received in the response will be redirected to a link hosted on cashfree.com. Once the authorization is complete, your customer will be redirected to returnUrl. Store the subReferenceId as this is the unique ID generated by Cashfree Payments for the subscription and will be required for subsequent operations.",
        "operationId": "createSubscription",
        "parameters": [
          {
            "name": "X-Client-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client ID provided by Cashfree.",
              "example": "14443641"
            }
          },
          {
            "name": "X-Client-Secret",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Secret provided by Cashfree.",
              "example": "a477ed7e"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionId": {
                    "type": "string",
                    "description": "Unique ID for the subscription.",
                    "example": "DemoSubscriptionq"
                  },
                  "customerName": {
                    "type": "string",
                    "description": "Customer's name for the subscription.",
                    "example": "John Doe"
                  },
                  "customerPhone": {
                    "type": "string",
                    "description": "Customer's phone number.",
                    "example": "9999900000"
                  },
                  "customerEmail": {
                    "type": "string",
                    "description": "Customer's email address.",
                    "example": "john@gmail.com"
                  },
                  "returnUrl": {
                    "type": "string",
                    "description": "URL to which the customer is redirected after the subscription process.",
                    "example": "www.google.com"
                  },
                  "authAmount": {
                    "type": "number",
                    "description": "Authorization amount for subscription.",
                    "example": 10
                  },
                  "expiresOn": {
                    "type": "string",
                    "description": "Expiry date of the subscription.",
                    "example": "2024-12-02 09:20:12"
                  },
                  "tpvEnabled": {
                    "type": "boolean",
                    "description": "Flag to enable TPV (Third Party Verification).",
                    "example": true
                  },
                  "payerAccountDetails": {
                    "type": "object",
                    "description": "Details of the payer's account if TPV is enabled.",
                    "properties": {
                      "accountNumber": {
                        "type": "string",
                        "description": "Account number of the payer.",
                        "example": "0123456789"
                      },
                      "accountHolderName": {
                        "type": "string",
                        "description": "Account holder's name.",
                        "example": "John Doe"
                      },
                      "bankId": {
                        "type": "string",
                        "description": "Bank identifier for the payer's bank.",
                        "example": "ICIC"
                      },
                      "accountType": {
                        "type": "string",
                        "description": "Type of the bank account (e.g., SAVINGS).",
                        "example": "SAVINGS"
                      },
                      "ifsc": {
                        "type": "string",
                        "description": "IFSC code of the bank.",
                        "example": "ICIC0000001"
                      }
                    }
                  },
                  "planInfo": {
                    "type": "object",
                    "description": "Information regarding the plan.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of subscription plan.",
                        "enum": [
                          "PERIODIC",
                          "ON_DEMAND"
                        ],
                        "example": "ON_DEMAND"
                      },
                      "planName": {
                        "type": "string",
                        "description": "Name of the subscription plan.",
                        "example": "abcede"
                      },
                      "maxAmount": {
                        "type": "number",
                        "description": "Maximum amount for the subscription plan.",
                        "example": 1000
                      },
                      "maxCycles": {
                        "type": "integer",
                        "description": "Maximum number of cycles for the subscription.",
                        "example": 10
                      },
                      "linkExpiry": {
                        "type": "integer",
                        "description": "Number of days after which the link expires.",
                        "example": 5
                      },
                      "intervalType": {
                        "type": "string",
                        "description": "Interval type for periodic subscriptions (e.g., MONTH).",
                        "example": "MONTH"
                      },
                      "recurringAmount": {
                        "type": "number",
                        "description": "Recurring amount for periodic subscriptions.",
                        "example": 100
                      },
                      "intervals": {
                        "type": "integer",
                        "description": "Number of intervals for periodic subscriptions.",
                        "example": 2
                      }
                    }
                  },
                  "notificationChannels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Notification channels for updates.",
                    "example": [
                      "EMAIL",
                      "SMS"
                    ]
                  },
                  "splitDetails": {
                    "type": "object",
                    "description": "Details regarding payment split between different vendors.",
                    "properties": {
                      "scheme": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "merchantVendorId": {
                              "type": "string",
                              "description": "ID of the vendor.",
                              "example": "test-vendor-1"
                            },
                            "percentage": {
                              "type": "integer",
                              "description": "Percentage of payment to be split.",
                              "example": 10
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "CreateSubscriptionWithoutTPV": {
                  "summary": "Create On-Demand Subscription without TPV Enabled",
                  "value": {
                    "subscriptionId": "DemoSubscriptionq",
                    "customerName": "John Doe",
                    "customerPhone": "9999900000",
                    "customerEmail": "john@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 10,
                    "expiresOn": "2024-12-02 09:20:12",
                    "planInfo": {
                      "type": "ON_DEMAND",
                      "planName": "abcede",
                      "maxAmount": 1000,
                      "maxCycles": 10,
                      "linkExpiry": 5
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ]
                  }
                },
                "CreateSubscriptionWithTPV": {
                  "summary": "Create On-Demand Subscription with TPV Enabled",
                  "value": {
                    "subscriptionId": "DemoSubscriptionq",
                    "customerName": "John Doe",
                    "customerPhone": "9999900000",
                    "customerEmail": "john@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 10,
                    "expiresOn": "2024-12-02 09:20:12",
                    "tpvEnabled": true,
                    "payerAccountDetails": {
                      "accountNumber": "0123456789",
                      "accountHolderName": "John Doe",
                      "bankId": "ICIC",
                      "accountType": "SAVINGS",
                      "ifsc": "ICIC0000001"
                    },
                    "planInfo": {
                      "type": "ON_DEMAND",
                      "planName": "abcede",
                      "maxAmount": 1000,
                      "maxCycles": 10,
                      "linkExpiry": 5
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ]
                  }
                },
                "CreateSubscriptionWithSplitDetails": {
                  "summary": "Create On-Demand Subscription with Split Details",
                  "value": {
                    "subscriptionId": "DemoSubscriptionq",
                    "customerName": "John Doe",
                    "customerPhone": "9999900000",
                    "customerEmail": "john@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 10,
                    "expiresOn": "2024-12-02 09:20:12",
                    "planInfo": {
                      "type": "ON_DEMAND",
                      "planName": "abcede",
                      "maxAmount": 1000,
                      "maxCycles": 10,
                      "linkExpiry": 5
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ],
                    "splitDetails": {
                      "scheme": [
                        {
                          "merchantVendorId": "test-vendor-1",
                          "percentage": 10
                        },
                        {
                          "merchantVendorId": "test-vendor-2",
                          "percentage": 10
                        }
                      ]
                    }
                  }
                },
                "CreatePeriodicSubscriptionWithoutTPV": {
                  "summary": "Create Periodic Subscription without TPV Enabled",
                  "value": {
                    "subscriptionId": "DemoSubscription",
                    "customerName": "John Doe",
                    "customerPhone": "9999900000",
                    "customerEmail": "john@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 10,
                    "expiresOn": "2024-12-02 09:20:12",
                    "firstChargeDate": "2023-12-02",
                    "planInfo": {
                      "type": "PERIODIC",
                      "intervalType": "MONTH",
                      "planName": "abcede",
                      "maxAmount": 1000,
                      "intervals": 2,
                      "recurringAmount": 100,
                      "maxCycles": 10,
                      "linkExpiry": 5
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ]
                  }
                },
                "CreatePeriodicSubscriptionWithTPV": {
                  "summary": "Create Periodic Subscription with TPV Enabled",
                  "value": {
                    "subscriptionId": "DemoSubscription",
                    "customerName": "John Doe",
                    "customerPhone": "9999900000",
                    "customerEmail": "john@gmail.com",
                    "returnUrl": "www.google.com",
                    "authAmount": 10,
                    "expiresOn": "2024-12-02 09:20:12",
                    "firstChargeDate": "2023-12-02",
                    "tpvEnabled": true,
                    "payerAccountDetails": {
                      "accountNumber": "0123456789",
                      "accountHolderName": "John Doe",
                      "bankId": "ICIC",
                      "accountType": "SAVINGS",
                      "ifsc": "ICIC0000001"
                    },
                    "planInfo": {
                      "type": "PERIODIC",
                      "intervalType": "MONTH",
                      "planName": "abcede",
                      "maxAmount": 1000,
                      "intervals": 2,
                      "recurringAmount": 100,
                      "maxCycles": 10
                    },
                    "notificationChannels": [
                      "EMAIL",
                      "SMS"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscription created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status.",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "description": "Message indicating the status of the subscription creation.",
                      "example": "Subscription Created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subReferenceId": {
                          "type": "integer",
                          "description": "Reference ID for the subscription.",
                          "example": 1234
                        },
                        "authLink": {
                          "type": "string",
                          "description": "Authorization link for the subscription.",
                          "example": "https://cfre.in/wjnwdj3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters or validation issues.",
            "content": {
              "application/json": {
                "examples": {
                  "RecurringAmountError": {
                    "summary": "Recurring Amount Error",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Recurring amount cannot be greater than mandate amount"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the API call.",
                      "example": "ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message.",
                      "example": "Server encountered an unexpected condition."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}