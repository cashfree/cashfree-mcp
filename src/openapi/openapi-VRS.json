{
  "openapi": "3.0.0",
  "info": {
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "email": "developers@cashfree.com",
      "name": "API Support",
      "url": "https://discord.com/invite/QdZkNSxXsB"
    },
    "title": "Cashfree Verification API's.",
    "version": "2023-12-18",
    "description": "Cashfree's Verification APIs provide different types of verification to our merchants."
  },
  "servers": [
    {
      "description": "Test Server",
      "url": "https://sandbox.cashfree.com/verification"
    },
    {
      "description": "Production Server",
      "url": "https://api.cashfree.com/verification"
    }
  ],
  "tags": [
    {
      "name": "Aadhaar",
      "description": "Operations related to Aadhaar verification."
    },
    {
      "name": "BAV V2",
      "description": "Operations related to Bank account verification v2."
    },
    {
      "name": "PAN",
      "description": "Operations related to PAN verification."
    },
    {
      "name": "Digilocker",
      "description": "Operations related to Digilocker verification."
    },
    {
      "name": "E-sign",
      "description": "Operations related to E-sign verification."
    },
    {
      "name": "Reverse Penny Drop",
      "description": "Operations related to Reverse Penny Drop verification."
    },
    {
      "name": "IP",
      "description": "Operation related to IP verification."
    },
    {
      "name": "UPI",
      "description": "Operations related to UPI verification."
    },
    {
      "name": "Passport",
      "description": "Operation related to Passport verification."
    },
    {
      "name": "CIN",
      "description": "Operation related to CIN verification."
    },
    {
      "name": "Name Match",
      "description": "Operation related to Name Match verification."
    },
    {
      "name": "PAN to GSTIN",
      "description": "Operation related to PAN to GSTIN."
    },
    {
      "name": "Face Match",
      "description": "Operation related to Face Match verification."
    },
    {
      "name": "Voter ID",
      "description": "Operation related to Voter ID verification."
    },
    {
      "name": "Reverse Geocoding",
      "description": "Operation related to Reverse Geocoding."
    },
    {
      "name": "Liveliness",
      "description": "Operation related to Liveliness."
    },
    {
      "name": "Vehicle RC",
      "description": "Operation related to Vehicle RC verification."
    },
    {
      "name": "Driving License",
      "description": "Operation related to Driving License verification."
    },
    {
      "name": "GSTIN",
      "description": "Operation related to GSTIN verification."
    },
    {
      "name": "Account Aggregator",
      "description": "Operations related to Account aggregator."
    },
    {
      "name": "OTPLess",
      "description": "Operations related to OTPLess Verification."
    },
    {
      "name": "Secure-Share",
      "description": "Operations related to secure-share."
    },
    {
      "name": "BharatOCR",
      "description": "Operations related to BharatOCR."
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "XClientID": {
        "type": "apiKey",
        "in": "header",
        "name": "x-client-id",
        "description": "Client ID. You can find your ID in the [Merchant Dashboard](https://merchant.cashfree.com/verificationsuite/developers/api-keys)."
      },
      "XClientSecret": {
        "type": "apiKey",
        "in": "header",
        "name": "x-client-secret",
        "description": "Client secret key. You can find your secret key in the [Merchant Dashboard](https://merchant.cashfree.com/verificationsuite/developers/api-keys)."
      },
      "UVXClientID": {
        "type": "apiKey",
        "in": "header",
        "name": "x-client-id",
        "description": "Client ID. You can find your ID in the [Merchant Dashboard](https://merchant.cashfree.com/verificationsuite/secure-share)."
      },
      "UVXClientSecret": {
        "type": "apiKey",
        "in": "header",
        "name": "x-client-secret",
        "description": "Client secret key. You can find your secret key in the [Merchant Dashboard](https://merchant.cashfree.com/verificationsuite/secure-share)."
      }
    },
    "schemas": {
      "BharatOCRRequestSchema": {
        "description": "Request parameters for BharatOCR.",
        "type": "object",
        "example": {
          "verification_id": "test_verification_id",
          "document_tag": "PAN",
          "file": "abc",
          "file_url": "https://linkofFile",
          "do_verification": true
        },
        "required": [
          "verification_id",
          "document_type",
          "file",
          "file_url"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id",
            "default": "test_verification_id"
          },
          "document_type": {
            "type": "string",
            "description": "Tag depicts the document type of the file being shared in the request. Allowed values are PAN, AADHAAR, DRIVING_LICENCE, VOTER_ID, PASSPORT, VEHICLE_RC, CANCELLED_CHEQUE, and INVOICE.",
            "example": "PAN",
            "default": "PAN"
          },
          "file": {
            "format": "binary",
            "description": "Image of the document. Allowed file types: JPEG, JPG, or PNG. The maximum file size is 5 MB. Conditionally required when image_url is missing.",
            "type": "string",
            "example": "image"
          },
          "file_url": {
            "type": "string",
            "description": "Public URL of the image. Allowed only https URL. Allowed file types: JPEG, JPG, or PNG. The maximum file size is 5 MB. Conditionally required when the image is missing.",
            "example": "https://linkofFile",
            "default": "file_url"
          },
          "do_verification": {
            "type": "boolean",
            "description": "Indicates whether PAN verification should be performed. When set to `true`, the API validates the individual's PAN details, including the unique identifier, name, date of birth, and other relevant information. This verification assists in customer onboarding, KYC compliance, and fraud prevention. Defaults to `false`.",
            "example": "true",
            "default": "false"
          }
        }
      },
      "BharatOCRResponseSchema": {
        "description": "Success response for retrieving the list of information associated with the mobile number.",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID shared by the merchant for each request.",
            "example": "test_verification_id"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": 1358
          },
          "document_type": {
            "type": "string",
            "description": "The field will show the document_type shared or predicted if it is not shared in the request.",
            "example": "VOTED_ID"
          },
          "document_fields": {
            "type": "object",
            "description": "Structure with all the relevant fields in the input image.",
            "properties": {
              "voter_id_number": {
                "type": "string",
                "description": "It displays the voter id number.",
                "example": "ABC1234567"
              },
              "name": {
                "type": "string",
                "description": "It displays the name of the voter id holder.",
                "example": "John Doe"
              },
              "guardian_name": {
                "type": "string",
                "description": "It displays the name of the guardian of the voter id holder",
                "example": "Josh Doe"
              },
              "gender": {
                "type": "string",
                "description": "It displays the gender of the voter ID holder.",
                "example": "Male"
              },
              "date_of_birth": {
                "type": "string",
                "description": "It displays the date of birth of the ID holder.",
                "example": "2001-10-02"
              },
              "address": {
                "type": "string",
                "description": "It displays the address of the voter ID holder.",
                "example": "Floor 1, Vaishnavi summit, Koramanagala Block 3, Bengaraluru, Karnataka"
              },
              "date_of_issue": {
                "type": "string",
                "description": "It displays the date of issue of the voter ID.",
                "example": "2023-08-15"
              }
            }
          },
          "quality_checks": {
            "type": "object",
            "description": "Contains all the quality checks the product performs on the given input image.",
            "properties": {
              "blur": {
                "type": "boolean",
                "description": "Conveys whether the image is blurred or not.",
                "example": false
              },
              "partially_present": {
                "type": "boolean",
                "description": "Conveys whether the image is partially present or not.",
                "example": false
              },
              "black_and_white": {
                "type": "boolean",
                "description": "Conveys if the image is black and white.",
                "example": true
              },
              "face_present": {
                "type": "boolean",
                "description": "Conveys whether the document in the image has a face present.",
                "example": true
              },
              "qr_present": {
                "type": "boolean",
                "description": "Conveys whether the document in the image has a QR.",
                "example": false
              }
            }
          },
          "fraud_checks": {
            "type": "object",
            "description": "It displays the personal information of the mobile number holder.",
            "properties": {
              "is_screenshot": {
                "type": "boolean",
                "description": "Conveys true if the image input is a screenshot.",
                "example": false
              },
              "is_photo_of_screen": {
                "type": "boolean",
                "description": "Conveys true if the input photo is the photo of a screen.",
                "example": false
              }
            }
          },
          "verification_details": {
            "type": "object",
            "description": "It displays the personal information of the mobile number holder.",
            "properties": {
              "reference_id": {
                "type": "integer",
                "description": "It displays the unique ID created by Cashfree Payments for reference purposes."
              },
              "pan": {
                "type": "string",
                "description": "It is the unique 10-character alphanumeric identifier of the individual issued by the Income Tax Department. The first 5 should be alphabets followed by 4 numbers and the 10th character should again be an alphabet.",
                "example": "ABCTY1234D"
              },
              "name": {
                "type": "string",
                "description": "It is the name of the individual as per the PAN information",
                "example": "John Doe"
              },
              "dob": {
                "type": "string",
                "description": "It is the date of birth of the individual as per the PAN information. The format is YYYY-MM-DD",
                "example": "1993-06-30"
              },
              "name_match": {
                "type": "string",
                "description": "It displays the result of name match verification.\nThe possible values are:\n- `Y` : The name entered matches with the name present on the PAN.\n- `N` : The name entered does not match with the name present on the PAN.",
                "example": "Y"
              },
              "dob_match": {
                "type": "string",
                "description": "It displays the result of the date of birth verification. \nThe possible values are:\n- `Y` : The date of birth of the individual matches with the date of birth present on PAN.\n- `N` : The date of birth of the individual does not match with the date of birth present on PAN.",
                "example": "Y"
              },
              "pan_status": {
                "type": "string",
                "description": "It displays the status of the PAN information.\nThe possible values are:\n\n  - `E` : The entered PAN information is valid.\n\n  - `EC`: The entered PAN information exists and is valid but marked as Acquisition.\n\n  - `N` : The entered PAN information does not exist in the database.\n\n  - `X` : The entered PAN information has been deactivated.\n\n  - `F` : The entered PAN information is fake.\n\n  - `D` : The entered PAN information has been deleted.\n\n  - `EA` : The entered PAN information is valid but marked as Amalgamation.\n\n  - `ED` : The entered PAN information is valid but marked as Death.\n\n  - `EI` : The entered PAN information is valid but marked as Dissolution.\n\n  - `EL` : The entered PAN information is valid but marked as Liquidated.\n\n  - `EM` : The entered PAN information is valid but marked as Merger.\n\n  - `EP` : The entered PAN information is valid but marked as Partition.\n\n  - `ES` : The entered PAN information is valid but marked as Split.\n\n  - `EU` : The entered PAN information is valid but marked as Under Liquidation.",
                "example": "E"
              },
              "status": {
                "type": "string",
                "description": "It displays status of PAN. \nThe Possible Values are:\n- `VALID`\n- `INVALID`",
                "example": "VALID"
              },
              "aadhaar_seeding_status": {
                "type": "string",
                "description": "It displays whether the individual linked the aadhaar information with PAN. \nThe possible values are:\n- `Y`: Aadhaar is linked to PAN\n- `R`: Aadhaar is not linked to PAN\n- `NA`: Not applicable, in case of business PAN",
                "example": "Y"
              },
              "aadhaar_seeding_status_desc": {
                "type": "string",
                "description": "It displays additional information of the linking of aadhaar and PAN card.",
                "example": "Aadhaar is linked to PAN"
              }
            }
          }
        }
      },
      "Scope": {
        "type": "object",
        "properties": {
          "scope": {
            "description": "This describes the scope for which the user has provided consent.",
            "type": "string",
            "example": "MOBILE"
          },
          "records": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Mobile_Record"
                },
                {
                  "$ref": "#/components/schemas/Email_Record"
                },
                {
                  "$ref": "#/components/schemas/Address_Record"
                },
                {
                  "$ref": "#/components/schemas/Gender_Record"
                },
                {
                  "$ref": "#/components/schemas/DOB_Record"
                },
                {
                  "$ref": "#/components/schemas/Aadhaar_Record"
                },
                {
                  "$ref": "#/components/schemas/PAN_Record"
                },
                {
                  "$ref": "#/components/schemas/BAV_Record"
                },
                {
                  "$ref": "#/components/schemas/Name_Record"
                },
                {
                  "$ref": "#/components/schemas/Occupation_Record"
                },
                {
                  "$ref": "#/components/schemas/Income_Record"
                }
              ]
            }
          }
        }
      },
      "GenerateKYCLinkRequestSchema": {
        "description": "Request Body Schema for Generate KYC Link",
        "type": "object",
        "required": [
          "phone",
          "template_name",
          "verification_id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "It is the name of the individual.",
            "example": "John Doe"
          },
          "phone": {
            "type": "string",
            "description": "It is the phone number of the individual.",
            "example": "9999999999"
          },
          "email": {
            "type": "string",
            "description": "It is the email address of the individual.",
            "example": "test@cashfree.com"
          },
          "template_name": {
            "type": "string",
            "description": "It is the name of the template you created using the merchant dashboard. You can also use the default template found there to generate the verification form. The default template is Aadhaar_verification. Using merchant dashboard, customized KYC Link templates can be created.",
            "example": "Aadhaar_verification"
          },
          "link_expiry": {
            "type": "string",
            "description": "It is the expiry date of the link. Its value can be max 30 days from the current date.",
            "example": "2025-06-01"
          },
          "notification_types": {
            "type": "array",
            "description": "It is the type(s) of notification used for sending the link.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/smsString"
                },
                {
                  "$ref": "#/components/schemas/emailString"
                },
                {
                  "$ref": "#/components/schemas/whatsappString"
                }
              ]
            }
          },
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you created to identify the KYC link.",
            "example": "ABC00123"
          }
        }
      },
      "GenerateFormLinkResponseSchema": {
        "description": "Find the success response of Generate KYC Link",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "It displays the name of the individual.",
            "example": "John Doe"
          },
          "phone": {
            "type": "string",
            "description": "It displays the phone number of the individual.",
            "example": "9999999999"
          },
          "email": {
            "type": "string",
            "description": "It displays the email address of the individual.",
            "example": "test@cashfree.com"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identity the form.",
            "example": "ABC00123"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": 235461
          },
          "form_link": {
            "type": "string",
            "description": "It displays the URL of the KYC Link.",
            "example": "https://forms-test.cashfree.com/verification/Y7tpcan5ksm0"
          },
          "form_status": {
            "type": "string",
            "description": "It displays the status of the form.",
            "example": "RECEIVED"
          }
        }
      },
      "StaticKYCLinkRequestSchema": {
        "description": "Request Body Schema for Generate Static KYC Link",
        "type": "object",
        "example": {
          "template_name": "Aadhaar_verification"
        },
        "required": [
          "template_name"
        ],
        "properties": {
          "template_name": {
            "type": "string",
            "description": "It is the name of the template you created using the merchant dashboard. You can also use the default template found there to generate the static KYC link. The default template is Aadhaar_verification. Using merchant dashboard, customized KYC Link templates can be created.",
            "example": "Aadhaar_verification"
          }
        }
      },
      "GenerateFormLinkQRCodeResponseSchema": {
        "description": "Find the success response of Generate Static KYC Link",
        "type": "object",
        "properties": {
          "static_link": {
            "type": "string",
            "description": "It displays the URL of the static KYC Link.",
            "example": "https://forms.cashfree.com/verification/global-link/Y7tpcan5ksm0"
          },
          "qr_code": {
            "type": "string",
            "description": "It displays the generated QR code link to the static KYC Link. request.",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAQAAAAEAAQMAAABmvDolAAAABlBMVEX///8AAABVwtN+AAACuklEQVR42uyYwa3jMAxEx/CBR5WgTqzGgtiBG5M7UQk66mB4FkP/3WR/A5aB8PZ/3sGUqOGQ+MY3bhhGklsd6sAdiAASJgz6b70RUADLQQgiuaMBqQ0VGHsCSMvhwFBHrvqDDRjqzLUzYCPrwLWM1FG3qU+g6sMfXg9G5hsCgG3MmOtMFoAZiduviroaOJ/eFF71EdeyR8tt0uX8epuXAh4DDzzDSnKknXX9f1wMWEFSCYRXncsjjjpstkTW911cDkCqNbk+PACMhZ5DOMJ6K8Cy5ZDxDIv/bLTsijJ2BbBNyiOsBbqLZAcSX3XuB1CxSBJ+pHiH0bY2cPnQh8sBxJY8hwOIe1T3NfIIR+CNAKmFNwhZhkck9TaZw8c5XA/o6bUpSHnnMlMFw8MEPNANIOV1uzhz5YIdlpUF0BVQSOiYn3p6UL9QA6nP8OEfrgZ01N55l7DEJarj8nDpHW8EWDGe0wIXzBzZ5Hm2t3voAUC0TDkx9Yu5AC21gVKHv1rdBUAi1UnA+6hVMOwHkKfl4W7Mq7qoxxk/GsodALfiQFJeRR3D/aS63r+4HjC2ZOphS2AZqYvhxkPTRO0JgGcx/9jFlixDDWRHP0Bxu+ifzSVSyjxhAjDXjgCkJh+2BHJxu3iOtPVOgDvzzQVkLQ95MbgQz+9h8nrAXBAAPKGa3tFghx2B7+3B9YB78wMTZHJW3x7YaXLmroDsWQxyYjrqJOH99LQ3AHx6POcFf5nlZy1yfBjOy4FzB1JT9Q+nC8ggO/FO83rg3CaRGnLd9CLJiX244h6Ac5nMOlRNvLsPwaYs/o0PPQC+4ZzwlCkre6QvONzW3AzIYeNpedWaW2pTeNXugHPHxbVQ/mFrCK//F/tXA14wWQ2CexyLTxM+BHcE/F0mL2HHI+5AsmzS2h33Ab7xja7iTwAAAP//HxNnsaD8lqMAAAAASUVORK5CYII="
          },
          "template_name": {
            "type": "string",
            "description": "It is the name of the template you selected for creating QR Code.",
            "example": "Aadhaar_verification"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the static link.\nPossible values are:\n- `ACTIVE`",
            "example": "ACTIVE"
          }
        }
      },
      "DeactivateStaticKYCLinkResponseSchema": {
        "description": "Find the success response of Deactivate Static KYC Link",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "It displays whether template name is deactivated.",
            "example": "Successfully Deactivated"
          },
          "static_link": {
            "type": "string",
            "description": "It displays the URL of the static KYC Link.",
            "example": "https://forms.cashfree.com/verification/global-link/Y7tpcan5ksm0"
          },
          "template_name": {
            "type": "string",
            "description": "It is the name of the template you selected for creating static link.",
            "example": "Aadhaar_verification"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the deactivated static link.\nPossible values are:\n- `INACTIVE`",
            "example": "INACTIVE"
          }
        }
      },
      "getFormStatusResponseSchema": {
        "description": "Find the success response for Get Form Status",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "It displays the name of the individual.",
            "example": "John Doe"
          },
          "phone": {
            "type": "string",
            "description": "It displays the phone number of the individual.",
            "example": 9999999999
          },
          "email": {
            "type": "string",
            "description": "It displays the email address of the individual.",
            "example": "test@cashfree.com"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the form.",
            "example": "testverificationid"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": 235461
          },
          "link_expiry": {
            "type": "string",
            "description": "It displays the expiry date of the link.",
            "example": "2025-12-02"
          },
          "form_link": {
            "type": "string",
            "description": "It displays the URL of the form.",
            "example": "https://forms.cashfree.com/"
          },
          "form_status": {
            "type": "string",
            "description": "It displays the status of the form.",
            "example": "PENDING"
          },
          "verification_details": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/aadhaarFormStatusResponseSchema"
                },
                {
                  "$ref": "#/components/schemas/panFormStatusResponseSchema"
                },
                {
                  "$ref": "#/components/schemas/bavFormStatusResponseSchema"
                },
                {
                  "$ref": "#/components/schemas/upiFormStatusResponseSchema"
                }
              ]
            }
          }
        }
      },
      "aadhaarFormStatusResponseSchema": {
        "description": "It displays the status of aadhaar verification",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": 234
          },
          "type": {
            "type": "string",
            "description": "It displays the verification type.",
            "example": "OFFLINE_AADHAAR_VERIFICATION"
          },
          "status": {
            "type": "string",
            "description": "It displays the verification status.",
            "example": "SUCCESS"
          }
        }
      },
      "aadhaarFormDetailResponseSchema": {
        "description": "Offline Aadhaar Verification Details",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "VALID"
          },
          "message": {
            "type": "string",
            "example": "Aadhaar Card Exists"
          },
          "care-of": {
            "type": "string",
            "example": "S/O:Fakkirappa Dollin"
          },
          "address": {
            "type": "string",
            "example": "D-98,vikas puri, Lucknow,Uttar Pradesh-223009"
          },
          "dob": {
            "type": "string",
            "example": "25-09-1993"
          },
          "email": {
            "type": "string",
            "example": "test@cashfree.com"
          },
          "gender": {
            "type": "string",
            "example": "M"
          },
          "name": {
            "type": "string",
            "example": "Test"
          },
          "photo_link": {
            "type": "string",
            "example": "http://photo-url.com"
          },
          "mobile_hash": {
            "type": "string",
            "example": "ed189eb73247cb90b769e7e8d7dfd2efa4cd6a5ec27602f5d2721c035266568c"
          },
          "split_address": {
            "$ref": "#/components/schemas/split_address_schema"
          },
          "reference_id": {
            "type": "integer",
            "example": 234
          }
        }
      },
      "panFormStatusResponseSchema": {
        "description": "PAN Verification Product Status",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "example": 0
          },
          "type": {
            "type": "string",
            "example": "PANDETAILS_VERIFICATION"
          },
          "status": {
            "type": "string",
            "example": "PENDING"
          }
        }
      },
      "panFormDetailResponseSchema": {
        "description": "PAN Verification Details Response",
        "type": "object",
        "properties": {
          "pan": {
            "type": "string",
            "example": "ABCPV1234D"
          },
          "type": {
            "type": "string",
            "example": "Individual"
          },
          "name_provided": {
            "type": "string",
            "example": "Test"
          },
          "registered_name": {
            "type": "string",
            "example": "JOHN DOE"
          },
          "valid": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "PAN verified successfully"
          },
          "name_match_score": {
            "type": "string",
            "example": 0
          },
          "name_match_result": {
            "type": "string",
            "example": "NO_MATCH"
          },
          "aadhaar_seeding_status": {
            "type": "string",
            "example": "Y"
          },
          "last_updated_at": {
            "type": "string",
            "example": "01/01/2019"
          },
          "name_pan_card": {
            "type": "string",
            "example": "JOHN DOE"
          },
          "pan_status": {
            "type": "string",
            "example": "VALID"
          },
          "aadhaar_seeding_status_desc": {
            "type": "string",
            "example": "Aadhaar is linked to PAN"
          }
        }
      },
      "bavFormStatusResponseSchema": {
        "description": "Bank Details Validation Product Status",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "example": 236
          },
          "type": {
            "type": "string",
            "example": "BANKDETAILS_VALIDATION"
          },
          "status": {
            "type": "string",
            "example": "FAILED"
          }
        }
      },
      "bavFormDetailSchema": {
        "description": "Bank Details Validation Details",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "accountStatus": {
            "type": "string"
          },
          "accountStatusCode": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/bavDataSchema"
          }
        }
      },
      "bavDataSchema": {
        "description": "Bank Details Response",
        "type": "object",
        "properties": {
          "nameAtBank": {
            "type": "string",
            "example": "JOHN DOE"
          },
          "bankName": {
            "type": "string",
            "example": "YES BANK"
          },
          "branch": {
            "type": "string",
            "example": "SANTACRUZ, MUMBAI"
          },
          "city": {
            "type": "string",
            "example": "MUMBAI"
          },
          "utr": {
            "type": "string",
            "example": 1678097392152708
          },
          "micr": {
            "type": "integer",
            "example": 0
          },
          "nameMatchScore": {
            "type": "string",
            "example": 0
          },
          "nameMatchResult": {
            "type": "string",
            "example": "NO_MATCH"
          }
        }
      },
      "upiFormStatusResponseSchema": {
        "description": "Upi Verification Product Status",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "example": 237
          },
          "type": {
            "type": "string",
            "example": "UPIDETAILS_VALIDATION"
          },
          "status": {
            "type": "string",
            "example": "FAILED"
          }
        }
      },
      "upiFormDetailResponseSchema": {
        "description": "UPI Verification Details Response",
        "type": "object",
        "properties": {
          "nameAtBank": {
            "type": "string",
            "example": "Test"
          },
          "accountExists": {
            "type": "string",
            "example": "YES"
          }
        }
      },
      "split_address_schema": {
        "description": "Split address for Split addresss in Offline Aadhaar verify OTP Response.",
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "India"
          },
          "dist": {
            "type": "string",
            "example": "Lucknow"
          },
          "house": {
            "type": "string",
            "example": "n-890"
          },
          "landmark": {
            "type": "string",
            "example": "opposite uioq school"
          },
          "pincode": {
            "type": "string",
            "example": 223009
          },
          "po": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "example": "Uttar Pradesh"
          },
          "street": {
            "type": "string"
          },
          "subdist": {
            "type": "string"
          },
          "vtc": {
            "type": "string",
            "example": "Gomti Nagar S.O"
          }
        }
      },
      "smsString": {
        "description": "SMS string",
        "type": "string",
        "example": "sms"
      },
      "emailString": {
        "description": "Email string",
        "type": "string",
        "example": "email"
      },
      "whatsappString": {
        "description": "Whatsapp string",
        "type": "string",
        "example": "whatsapp"
      },
      "Mobile_Record": {
        "description": "It displays the mobile number linked to the user.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the mobile number details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "mobile": {
                "type": "string",
                "example": "9988123456",
                "description": "The 10-digit mobile number of the user."
              }
            }
          }
        }
      },
      "Email_Record": {
        "description": "It displays the email address associated with the user.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the email address details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "example@example.com",
                "description": "The email address of the user."
              }
            }
          }
        }
      },
      "Address_Record": {
        "description": "It displays the complete address details of the user.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the address details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "complete_address": {
                "type": "string",
                "example": "123 Main St, Anytown",
                "description": "The full address of the user."
              },
              "state": {
                "type": "string",
                "example": "State",
                "description": "The state of the user."
              },
              "pincode": {
                "type": "string",
                "example": "123456",
                "description": "The postal code of the user."
              }
            }
          }
        }
      },
      "Gender_Record": {
        "description": "It displays the user's gender.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user’s gender details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "gender": {
                "type": "string",
                "example": "MALE",
                "description": "The gender of the user."
              }
            }
          }
        }
      },
      "DOB_Record": {
        "description": "It displays the user's date of birth.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user's date of birth details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "dob": {
                "type": "string",
                "example": "1990-01-01",
                "description": "The user's date of birth."
              }
            }
          }
        }
      },
      "Aadhaar_Record": {
        "description": "It displays the details linked to the user's Aadhaar card.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user's Aadhaar card details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "aadhaar": {
                "type": "string",
                "example": "123456789012",
                "description": "The Aadhaar number of the user."
              },
              "care_of": {
                "type": "string",
                "example": "John Doe",
                "description": "The name of the person the address is care of."
              },
              "address": {
                "type": "string",
                "example": "123 Main St, Anytown",
                "description": "The full address linked to the Aadhaar."
              },
              "dob": {
                "type": "string",
                "example": "1990-01-01",
                "description": "Date of birth linked with Aadhaar."
              },
              "email": {
                "type": "string",
                "example": "example@example.com",
                "description": "Email address linked to the Aadhaar."
              },
              "gender": {
                "type": "string",
                "example": "Male",
                "description": "Gender information linked to the Aadhaar."
              },
              "name": {
                "type": "string",
                "example": "John Doe",
                "description": "Name of the user linked to Aadhaar."
              },
              "split_address": {
                "$ref": "#/components/schemas/SplitAddressRecord"
              },
              "year_of_birth": {
                "type": "string",
                "example": "1990",
                "description": "Year of birth associated with Aadhaar."
              },
              "mobile_hash": {
                "type": "string",
                "example": "abc123hash",
                "description": "Hashed mobile number."
              },
              "photo_link": {
                "type": "string",
                "example": "https://example.com/photo.jpg",
                "description": "Encoded link of the user's photo."
              }
            }
          }
        }
      },
      "SplitAddressRecord": {
        "description": "A detailed breakdown of the address information.",
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "India",
            "description": "Country of the user's address linked to Aadhaar."
          },
          "dist": {
            "type": "string",
            "example": "BANGALORE",
            "description": "District of the user's address linked to Aadhaar."
          },
          "house": {
            "type": "string",
            "example": "House No 1",
            "description": "House number of the user's address linked to Aadhaar."
          },
          "landmark": {
            "type": "string",
            "example": "Near Landmark",
            "description": "Landmark of the user's address linked to Aadhaar."
          },
          "pincode": {
            "type": "string",
            "example": "123456",
            "description": "The postal code of the user's address linked to Aadhaar."
          },
          "po": {
            "type": "string",
            "example": "Post Office",
            "description": "The postal office of the user's address linked to Aadhaar."
          },
          "state": {
            "type": "string",
            "example": "Karnataka",
            "description": "State of the user's address linked to Aadhaar."
          },
          "street": {
            "type": "string",
            "example": "Street 123",
            "description": "Street name of the user's address linked to Aadhaar."
          },
          "subdist": {
            "type": "string",
            "example": "Ranibennur",
            "description": "Sub-district of the user's address linked to Aadhaar."
          },
          "vtc": {
            "type": "string",
            "example": "Ranibennur",
            "description": "Village or town of the user's address linked to Aadhaar."
          }
        }
      },
      "PAN_Record": {
        "description": "It displays information of the user's PAN (Permanent Account Number) card.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user's PAN card details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "pan": {
                "type": "string",
                "example": "ABCPV1234D",
                "description": "It displays the unique 10-character alphanumeric identifier issued by the Income Tax Department."
              },
              "type": {
                "type": "string",
                "example": "Individual",
                "description": "It displays the type of the PAN issued. Possible vaules are  `Individual` `Company`"
              },
              "registered_name": {
                "type": "string",
                "example": "John Doe",
                "description": "It displays the PAN registered name."
              },
              "aadhaar_seeding_status": {
                "type": "string",
                "example": "Y",
                "description": "It displays additional information of the linking of aadhaar and PAN card. Possible values are:\n- `Y`: Aadhaar is linked to pan\n- `R`: Aadhaar is not linked to pan\n- `NA`: Not applicable, in case of business pan"
              },
              "last_updated_at": {
                "type": "string",
                "example": "2023-09-01",
                "description": "It displays the last updated date, formatted as `YYYY-MM-DD`."
              },
              "name_pan_card": {
                "type": "string",
                "example": "John Doe",
                "description": "The name displayed on the PAN card. For example, \"John Doe\"."
              },
              "aadhaar_seeding_status_desc": {
                "type": "string",
                "example": "Linked with Aadhaar",
                "description": "It displays additional information of the linking of aadhaar and PAN card."
              }
            }
          }
        }
      },
      "BAV_Record": {
        "description": "It displays the user's bank account information.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user's bank account verification details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "bank_account": {
                "type": "string",
                "example": "1234567890",
                "description": "The user's bank account number. For example, \"1234567890\"."
              },
              "name_at_bank": {
                "type": "string",
                "example": "John Doe",
                "description": "The name of the account holder as registered with the bank."
              },
              "bank_name": {
                "type": "string",
                "example": "Example Bank",
                "description": "The name of the bank where the account is held. For example, \"HDFC Bank\"."
              },
              "city": {
                "type": "string",
                "example": "Anytown",
                "description": "The city where the bank branch is located. For example, \"BENGALURU\"."
              },
              "branch": {
                "type": "string",
                "example": "Main Branch",
                "description": "The specific branch of the bank where the account is maintained."
              },
              "micr": {
                "type": "string",
                "example": "123456789",
                "description": "The Magnetic Ink Character Recognition (MICR) code for the bank branch, used for cheque processing."
              }
            }
          }
        }
      },
      "Name_Record": {
        "description": "It displays the user's full name.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user name extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe",
                "description": "The user's full name."
              }
            }
          }
        }
      },
      "Occupation_Record": {
        "description": "It displays the user's occupation information.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user's occupation details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "occupation": {
                "description": "The user's occupation.",
                "type": "string",
                "example": "Salaried"
              }
            }
          }
        }
      },
      "Income_Record": {
        "description": "It displays the user's income range.",
        "type": "object",
        "properties": {
          "confidence_score": {
            "description": "Indicates the system's certainty about the accuracy of the user's income details extracted or matched.",
            "type": "number",
            "example": 0.85
          },
          "metadata": {
            "type": "object",
            "properties": {
              "income": {
                "description": "Represents the user's income range. Possible values are:\n`BELOW_ONE_LAKH` `ONE_TO_FIVE_LAKHS` `FIVE_TO_TEN_LAKHS` `ABOVE_TEN_LAKHS`",
                "type": "string",
                "example": "ONE_TO_FIVE_LAKHS"
              }
            }
          }
        }
      },
      "UVDataAvailabilityRequestSchema": {
        "description": "Request for data availability of the user.",
        "type": "object",
        "example": {
          "verification_id": "testverificationid",
          "user": [
            {
              "identifier_type": "MOBILE",
              "identifier_value": "9988123456"
            }
          ]
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the user session. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed."
          },
          "user": {
            "type": "array",
            "description": "It displays the list of user identifiers.",
            "items": {
              "type": "object",
              "properties": {
                "identifier_type": {
                  "type": "string",
                  "description": "The type of identifier used to recognize a user.\nPossible values are\n- `MOBILE`: Mobile number of the user."
                },
                "identifier_value": {
                  "type": "string",
                  "description": "The 10-digit mobile number of the user. No prefixes or country codes are required."
                }
              }
            }
          }
        }
      },
      "UVDataAvailabilityResponseSchema": {
        "description": "Response for user data availability.",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 123456
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "testVerificationId"
          },
          "user": {
            "type": "array",
            "description": "It displays the list of user identifiers provided in the request.",
            "items": {
              "type": "object",
              "properties": {
                "identifier_type": {
                  "type": "string",
                  "description": "The type of user identifier (MOBILE)."
                },
                "identifier_value": {
                  "type": "string",
                  "description": "The 10-digit mobile number of the user. No prefixes or country codes are required."
                }
              }
            }
          },
          "available_scopes": {
            "type": "array",
            "description": "It displays the list of available scopes.\nPossible values are:\n`AADHAAR` `PAN` `DOB` `EMAIL` `GENDER` `MOBILE` `NAME` `OCCUPATION` `ADDRESS`",
            "items": {
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "This describes the type of available scope."
                }
              }
            }
          }
        }
      },
      "AadhaarMaskingResponseSchema": {
        "description": "Success response for Aadhaar Masking API",
        "type": "object",
        "example": {
          "value": {
            "status": "VALID",
            "reference_id": 35476,
            "verification_id": "testverificationid",
            "image_link": "https://image.url.here"
          }
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the aadhaar information.",
            "example": "VALID"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 35476
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request",
            "example": "testverificationid"
          },
          "image_link": {
            "type": "string",
            "description": "It displays the URL of the image.",
            "example": "https://image.url.here"
          }
        }
      },
      "AadhaarOcrRequestSchema": {
        "description": "Request body schema for Aadhaar Verification via OCR.",
        "type": "object",
        "required": [
          "front_image",
          "verification_id"
        ],
        "example": {
          "verification_id": "12345678",
          "back_image": "BACK_IMAGE",
          "front_image": "FRONT_IMAGE"
        },
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the request. The maximum character limit is 50. Only alphanumeric, hyphen (-), period (.), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "12345678",
            "default": "12345678"
          },
          "back_image": {
            "description": "It is the scanned image of the back of the aadhaar card. Allowed file type - JPEG/JPG/PNG. The max file size of both the files is 10MB.",
            "type": "string",
            "format": "binary",
            "example": "BACK_IMAGE"
          },
          "front_image": {
            "description": "It is the scanned image of the front of the aadhaar card. Allowed file type - JPEG/JPG/PNG. The max file size of both the files is 10MB.",
            "type": "string",
            "format": "binary",
            "example": "FRONT_IMAGE"
          }
        }
      },
      "AadhaarOcrResponseSchema": {
        "description": "Success response for Aadhaar Verification via OCR",
        "type": "object",
        "example": {
          "name": "John Doe",
          "yob": "2000",
          "father": "Jone Doe",
          "gender": "Male",
          "uid": "123456789012",
          "state": "Madhya Pradesh",
          "pincode": "453551",
          "address": "4th cross road  Koramangala",
          "valid": true,
          "status": "VALID",
          "reference_id": "123456",
          "verification_id": "123467",
          "confidence_score": "0.98",
          "message": "It displays details about the success or failure of the API request."
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "It displays the name of the aadhaar card holder.",
            "example": "John Doe"
          },
          "yob": {
            "type": "string",
            "description": "It displays the year of birth of the aadhaar card holder.",
            "example": "2000"
          },
          "father": {
            "type": "string",
            "description": "It displays the father's name of the aadhaar card holder.",
            "example": "Jone Doe"
          },
          "gender": {
            "type": "string",
            "description": "It displays the gender of the aadhaar card holder.",
            "example": "Male"
          },
          "uid": {
            "type": "string",
            "description": "It displays the UID information as present in the aadhaar card.",
            "example": "123456789012"
          },
          "state": {
            "type": "string",
            "description": "It displays the name of the state as present in the aadhaar card.",
            "example": "Madhya Pradesh"
          },
          "pincode": {
            "type": "string",
            "description": "It displays the PIN code information as present in the aadhaar card.",
            "example": "453551"
          },
          "address": {
            "type": "string",
            "description": "It displays the address information of the aadhaar card holder.",
            "example": "4th cross road  Koramangala"
          },
          "valid": {
            "type": "boolean",
            "description": "It displays whether the aadhaar card is valid or not.",
            "example": true
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the aadhaar card.",
            "example": "VALID"
          },
          "reference_id": {
            "type": "string",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": "123456"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify this request.",
            "example": "123467"
          },
          "confidence_score": {
            "type": "string",
            "description": "It displays the confidence score for this aadhaar card verification request.",
            "example": "0.98"
          },
          "message": {
            "type": "string",
            "example": "valid",
            "description": "It displays details about the success or failure of the API request."
          }
        }
      },
      "AddressDetails": {
        "description": "It contains the address information of the individual.",
        "type": "object",
        "example": {
          "complete_address": "S-90 SunTower, GopiNagar, Banaglore, KA - 560109",
          "type": "permanent",
          "split_address": {
            "district": [
              "BANGALORE"
            ],
            "state": [
              "KARNATAKA",
              "KA"
            ],
            "city": [
              "BELLANDUR"
            ],
            "pincode": "560103",
            "country": [
              "IN",
              "IND",
              "INDIA"
            ],
            "address_line": "S-90 SunTower, GopiNagar, Banaglore, KA - 560109"
          }
        },
        "properties": {
          "complete_address": {
            "type": "string",
            "description": "It displays the complete address information of the individual.",
            "example": "S-90 SunTower, GopiNagar, Banaglore, KA - 560109"
          },
          "type": {
            "type": "string",
            "description": "It displays the type of the address information.",
            "example": "Permanent/Temporary"
          },
          "split_address": {
            "type": "object",
            "description": "It displays the address information in individual components.",
            "properties": {
              "district": {
                "type": "array",
                "description": "It displays the name of the district.",
                "items": {
                  "type": "string",
                  "example": [
                    "Bangalore"
                  ]
                }
              },
              "state": {
                "type": "array",
                "description": "It displays the name of the state.",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": [
                      "Karnataka",
                      "KA"
                    ]
                  }
                }
              },
              "city": {
                "type": "array",
                "description": "It displays the name of the city.",
                "items": {
                  "type": "string",
                  "example": "Banaglore"
                }
              },
              "pincode": {
                "type": "string",
                "description": "It displays the PIN code information.",
                "example": 560109
              },
              "country": {
                "type": "array",
                "description": "It displays the name of the country.",
                "items": {
                  "type": "string",
                  "example": [
                    "INDIA",
                    "IND"
                  ]
                }
              },
              "address_line": {
                "type": "string",
                "description": "It displays the address information.",
                "example": "S-90 SunTower, GopiNagar, Banaglore, KA - 560109"
              }
            }
          }
        }
      },
      "AddressDetailsMobile360": {
        "description": "It contains the address information of the individual.",
        "type": "object",
        "example": {
          "address_list": [
            {
              "address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA",
              "type": "permanent",
              "state": "KARNATAKA",
              "pincode": "560103"
            }
          ]
        },
        "properties": {
          "address": {
            "type": "string",
            "description": "It displays the complete address information of the individual.",
            "example": "S-90 SunTower, GopiNagar, Banaglore, KA - 560109"
          },
          "type": {
            "type": "string",
            "description": "It displays the type of the address information.",
            "example": "Permanent/Temporary"
          },
          "state": {
            "type": "string",
            "description": "It displays the name of the state.",
            "example": "Karnataka"
          },
          "pincode": {
            "type": "string",
            "description": "It displays the PIN code information.",
            "example": 560109
          }
        }
      },
      "AdvanceEmploymentRequestSchema": {
        "description": "Find the request parameters to retrieve employment infomration",
        "type": "object",
        "required": [
          "verification_id"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the API request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "ABC00123"
          },
          "phone": {
            "description": "It is the phone number of the employee. **(conditonal mandatory)**",
            "type": "string",
            "example": "9988776655"
          },
          "pan": {
            "type": "string",
            "description": "It is the PAN information of the employee. **(conditonal mandatory)**",
            "example": "AZJPG7110R"
          },
          "uan": {
            "type": "string",
            "description": "It is the unique number assigned to every employee contributing to the Employees' Provident Fund (EPF). **(conditonal mandatory)**",
            "example": "101340612345"
          },
          "dob": {
            "type": "string",
            "format": "date",
            "description": "It is the date of birth information of the employee. The format is YYYY-MM-DD.Employee date of birth. **(conditonal mandatory)**",
            "example": "1995-11-10"
          },
          "employee_name": {
            "type": "string",
            "description": "It is the name of the employee. **(conditonal mandatory)**",
            "example": "John Doe"
          },
          "employer_name": {
            "type": "string",
            "description": "It is the name of the employer. **(conditonal mandatory)**",
            "example": "Cashfree India Pvt Ltd"
          }
        }
      },
      "AdvanceEmploymentResponse": {
        "description": "Success response for Get Employment Details",
        "type": "object",
        "example": {
          "verification_id": "test_verification_id",
          "reference_id": 12345,
          "status": "SUCCESS",
          "input": {
            "phone": "9988776655",
            "pan": null,
            "uan": null,
            "dob": null,
            "employee_name": null,
            "employer_name": null
          },
          "uan_details": [
            {
              "uan": "101340612345",
              "source": "dob and name",
              "source_score": 0,
              "basic_details": {
                "gender": "MALE",
                "dob": "1996-10-02",
                "employee_confidence_score": null,
                "employee_name": "John Doe",
                "phone": "9988776655",
                "aadhaar_verified": true
              },
              "employment_details": {
                "member_id": "MHBAN12342200000012345",
                "establishment_id": "MHBAN1234220000",
                "exit_date": null,
                "joining_date": "2020-02-21",
                "leave_reason": null,
                "establishment_name": "Cashfree India Private Ltd",
                "employer_confidence_score": 0.1
              },
              "additional_details": {
                "aadhaar": "XXXXXXXX7561",
                "email": "johndoe@gmail.com",
                "pan": "ABCDE5930G",
                "ifsc": "SBIN0012345",
                "bank_account": "20329012345",
                "bank_address": "STATE BANK OF INDIA,KATANGA  BENGALURU",
                "relation": "F",
                "relative_name": "Alice Doe"
              }
            }
          ],
          "recent_employment_details": {
            "employee_details": {
              "member_id": "UPLKO22417520000010171",
              "exit_date": null,
              "joining_date": "2023-09-01",
              "uan": "101379636551",
              "epfo": {
                "recent": true,
                "name_unique": true,
                "pf_filings_details": true
              },
              "employed": false,
              "employee_name_match": false,
              "exit_date_marked": false
            }
          },
          "employer_details": {
            "establishment_id": "MHBAN1234220000",
            "establishment_name": "Cashfree India Private Ltd",
            "setup_date": "2020-11-19",
            "ownership_type": "Private Limited Company",
            "employer_confidence_score": 0.3,
            "employer_name_match": false,
            "pf_filing_details": [
              {
                "total_amount": 37524,
                "employees_count": 17,
                "wage_month": "NOV-23"
              },
              {
                "total_amount": 41249,
                "employees_count": 19,
                "wage_month": "OCT-23"
              },
              {
                "total_amount": 37295,
                "employees_count": 16,
                "wage_month": "SEP-23"
              }
            ]
          }
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "test_verification_id"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "status": {
            "type": "string",
            "description": "It displays the list of status of the API request.\nPossible values are:\n`SUCCESS` `EMPLOYMENT_DETAILS_NOT_FOUND`",
            "example": "SUCCESS"
          },
          "input": {
            "type": "object",
            "description": "It contains the information entered in the API request.",
            "properties": {
              "phone": {
                "type": "string",
                "description": "It displays the phone number of the employee passed in API request."
              },
              "pan": {
                "type": "string",
                "description": "It displays the PAN information of the employee passed in API request."
              },
              "uan": {
                "type": "string",
                "description": "It displays the UAN information of the employee passed in API request."
              },
              "dob": {
                "type": "string",
                "description": "It displays the date of birth of the employee passed in API request.",
                "example": "1996-10-02"
              },
              "employee_name": {
                "type": "string",
                "description": "It displays the name of the employee passed in API request.",
                "example": "John Doe"
              },
              "employer_name": {
                "type": "string",
                "description": "It displays the name of the employer passed in API request."
              }
            }
          },
          "uan_details": {
            "type": "array",
            "description": "It contains the list of UAN details.",
            "items": {
              "type": "object",
              "description": "It contains the information in individual components.",
              "properties": {
                "uan": {
                  "type": "string",
                  "description": "It displays the Universal Account Number (UAN) information of the employee.",
                  "example": "101340612345"
                },
                "source": {
                  "type": "string",
                  "description": "It displays the fields used to fetch the data from source",
                  "example": "dob and name"
                },
                "source_score": {
                  "type": "number",
                  "description": "It displays the confidence of the source data",
                  "example": 0
                },
                "basic_details": {
                  "type": "object",
                  "description": "It displays the basic information of the employee.",
                  "properties": {
                    "gender": {
                      "type": "string",
                      "description": "It displays the gender of the employee.",
                      "example": "MALE"
                    },
                    "dob": {
                      "type": "string",
                      "description": "It displays the date of birth of the employee.",
                      "example": "1996-10-02"
                    },
                    "employee_confidence_score": {
                      "type": "number",
                      "description": "It displays the confidence score for the employee.",
                      "example": 0
                    },
                    "employee_name": {
                      "type": "string",
                      "description": "It displays the name of the employee.",
                      "example": "John Doe"
                    },
                    "phone": {
                      "type": "string",
                      "description": "It displays the phone number of the employee.",
                      "example": "9988776655"
                    },
                    "aadhaar_verified": {
                      "type": "boolean",
                      "description": "It displays whether the aadhaar information of the employee is verified or not.",
                      "example": true
                    }
                  }
                },
                "employment_details": {
                  "type": "object",
                  "description": "It contains the employement details of the individual.",
                  "properties": {
                    "member_id": {
                      "type": "string",
                      "description": "It displays the unique ID assigned to an individual.",
                      "example": "MHBAN12342200000012345"
                    },
                    "establishment_id": {
                      "type": "string",
                      "description": "It displays the unique ID assigned to a specific establishment or business entity.",
                      "example": "MHBAN1234220000"
                    },
                    "exit_date": {
                      "type": "string",
                      "description": "It displays the last working day of the employee in the organisation."
                    },
                    "joining_date": {
                      "type": "string",
                      "description": "It displays the first working day of the employee in the organisation.",
                      "example": "2020-02-21"
                    },
                    "leave_reason": {
                      "type": "string",
                      "description": "It displays the reason for leaving the previous job."
                    },
                    "establishment_name": {
                      "type": "string",
                      "description": "It displays the name of the organisation.",
                      "example": "Cashfree India Private Ltd"
                    },
                    "employer_confidence_score": {
                      "type": "number",
                      "description": "It displays the",
                      "example": 0.1
                    }
                  }
                },
                "additional_details": {
                  "type": "object",
                  "description": "It contains additional information of the individual.",
                  "properties": {
                    "aadhaar": {
                      "type": "string",
                      "description": "It displays the masked aadhaar number of the individual.",
                      "example": "XXXXXXXX7561"
                    },
                    "email": {
                      "type": "string",
                      "description": "It displays the email address of the individual.",
                      "example": "johndoe@gmail.com"
                    },
                    "pan": {
                      "type": "string",
                      "description": "It displays the PAN information of the individual.",
                      "example": "ABCDE5930G"
                    },
                    "ifsc": {
                      "type": "string",
                      "description": "It displays the IFSC information of the individual's bank account.",
                      "example": "SBIN0012345"
                    },
                    "bank_account": {
                      "type": "string",
                      "description": "It displays the bank account number of the individual.",
                      "example": "20329012345"
                    },
                    "bank_address": {
                      "type": "string",
                      "description": "It displays the address of the bank branch.",
                      "example": "STATE BANK OF INDIA,KATANGA  BENGALURU"
                    },
                    "relation": {
                      "type": "string",
                      "description": "It displays the realtionship of the individual with the relative.",
                      "example": "F"
                    },
                    "relative_name": {
                      "type": "string",
                      "description": "It displays the name of the relative.",
                      "example": "Alice Doe"
                    }
                  }
                }
              }
            }
          },
          "recent_employment_details": {
            "type": "object",
            "description": "It contains the recent employment details of the individual.",
            "properties": {
              "employee_details": {
                "type": "object",
                "description": "It contains the recent details of the individual as an employee.",
                "properties": {
                  "member_id": {
                    "type": "string",
                    "description": "It displays the unique ID assigned to an individual.",
                    "example": "UPLKO22417520000010171"
                  },
                  "exit_date": {
                    "type": "string",
                    "description": "It displays the last working day of the employee in the organisation.",
                    "example": "2024-11-01"
                  },
                  "joining_date": {
                    "type": "string",
                    "description": "It displays the first working day of the employee in the organisation.",
                    "example": "2023-09-01"
                  },
                  "uan": {
                    "type": "string",
                    "description": "It displays the Universal Account Number (UAN) information of the employee.",
                    "example": "101379636551"
                  },
                  "epfo": {
                    "type": "object",
                    "description": "It contains the information found in Employees' Provident Fund Organisation (EPFO)",
                    "properties": {
                      "recent": {
                        "type": "boolean",
                        "description": "It displays whether the retrieved information is recent.",
                        "example": true
                      },
                      "name_unique": {
                        "type": "boolean",
                        "description": "It displays whether the retrieved name is unique.",
                        "example": true
                      },
                      "pf_filings_details": {
                        "type": "boolean",
                        "description": "It displays whether the PF filing details are correct.",
                        "example": true
                      }
                    }
                  },
                  "employed": {
                    "type": "boolean",
                    "description": "It displays whether the individual is employed.",
                    "example": false
                  },
                  "employee_name_match": {
                    "type": "boolean",
                    "description": "It displays whether the individual's name matches with the name found in EPFO.",
                    "example": false
                  },
                  "exit_date_marked": {
                    "type": "boolean",
                    "description": "It displays whether the last working.",
                    "example": false
                  }
                }
              },
              "employer_details": {
                "type": "object",
                "description": "It contains the recent details of the employer.",
                "properties": {
                  "establishment_id": {
                    "type": "string",
                    "description": "It displays the unique ID assigned to a specific establishment or business entity.",
                    "example": "MHBAN1234220000"
                  },
                  "establishment_name": {
                    "type": "string",
                    "description": "It displays the name of the organisation.",
                    "example": "Cashfree India Private Ltd"
                  },
                  "setup_date": {
                    "type": "string",
                    "description": "It displays the date on which organisation is launched.",
                    "example": "2020-11-19"
                  },
                  "ownership_type": {
                    "type": "string",
                    "description": "It displays the type of ownership of the organisation.",
                    "example": "Private Limited Company"
                  },
                  "employer_confidence_score": {
                    "type": "number",
                    "description": "It displays the confidence score of organisation details.",
                    "example": 0.3
                  },
                  "employer_name_match": {
                    "type": "boolean",
                    "description": "It displays the name match score of employer name passed in input with organisation name recieved from the source.",
                    "example": false
                  },
                  "pf_filing_details": {
                    "type": "array",
                    "description": "It displays the pf filling details of the organisation.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "total_amount": {
                          "type": "number",
                          "description": "It displays the pf amount in rupees filed by organisation.",
                          "example": 37524
                        },
                        "employees_count": {
                          "type": "number",
                          "description": "It displays the count of employees in the organisation.",
                          "example": 17
                        },
                        "wage_month": {
                          "type": "string",
                          "description": "It displays month for which employees wages are being reported or processed.",
                          "example": "NOV-23"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BAVAsyncV2ResponseSchema": {
        "type": "object",
        "description": "Find the response parameter for Bank Account Verification Async V2",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 23
          },
          "user_id": {
            "type": "string",
            "description": "It displays the user ID created by Cashfree Payments for reference purposes.",
            "example": "23"
          },
          "account_status": {
            "type": "string",
            "description": "It displays the status of the bank account.\nPossible values are:\n- `RECEIVED`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-description).",
            "example": "RECEIVED"
          },
          "account_status_code": {
            "type": "string",
            "description": "It displays the status code of the bank account.\nPossible values are:\n- `VALIDATION_IN_PROGRESS`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-code-description).",
            "example": "VALIDATION_IN_PROGRESS"
          }
        }
      },
      "BulkBAVV2ResponseSchema": {
        "type": "object",
        "description": "Find the response parameters for Bulk Bank Account Verification V2",
        "properties": {
          "bulk_reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 23
          },
          "bulk_verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the Bulk Bank Account Verification API request.",
            "example": "bulk-test-123"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the verification.\nPossible values are:\n- `RECEIVED`",
            "example": "RECEIVED"
          }
        }
      },
      "BAVV2ValidationSuccessfulSchema": {
        "type": "object",
        "description": "Find the description for each response parameter",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 23
          },
          "name_at_bank": {
            "type": "string",
            "description": "It displays the name of the account holder as per the bank records.",
            "example": "JOHN DOE"
          },
          "bank_name": {
            "type": "string",
            "description": "It displays the name of the bank.",
            "example": "YES BANK"
          },
          "utr": {
            "type": "string",
            "description": "It displays the unique transaction reference (UTR) number created by the bank to identify the transaction.",
            "example": "404223241811"
          },
          "city": {
            "type": "string",
            "description": "It displays the name of the city where the bank is located.",
            "example": "MUMBAI"
          },
          "branch": {
            "type": "string",
            "description": "It displays the name of the branch where the bank account is registered.",
            "example": "SANTACRUZ, MUMBAI"
          },
          "micr": {
            "type": "integer",
            "description": "It represents the code used to identify banks and branches participating in the Electronic Clearing System (ECS).",
            "example": 33
          },
          "name_match_score": {
            "type": "string",
            "description": "It displays the score of the name match verification.",
            "example": "90.00"
          },
          "name_match_result": {
            "type": "string",
            "description": "It displays the result of the name match verification.\nPossible values are:\n- `DIRECT_MATCH`\n- `GOOD_PARTIAL_MATCH`\n- `MODERATE_PARTIAL_MATCH`\n- `POOR_PARTIAL_MATCH`\n- `NO_MATCH`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#name-match-result-description).",
            "example": "GOOD_PARTIAL_MATCH"
          },
          "account_status": {
            "type": "string",
            "description": "It displays the status of the bank account.\nPossible values are:\n- `VALID`\n- `INVALID`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-description).",
            "example": "VALID"
          },
          "account_status_code": {
            "type": "string",
            "description": "It displays the status code of the bank account.\nPossible values are:\n- `ACCOUNT_IS_VALID`\n- `INVALID_ACCOUNT_FAIL`\n- `ACCOUNT_BLOCKED`\n- `INVALID_IFSC_FAIL`\n- `NRE_ACCOUNT_FAIL`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-code-description).",
            "example": "ACCOUNT_IS_VALID"
          }
        }
      },
      "BAVV2GETValidationSuccessfulSchema": {
        "type": "object",
        "description": "Find the description for each response parameter",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 23
          },
          "name_at_bank": {
            "type": "string",
            "description": "It displays the name of the account holder as per the bank records.",
            "example": "JOHN DOE"
          },
          "bank_name": {
            "type": "string",
            "description": "It displays the name of the bank.",
            "example": "YES BANK"
          },
          "utr": {
            "type": "string",
            "description": "It displays the unique transaction reference (UTR) number created by the bank to identify the transaction.",
            "example": "404223241811"
          },
          "city": {
            "type": "string",
            "description": "It displays the name of the city where the bank is located.",
            "example": "MUMBAI"
          },
          "branch": {
            "type": "string",
            "description": "It displays the name of the branch where the bank account is registered.",
            "example": "SANTACRUZ, MUMBAI"
          },
          "micr": {
            "type": "integer",
            "description": "It represents the code used to identify banks and branches participating in the Electronic Clearing System (ECS).",
            "example": 33
          },
          "name_match_score": {
            "type": "string",
            "description": "It displays the score of the name match verification.",
            "example": "90.00"
          },
          "name_match_result": {
            "type": "string",
            "description": "It displays the result of the name match verification.\nPossible values are:\n- `DIRECT_MATCH`\n- `GOOD_PARTIAL_MATCH`\n- `MODERATE_PARTIAL_MATCH`\n- `POOR_PARTIAL_MATCH`\n- `NO_MATCH`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#name-match-result-description).",
            "example": "GOOD_PARTIAL_MATCH"
          },
          "account_status": {
            "type": "string",
            "description": "It displays the status of the bank account.\nPossible values are:\n- `VALID`\n- `INVALID`\n- `RECEIVED`\n- `FAILED`\n- `REJECTED`\n- `APPROVAL_PENDING`\n- `PARTIALLY_APPROVED`\n- `IN_PROCESS`\n- `CANCELLED`\n- `PROCESSING`\n- `MANUALLY_REJECTED`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-description).",
            "example": "VALID"
          },
          "account_status_code": {
            "type": "string",
            "description": "It displays the status code of the bank account.\nPossible values are:\n- `ACCOUNT_IS_VALID`\n- `FRAUD_ACCOUNT`\n- `FAILED_AT_BANK`\n- `NPCI_UNAVAILABLE`\n- `CONNECTION_TIMEOUT`\n- `SOURCE_BANK_DECLINED`\n- `BENE_BANK_DECLINED`\n- `IMPS_MODE_FAIL`\n- `BENEFICIARY_BANK_OFFLINE`\n- `VALIDATION_IN_PROGRESS`\n- `INVALID_ACCOUNT_FAIL`\n- `INVALID_IFSC_FAIL`\n- `VERIFICATION_ALREADY_UNDER_PROCESS`\n- `NRE_ACCOUNT_FAIL`\n- `ACCOUNT_BLOCKED`\n- `INSUFFICIENT_BALANCE`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-code-description).",
            "example": "ACCOUNT_IS_VALID"
          }
        }
      },
      "BulkBAVV2ValidationSuccessfulSchema": {
        "type": "object",
        "description": "Find the description for each response parameter",
        "properties": {
          "bulk_reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1234
          },
          "bulk_verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the API request.",
            "example": "test-bulk-123"
          },
          "entries": {
            "description": "It displays the verified bank account information",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reference_id": {
                  "type": "integer",
                  "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
                  "example": 123
                },
                "name_at_bank": {
                  "type": "string",
                  "description": "It displays the name of the account holder as per the bank records.",
                  "example": "JOHN DOE"
                },
                "bank_name": {
                  "type": "string",
                  "description": "It displays the name of the bank.",
                  "example": "YES BANK"
                },
                "utr": {
                  "type": "string",
                  "description": "It displays the unique transaction reference (UTR) number created by the bank to identify the transaction.",
                  "example": "404223241811"
                },
                "city": {
                  "type": "string",
                  "description": "It displays the name of the city where the bank is located.",
                  "example": "MUMBAI"
                },
                "branch": {
                  "type": "string",
                  "description": "It displays the name of the branch where the bank account is registered.",
                  "example": "SANTACRUZ, MUMBAI"
                },
                "micr": {
                  "type": "integer",
                  "description": "It represents the code used to identify banks and branches participating in the Electronic Clearing System (ECS).",
                  "example": 33
                },
                "name_match_score": {
                  "type": "string",
                  "description": "It displays the score of the name match verification.",
                  "example": "90.00"
                },
                "name_match_result": {
                  "type": "string",
                  "description": "It displays the result of the name match verification.\nPossible values are:\n- `DIRECT_MATCH`\n- `GOOD_PARTIAL_MATCH`\n- `MODERATE_PARTIAL_MATCH`\n- `POOR_PARTIAL_MATCH`\n- `NO_MATCH`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#name-match-result-description)",
                  "example": "GOOD_PARTIAL_MATCH"
                },
                "account_status": {
                  "type": "string",
                  "description": "It displays the status of the bank account.\nPossible values are:\n\n  - `VALID`\n\n  - `INVALID`\n\n  - `RECEIVED`\n\n  - `FAILED`\n\n  - `REJECTED`\n\n  - `APPROVAL_PENDING`\n\n  - `PARTIALLY_APPROVED`\n\n  - `IN_PROCESS`\n\n  - `CANCELLED`\n\n  - `PROCESSING`\n\n  - `MANUALLY_REJECTED`\n\n\n  [Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-description).",
                  "example": "VALID"
                },
                "account_status_code": {
                  "type": "string",
                  "description": "It displays the status code of the bank account.\nPossible values are:\n- `ACCOUNT_IS_VALID`\n- `FRAUD_ACCOUNT`\n- `FAILED_AT_BANK`\n- `NPCI_UNAVAILABLE`\n- `CONNECTION_TIMEOUT`\n- `SOURCE_BANK_DECLINED`\n- `BENE_BANK_DECLINED`\n- `IMPS_MODE_FAIL`\n- `BENEFICIARY_BANK_OFFLINE`\n- `VALIDATION_IN_PROGRESS`\n- `INVALID_ACCOUNT_FAIL`\n- `INVALID_IFSC_FAIL`\n- `VERIFICATION_ALREADY_UNDER_PROCESS`\n- `NRE_ACCOUNT_FAIL`\n- `ACCOUNT_BLOCKED`\n- `INSUFFICIENT_BALANCE`\n\n[Click here to view the detailed descriptions of each value](https://www.cashfree.com/docs/api-reference/vrs/v2/bav-v2/bav-response-description#account-status-code-description).",
                  "example": "ACCOUNT_IS_VALID"
                }
              }
            },
            "example": [
              {
                "reference_id": 34,
                "name_at_bank": "BHARATHTEST GKUMARUT",
                "bank_name": "YES BANK",
                "city": "MUMBAI",
                "branch": "SANTACRUZ, MUMBAI",
                "micr": 400532038,
                "name_match_score": "90.00",
                "name_match_result": "GOOD_PARTIAL_MATCH",
                "account_status": "VALID",
                "account_status_code": "ACCOUNT_IS_VALID",
                "utr": "404223241811"
              }
            ]
          }
        }
      },
      "BadgeDetails": {
        "type": "object",
        "description": "It contains information regarding any badges or emblems affixed to the vehicle. These badges could indicate various things such as the vehicle's model, trim level, special editions, or manufacturer-specific badges.",
        "example": {
          "badge_issue_date": "2023-10-23",
          "badge_no": "2389082",
          "class_of_vehicle": "LMV"
        },
        "properties": {
          "badge_issue_date": {
            "type": "string",
            "description": "It displays the date of the badge issued.",
            "example": "2023-10-23"
          },
          "badge_no": {
            "type": "string",
            "description": "It displays the number of the badge issued.",
            "example": "2389082"
          },
          "class_of_vehicle": {
            "type": "array",
            "description": "It displays the class of the vehicle.",
            "items": {
              "type": "string",
              "example": [
                "LMV"
              ]
            }
          }
        }
      },
      "BankAccountVerificationAsyncRequestSchema": {
        "description": "Request Body for Async Bank account verification",
        "type": "object",
        "required": [
          "bank_account",
          "ifsc"
        ],
        "properties": {
          "bank_account": {
            "description": "It is the bank account number for verification. It can be an alphanumeric value between 6 and 40 characters.",
            "type": "string",
            "example": "026291800001191",
            "default": "026291800001191"
          },
          "ifsc": {
            "description": "It is the IFSC information of the bank where the bank account is registered. It should be ann alphanumeric value of 11 characters. The first 4 characters should be alphabets, the 5th character should be a 0, and the remaining 6 characters should be numeric digits.",
            "type": "string",
            "example": "YESB0000262",
            "default": "YESB0000262"
          },
          "name": {
            "description": "It is the name of the bank account holder. When provided, a name match verification is done. Only alphanumeric, whitespace (  ), period (.), hyphen ( - ), slash (/), and ampersand ( & ) are allowed.",
            "type": "string",
            "example": "John Doe",
            "default": "John Doe"
          },
          "user_id": {
            "description": "It is the unique ID you create to identify the verification request. You can use this ID to get the status of the verification request in the Get Details API. Only alphanumeric and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "test",
            "default": "test"
          },
          "phone": {
            "description": "It is the phone number of the account holder that is associated with the entered bank account. Only numeric digits betweem 8 and 13 characters are allowed.",
            "type": "string",
            "example": "9999999999",
            "default": "9999999999"
          }
        }
      },
      "BankAccountVerificationBulkRequestSchema": {
        "description": "Request Body for Bulk Bank account verification",
        "type": "object",
        "required": [
          "bulk_verification_id",
          "entries"
        ],
        "properties": {
          "bulk_verification_id": {
            "description": "It is the unique ID you create to identify the API request. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-). and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "test001",
            "default": "test001"
          },
          "entries": {
            "description": "It is the array of bank account information, which needed to be verified",
            "type": "array",
            "default": [
              {
                "name": "John Doe",
                "phone": "9999999999",
                "bank_account": "11020001772",
                "ifsc": "HDFC0000001"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "It is the name of the bank account holder. When provided, a name match verification is done. Only alphanumeric, whitespace (  ), period (.), hyphen ( - ), slash (/), and ampersand ( & ) are allowed.",
                  "type": "string",
                  "example": "John Doe",
                  "default": "John Doe"
                },
                "bank_account": {
                  "description": "It is the bank account number for verification. It can be an alphanumeric value between 6 and 40 characters.",
                  "type": "string",
                  "example": "test001",
                  "default": "test001"
                },
                "ifsc": {
                  "description": "It is the IFSC information of the bank where the bank account is registered. It should be ann alphanumeric value of 11 characters. The first 4 characters should be alphabets, the 5th character should be a 0, and the remaining 6 characters should be numeric digits.",
                  "type": "string",
                  "example": "YESB0000001",
                  "default": "YESB0000001"
                },
                "phone": {
                  "description": "It is the phone number of the account holder that is associated with the entered bank account. Only numeric digits between 8 and 13 characters are allowed.",
                  "type": "string",
                  "example": "9999999999",
                  "default": "9999999999"
                }
              },
              "required": [
                "bank_account",
                "ifsc"
              ]
            },
            "example": [
              {
                "name": "John Doe",
                "bank_account": "11020001772",
                "ifsc": "HDFC0000001",
                "phone": "9999999999"
              }
            ]
          }
        }
      },
      "BankAccountVerificationSyncRequestSchema": {
        "description": "Request body for BAV V2 Sync",
        "type": "object",
        "required": [
          "bank_account",
          "ifsc"
        ],
        "properties": {
          "bank_account": {
            "description": "It is the bank account number for verification. It can be an alphanumeric value between 6 and 40 characters.",
            "type": "string",
            "example": "26291800001191",
            "default": "26291800001191"
          },
          "ifsc": {
            "description": "It is the IFSC information of the bank where the bank account is registered. It should be ann alphanumeric value of 11 characters. The first 4 characters should be alphabets, the 5th character should be a 0, and the remaining 6 characters should be numeric digits.",
            "type": "string",
            "example": "YESB0000001",
            "default": "YESB0000001"
          },
          "name": {
            "description": "It is the name of the bank account holder. When provided, a name match verification is done. Only alphanumeric, whitespace ( ), period (.), hyphen ( - ), slash (/), and ampersand ( & ) are allowed.",
            "type": "string",
            "example": "John Doe",
            "default": "John Doe"
          },
          "phone": {
            "description": "It is the phone number of the account holder that is associated with the entered bank account. Only numeric digits betweem 8 and 13 characters are allowed.",
            "type": "string",
            "example": "9999999999",
            "default": "9999999999"
          }
        }
      },
      "BulkPanRequestSchema": {
        "description": "Find the request parameters to verify a large number of PAN information",
        "type": "object",
        "required": [
          "bulk_verification_id",
          "entries"
        ],
        "example": {
          "bulk_verification_id": "ABCPV1234D",
          "entries": [
            {
              "pan": "ABCPP3011E",
              "name": "John Doe"
            },
            {
              "pan": "ABCPP3022E",
              "name": "Jane Doe"
            }
          ]
        },
        "properties": {
          "bulk_verification_id": {
            "description": "It is the unique ID you create to identify the API request. Only alphanumeric and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "ABCPV1234D",
            "default": "ABCPV1234D"
          },
          "entries": {
            "description": "It is the array of PAN details for verification. PAN and name should be included. The name parameter is optional.",
            "type": "array",
            "minItems": 2,
            "items": {
              "required": [
                "name",
                "pan"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "It is the name of the individual as registered in the PAN information.",
                  "example": "John Doe",
                  "default": "John Doe"
                },
                "pan": {
                  "type": "string",
                  "description": "It is the PAN information of the individual.",
                  "example": "ABCPV1234D",
                  "default": "ABCPV1234D"
                }
              }
            },
            "example": [
              {
                "name": "John Doe",
                "pan": "ABCPP3011E"
              },
              {
                "name": "Jane Doe",
                "pan": "ABCPP3022E"
              }
            ]
          }
        }
      },
      "CinRequestSchema": {
        "description": "Find the request parameters to retrieve CIN information",
        "type": "object",
        "required": [
          "verification_id",
          "cin"
        ],
        "example": {
          "verification_id": "ABC00123",
          "cin": "U72900KA2015PTC082988"
        },
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the API request. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-). and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "ABC00123",
            "default": "ABC00123"
          },
          "cin": {
            "description": "It is the unique alphanumeric identifier assigned to companies registered under the Ministry of Corporate Affairs, India.",
            "type": "string",
            "example": "U72900KA2015PTC082988",
            "default": "U72900KA2015PTC082988"
          }
        }
      },
      "CinResponseSchema": {
        "description": "Success response for retrieving CIN information",
        "type": "object",
        "example": {
          "VALID": {
            "value": {
              "verification_id": "ABC00123",
              "reference_id": 12345,
              "status": "VALID",
              "cin": "U72900KA2015PTC082988",
              "company_name": "COMPANY NAME",
              "registration_number": 82987,
              "incorporation_date": "2015-09-23",
              "cin_status": "ACTIVE",
              "email": "abc@xyz.com",
              "incorporation_country": "INDIA",
              "director_details": [
                {
                  "din": "07168822",
                  "name": "Frank Kelvin",
                  "dob": "1997-07-21",
                  "designation": "DIRECTOR",
                  "address": "ST BED KORAMANGALA, BANGALORE, KARNATAKA, INDIA, 566634"
                },
                {
                  "din": "07168826",
                  "name": "John Doe",
                  "dob": "1997-02-07",
                  "designation": "DIRECTOR",
                  "address": " GAUTAM NAGAR, NOIDA, UTTAR PRADESH, INDIA, 211361"
                }
              ]
            }
          },
          "INVALID": {
            "value": {
              "verification_id": "ABC00123",
              "reference_id": 12345,
              "status": "INVALID",
              "cin": "U72900KA2015PTC082981",
              "company_name": null,
              "registration_number": null,
              "incorporation_date": null,
              "cin_status": null,
              "email": null,
              "incorporation_country": null,
              "director_details": []
            }
          }
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the API request.",
            "example": "ABC00123"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the CIN information. Possible values are: - `VALID`: CIN provided is valid - `INVALID`: CIN provided is invalid",
            "example": "VALID"
          },
          "cin": {
            "type": "string",
            "description": "It displays the entered CIN information.",
            "example": "U72900KA2015PTC082988"
          },
          "company_name": {
            "type": "string",
            "description": "It displays the name of the company registered under the Ministry of Corporate Affaris.",
            "example": "COMPANY NAME"
          },
          "registration_number": {
            "type": "number",
            "description": "It displays the registration number of the company.",
            "example": 82987
          },
          "incorporation_date": {
            "type": "string",
            "description": "It displays the date of incorporation of the company.",
            "example": "23-09-2015"
          },
          "cin_status": {
            "type": "string",
            "description": "It displays the granular level status of the CIN information.",
            "example": "ACTIVE"
          },
          "email": {
            "type": "string",
            "description": "It displays the email ID of the company registered under the Ministry of Company Affairs.",
            "example": "abc@xyz.com"
          },
          "incorporation_country": {
            "type": "string",
            "description": "It displays the name of the country where the company is located.",
            "example": "INDIA"
          },
          "director_details": {
            "type": "array",
            "items": {
              "description": "It displays the details of the director of the company.",
              "properties": {
                "dob": {
                  "type": "string",
                  "description": "It displays the date of birth of the director."
                },
                "designation": {
                  "type": "string",
                  "description": "It displays the designation of the director."
                },
                "address": {
                  "type": "string",
                  "description": "It displays the address information of the director."
                },
                "din": {
                  "type": "string",
                  "description": "It displays the unique identification number assigned to individuals who are appointed as directors of companies in India."
                },
                "name": {
                  "type": "string",
                  "description": "It displays the name of the director."
                }
              },
              "example": {
                "dob": "1997-07-26",
                "designation": "DIRECTOR",
                "address": "ST BED KORAMANGALA, BANGALORE, KARNATAKA, INDIA, 566634",
                "din": "07268882",
                "name": "John Doe"
              }
            }
          }
        }
      },
      "CreateRequestRequestSchema": {
        "description": "Find the request parameters to create a reverse penny order request",
        "type": "object",
        "required": [
          "verification_id"
        ],
        "example": {
          "verification_id": "11",
          "name": "John Doe"
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the API request. The maximum character limit is 50. Only alphanumeric, hyphen (-), period (.), and underscore ( _ ) are allowed.",
            "example": "11",
            "default": "11"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the UPI VPA account holder.",
            "example": "John Doe",
            "default": "John Doe"
          }
        }
      },
      "CreateRequestResponseSchema": {
        "description": "Success response for creating a reverse penny order request",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify this API request.",
            "example": "11"
          },
          "ref_id": {
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "type": "integer",
            "example": 100173
          },
          "valid_upto": {
            "type": "string",
            "description": "It displays the time validity of the intent links in the create RPD request. By default, its value is 10 minutes from the time of link generation.",
            "example": "2023-11-08 09:32:52"
          },
          "upi_link": {
            "type": "string",
            "description": "It displays the generated UPI link for the reverse penny drop request.",
            "example": "upi://pay?pa=yespay.cpisprod01@yesbankltd&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=100173&tid=100173"
          },
          "paytm": {
            "type": "string",
            "description": "It displays the generated Paytm link for the reverse drop request.",
            "example": "paytmmp://pay?pa=yespay.cpisprod01@yesbankltd&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=100173&tid=100173"
          },
          "bhim": {
            "type": "string",
            "description": "It displays the generated BHIM link for the reverse penny drop request.",
            "example": "bhim://upi://pay?pa=yespay.cpisprod01@yesbankltd&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=100173&tid=100173"
          },
          "gpay": {
            "type": "string",
            "description": "It displays the generated Gpay link for the reverse penny drop request.",
            "example": "tez://upi/pay?pa=yespay.cpisprod01@yesbankltd&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=100173&tid=100173"
          },
          "phonepe": {
            "type": "string",
            "description": "It displays the generated Phonepe link for the reverse penny drop request.",
            "example": "phonepe://pay?pa=yespay.cpisprod01@yesbankltd&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=100173&tid=100173"
          },
          "qr_code": {
            "type": "string",
            "description": "It displays the generated QR code for the reverse penny drop request.",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAQAAAAEAAQMAAABmvDolAAAABlBMVEX///8AAABVwtN+AAACuklEQVR42uyYwa3jMAxEx/CBR5WgTqzGgtiBG5M7UQk66mB4FkP/3WR/A5aB8PZ/3sGUqOGQ+MY3bhhGklsd6sAdiAASJgz6b70RUADLQQgiuaMBqQ0VGHsCSMvhwFBHrvqDDRjqzLUzYCPrwLWM1FG3qU+g6sMfXg9G5hsCgG3MmOtMFoAZiduviroaOJ/eFF71EdeyR8tt0uX8epuXAh4DDzzDSnKknXX9f1wMWEFSCYRXncsjjjpstkTW911cDkCqNbk+PACMhZ5DOMJ6K8Cy5ZDxDIv/bLTsijJ2BbBNyiOsBbqLZAcSX3XuB1CxSBJ+pHiH0bY2cPnQh8sBxJY8hwOIe1T3NfIIR+CNAKmFNwhZhkck9TaZw8c5XA/o6bUpSHnnMlMFw8MEPNANIOV1uzhz5YIdlpUF0BVQSOiYn3p6UL9QA6nP8OEfrgZ01N55l7DEJarj8nDpHW8EWDGe0wIXzBzZ5Hm2t3voAUC0TDkx9Yu5AC21gVKHv1rdBUAi1UnA+6hVMOwHkKfl4W7Mq7qoxxk/GsodALfiQFJeRR3D/aS63r+4HjC2ZOphS2AZqYvhxkPTRO0JgGcx/9jFlixDDWRHP0Bxu+ifzSVSyjxhAjDXjgCkJh+2BHJxu3iOtPVOgDvzzQVkLQ95MbgQz+9h8nrAXBAAPKGa3tFghx2B7+3B9YB78wMTZHJW3x7YaXLmroDsWQxyYjrqJOH99LQ3AHx6POcFf5nlZy1yfBjOy4FzB1JT9Q+nC8ggO/FO83rg3CaRGnLd9CLJiX244h6Ac5nMOlRNvLsPwaYs/o0PPQC+4ZzwlCkre6QvONzW3AzIYeNpedWaW2pTeNXugHPHxbVQ/mFrCK//F/tXA14wWQ2CexyLTxM+BHcE/F0mL2HHI+5AsmzS2h33Ab7xja7iTwAAAP//HxNnsaD8lqMAAAAASUVORK5CYII="
          }
        }
      },
      "DigiLockerVerifyAccountRequestSchema": {
        "description": "Find the request parameters to verify a Digilocker account.",
        "type": "object",
        "required": [
          "verification_id"
        ],
        "properties": {
          "verification_id": {
            "description": "It is a unique ID you create to identify the API request. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-). and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "ABC00123"
          },
          "mobile_number": {
            "type": "string",
            "description": "It is the mobile number of a user. Either an Aadhaar number or mobile is required to verify whether a Digilocker account exists. **(conditonal mandatory)**",
            "example": "9988777666"
          },
          "aadhaar_number": {
            "description": "It is the unique 12-digit identification number issued by the Unique Identification Authority of India (UIDAI). Either an Aadhaar number or mobile is required to verify whether a Digilocker account exists. **(conditonal mandatory)**",
            "type": "string",
            "example": "655675523712"
          }
        }
      },
      "DigiLockerVerificationCreateUrlRequestSchema": {
        "description": "Find the request parameters to create a DigiLocker URL for the document verification.",
        "type": "object",
        "example": {
          "verification_id": "ABC00123",
          "document_requested": [
            "AADHAAR",
            "PAN",
            "DRIVING_LICENSE"
          ],
          "redirect_url": "https://www.cashfree.com"
        },
        "required": [
          "verification_id",
          "document_requested"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the API request. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-). and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "ABC00123"
          },
          "document_requested": {
            "description": "It is the list of customer documents required for verification.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AADHAAR",
                "PAN",
                "DRIVING_LICENSE"
              ]
            },
            "example": [
              "AADHAAR",
              "PAN",
              "DRIVING_LICENSE"
            ]
          },
          "redirect_url": {
            "description": "It is the URL you need to provide to redirect the user after completing the DigiLocker journey. It will contain the verification_id, which can be used to check the status of the verification.",
            "type": "string",
            "example": "https://www.cashfree.com"
          }
        }
      },
      "DigiLockerVerifyAccountResponseSchema": {
        "description": "Response of verify DigiLocker account API.",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify this API request.",
            "example": "ABC00123"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes. format: `int64`",
            "example": 12345
          },
          "mobile_number": {
            "type": "string",
            "description": "Mobile number of the individual.",
            "example": "1234567899"
          },
          "aadhaar_number": {
            "type": "string",
            "description": "Masked Aadhaar number of the individual.",
            "example": "XXXXXXXX3712"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the digilocker account. Possible values are:\n  - `ACCOUNT_EXISTS`: Digilocker account exists\n  - `ACCOUNT_NOT_FOUND`: Digilocker account not found",
            "example": "ACCOUNT_EXISTS"
          },
          "digilocker_id": {
            "type": "string",
            "description": "It is a unique 36-character DigiLocker ID of the user account.",
            "example": "8aa626bf-34aa-5ffc-a123-f69207e129a7"
          }
        }
      },
      "DigiLockerVerificationCreateUrlResponseSchema": {
        "description": "Success response for creating a DigiLocker URL for document verification.",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify this API request.",
            "example": "ABC00123"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes. format: `int64`",
            "example": 12345
          },
          "url": {
            "type": "string",
            "description": "It displays the URL received to retrieve and verify aadhaar information from DigiLocker.",
            "example": "https://verification-test.cashfree.com/dgl/h7562ci7us0"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the verification request.. Possible values are:\n  - `PENDING`",
            "example": "PENDING"
          },
          "document_requested": {
            "type": "array",
            "description": "It displays the list of documents requested for verification.",
            "items": {
              "type": "string",
              "enum": [
                "AADHAAR",
                "PAN",
                "DRIVING_LICENSE"
              ]
            },
            "example": [
              "AADHAAR",
              "PAN",
              "DRIVING_LICENSE"
            ]
          },
          "redirect_url": {
            "type": "string",
            "description": "It displays the URL entered in the request that takes the user to after completing the DigiLocker journey.",
            "example": "https://www.cashfree.com"
          }
        }
      },
      "DigiLockerVerificationGetAadhaarDocumentResponseSchema": {
        "description": "Success response for Get Aadhaar DigiLocker Document API",
        "type": "object",
        "properties": {
          "care_of": {
            "type": "string",
            "description": "It displays the name of the parent or guardian.",
            "example": "John Snow"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the individual.",
            "example": "02-02-1995"
          },
          "gender": {
            "type": "string",
            "description": "It displays the gender of the individual.",
            "example": "M"
          },
          "name": {
            "type": "string",
            "description": "It displays the name of the individual.",
            "example": "John Doe"
          },
          "photo_link": {
            "type": "string",
            "description": "It displays the link to the photo of the individual present in the document.",
            "example": "PHOTO_LINK"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1234
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the aadhaar document fetch. Possible values are:\n  - `SUCCESS`: Aadhaar successfully fetched\n  - `AADHAAR_NOT_LINKED`: Aadhaar not linked",
            "example": "SUCCESS"
          },
          "split_address": {
            "type": "object",
            "description": "It contains the address information in individual components.",
            "properties": {
              "country": {
                "type": "string",
                "description": "It displays the name of the country as present in the document.",
                "example": "India"
              },
              "dist": {
                "type": "string",
                "description": "It displays the name of the district as present in the document.",
                "example": "Haveri"
              },
              "house": {
                "type": "string",
                "description": "It displays the name of the house as present in the document.",
                "example": "House"
              },
              "landmark": {
                "type": "string",
                "description": "It displays the name of the landmark as present in the document.",
                "example": "Landmark"
              },
              "pincode": {
                "type": "string",
                "description": "It displays the PIN code as present in the document.",
                "example": "560103"
              },
              "po": {
                "type": "string",
                "description": "It displays the name of the post office as present in the document.",
                "example": "Post Office"
              },
              "state": {
                "type": "string",
                "description": "It displays the name of the state as present in the document.",
                "example": "State"
              },
              "street": {
                "type": "string",
                "description": "It displays the name of the street as present in the document.",
                "example": "Street"
              },
              "subdist": {
                "type": "string",
                "description": "It displays the name of the sub district as present in the document.",
                "example": "SubDist"
              },
              "vtc": {
                "type": "string",
                "description": "It displays the name of the VTC (village, town, city) as present in the address.",
                "example": "Vtc"
              }
            },
            "example": {
              "country": "India",
              "dist": "Haveri",
              "house": "House",
              "landmark": "Landmark",
              "pincode": "581112",
              "po": "Post Office",
              "state": "State",
              "street": "Street",
              "subdist": "SubDist",
              "vtc": "Vtc"
            }
          },
          "uid": {
            "type": "string",
            "description": "It displays the unique number assigned to the individual when applying for the aadhaar card.]",
            "example": "xxxxxxxx5678"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "ABC00123"
          },
          "xml_file": {
            "type": "string",
            "description": "It is the link which points to the zip file containing the XML file and has 48 hrs expiry",
            "example": "https://abc.xyz"
          }
        }
      },
      "DigiLockerVerificationGetPanDocumentResponseSchema": {
        "description": "Success response for Get Pan DigiLocker Document API",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1234
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "ABC00123"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the pan document fetch. Possible values are:\n  - `SUCCESS`: Pan successfully fetched",
            "example": "SUCCESS"
          },
          "pan": {
            "type": "string",
            "description": "It displays the unique 10-character alphanumeric identifier issued by the Income Tax Department.",
            "example": "ABCPV1234D"
          },
          "type": {
            "type": "string",
            "description": "It displays the type of the PAN issued.",
            "example": "Individual"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the individual.",
            "example": "02-02-1995"
          },
          "name_pan_card": {
            "type": "string",
            "description": "It displays the name displayed on the PAN card.",
            "example": "JOHN DOE"
          },
          "gender": {
            "type": "string",
            "description": "It displays the gender of the individual.",
            "example": "Male"
          },
          "xml_file": {
            "type": "string",
            "description": "It is the link which points to the zip file which contains the XML file and has 48 hrs expiry",
            "example": "https://abc.xyz"
          }
        }
      },
      "DigiLockerVerificationGetDLDocumentResponseSchema": {
        "description": "Success response for Get Driving License Digilocker Document API",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1234
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "ABC00123"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the driving license document fetch. Possible values are:\n  - `SUCCESS`: Driving License successfully fetched",
            "example": "SUCCESS"
          },
          "dl_number": {
            "description": "It is the driving licence number of the individual.",
            "type": "string",
            "example": "KA0120198900984"
          },
          "issued_at": {
            "type": "string",
            "description": "It displays the place where a driving license is issued."
          },
          "issue_date": {
            "type": "string",
            "description": "It displays the issue date of driving license.",
            "example": "03-11-2022"
          },
          "categories": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "description": "List of vehicle categories associated with the individual.",
                "items": {
                  "type": "object",
                  "properties": {
                    "class_of_vehicle": {
                      "type": "string",
                      "description": "Type of vehicle category.",
                      "example": "MCWG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the vehicle category.",
                      "example": "Motor Cycle with Gear(Non Transport)"
                    },
                    "issue_date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date when the vehicle category was issued.",
                      "example": "03-11-2022"
                    }
                  }
                }
              }
            }
          },
          "expiry_date": {
            "type": "string",
            "description": "It displays the date until which the driving license is valid.",
            "example": "16-09-2039"
          },
          "name": {
            "type": "string",
            "description": "It displays the name of the individual.",
            "example": "John Doe"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the individual.",
            "example": "02-02-1995"
          },
          "care_of": {
            "type": "string",
            "description": "It displays the name of the parent or guardian.",
            "example": "John Snow"
          },
          "present_address": {
            "type": "string",
            "description": "It displays the current address of the owner of the vehicle.",
            "example": "FLAT # 901 A BLOCK GOYAL ORCHID, LAKE VIEW APTS KARIAGRAHARA, BELLANDUR, Bangalore, Karnataka, 560103"
          },
          "permanent_address": {
            "type": "string",
            "description": "It displays the permanent address of the owner of the vehicle.",
            "example": "FLAT # 901 A BLOCK GOYAL ORCHID, LAKE VIEW APTS KARIAGRAHARA, BELLANDUR, Bangalore, Karnataka, 560103"
          },
          "gender": {
            "type": "string",
            "description": "It displays the gender of the individual.",
            "example": "Male"
          },
          "photo_link": {
            "type": "string",
            "description": "It displays the link to the photo of the individual present in the document.",
            "example": "PHOTO_LINK"
          },
          "xml_file": {
            "type": "string",
            "description": "It is the link which points to the zip file which contains the XML file and has 48 hrs expiry",
            "example": "https://abc.xyz"
          }
        }
      },
      "DigiLockerVerificationGetStatusResponseSchema": {
        "description": "Success response of Get DigiLocker Verification Status",
        "type": "object",
        "properties": {
          "user_details": {
            "type": "object",
            "description": "It displays the details of the individual(user).",
            "properties": {
              "name": {
                "type": "string",
                "description": "It displays the name of the individual.",
                "example": "John Doe"
              },
              "dob": {
                "type": "string",
                "description": "It displays the date of birth of the individual.",
                "example": "02-02-1995"
              },
              "gender": {
                "type": "string",
                "description": "It displays the gender of the individual.",
                "example": "M"
              },
              "eaadhaar": {
                "type": "string",
                "description": "It displays the e aadhaar availability of the individual.",
                "example": "Y"
              },
              "mobile": {
                "type": "string",
                "description": "It displays the mobile number of the individual.",
                "example": "9999999999"
              }
            },
            "example": {
              "name": "John Doe",
              "dob": "02-02-1995",
              "gender": "M",
              "eaadhaar": "Y",
              "mobile": "9999999999"
            }
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request. Possible values are:\n  - `PENDING`\n  - `AUTHENTICATED`\n  - `EXPIRED`",
            "example": "PENDING"
          },
          "document_requested": {
            "type": "array",
            "description": "It contains the information of the requested document(s) for verification.",
            "items": {
              "type": "string"
            },
            "example": [
              "AADHAAR"
            ]
          },
          "document_consent": {
            "type": "array",
            "description": "It displays the consent of the individual(user) for document verification.",
            "items": {
              "type": "string"
            },
            "example": [
              "AADHAAR"
            ]
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "ABC00123"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1234
          }
        }
      },
      "DrivingLicenceDetails": {
        "type": "object",
        "description": "It contains the details of the driving licence.",
        "example": {
          "value": {
            "date_of_issue": "10/05/2019",
            "date_of_last_transaction": null,
            "status": null,
            "last_transacted_at": null,
            "name": "JOHN DOE",
            "father_or_husband_name": "JOHN DOE",
            "address_list": [
              {
                "complete_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                "type": "permanent",
                "split_address": {
                  "district": [
                    "BANGALORE"
                  ],
                  "state": [
                    "KARNATAKA",
                    "KA"
                  ],
                  "city": [
                    "BELLANDUR"
                  ],
                  "pincode": "560103",
                  "country": [
                    "IN",
                    "IND",
                    "INDIA"
                  ],
                  "address_line": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103"
                }
              },
              {
                "complete_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                "type": "temporary",
                "split_address": {
                  "district": [
                    "BANGALORE"
                  ],
                  "state": [
                    "KARNATAKA",
                    "KA"
                  ],
                  "city": [
                    "BELLANDUR"
                  ],
                  "pincode": "560103",
                  "country": [
                    "IN",
                    "IND",
                    "INDIA"
                  ],
                  "address_line": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103"
                }
              }
            ],
            "address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
            "split_address": {
              "district": [
                "BANGALORE"
              ],
              "state": [
                ""
              ],
              "city": [
                "BELLANDUR"
              ],
              "pincode": "560103",
              "country": [
                "IN",
                "IND",
                "INDIA"
              ],
              "address_line": "FLAT NO D-901 SUNCITY,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
              "cov_details": []
            }
          }
        },
        "properties": {
          "date_of_issue": {
            "type": "string",
            "format": "date",
            "example": "2023-10-23"
          },
          "date_of_last_transaction": {
            "type": "string",
            "format": "date",
            "example": "2023-10-23"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "last_transacted_at": {
            "type": "string",
            "format": "date",
            "example": "2023-10-23"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "father_or_husband_name": {
            "type": "string",
            "example": "John Doe"
          },
          "address_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDetails"
            }
          },
          "address": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "split_address": {
            "type": "object",
            "properties": {
              "district": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "Bangalore"
                  ]
                }
              },
              "state": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": [
                      "KARNATAKA",
                      "KA"
                    ]
                  }
                }
              },
              "city": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "Bangalore"
                  ]
                }
              },
              "pincode": {
                "type": "string",
                "example": "560102"
              },
              "country": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "INDIA",
                    "IND",
                    "IN"
                  ]
                }
              },
              "address_line": {
                "type": "string",
                "example": "S-90 SunTower, GopiNagar, Banaglore, KA - 560109"
              }
            }
          },
          "cov_details": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "DrivingLicenseRequestSchema": {
        "description": "Find the request parameters to retrieve driving licence information",
        "type": "object",
        "example": {
          "verification_id": "test001",
          "dl_number": "KA0120198900984",
          "dob": "1994-08-05"
        },
        "required": [
          "verification_id",
          "dl_number",
          "dob"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the verification request. A maximum of 50 characters are allowed. Only alphanumeric, period (.), hyphen (-) and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "test001",
            "default": "test001"
          },
          "dl_number": {
            "description": "It is the driving licence number of the individual for verification.",
            "type": "string",
            "example": "KA0120198900984",
            "default": "KA0120198900984"
          },
          "dob": {
            "description": "It is the date of birth of the individual as present in the driving licence. The accepted format is YYYY-MM-DD.",
            "type": "string",
            "example": "1994-08-05",
            "default": "1994-08-05"
          }
        }
      },
      "DrivingLicenseResponseSchema": {
        "type": "object",
        "description": "Success response for retrieving driving licence information",
        "example": {
          "value": {
            "verification_id": "69c5077c-d95a-48cb-b428-4ced025db671",
            "reference_id": 76,
            "dl_number": "KA51201900089895",
            "dob": "1994-08-05",
            "status": "VALID",
            "badge_details": [
              {
                "badge_issue_date": null,
                "badge_no": null,
                "class_of_vehicle": [
                  "LMV"
                ]
              }
            ],
            "dl_validity": {
              "non_transport": {
                "to": "09/05/2039",
                "from": "10/05/2019",
                "hazardous_valid_till": null,
                "transport": {
                  "to": null,
                  "from": null
                },
                "hill_valid_till": null
              },
              "details_of_driving_licence": {
                "date_of_issue": "10/05/2019",
                "date_of_last_transaction": null,
                "status": null,
                "last_transacted_at": null,
                "name": "JOHN DOE",
                "father_or_husband_name": "JOHN DOE",
                "address_list": [
                  {
                    "complete_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                    "type": "permanent",
                    "split_address": {
                      "district": [
                        "BANGALORE"
                      ],
                      "state": [
                        "KARNATAKA",
                        "KA"
                      ],
                      "city": [
                        "BELLANDUR"
                      ],
                      "pincode": "560103",
                      "country": [
                        "IN",
                        "IND",
                        "INDIA"
                      ],
                      "address_line": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103"
                    }
                  },
                  {
                    "complete_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                    "type": "temporary",
                    "split_address": {
                      "district": [
                        "BANGALORE"
                      ],
                      "state": [
                        "KARNATAKA",
                        "KA"
                      ],
                      "city": [
                        "BELLANDUR"
                      ],
                      "pincode": "560103",
                      "country": [
                        "IN",
                        "IND",
                        "INDIA"
                      ],
                      "address_line": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103"
                    }
                  }
                ],
                "address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                "photo": "PHOTO_LINK.jpeg",
                "split_address": {
                  "district": [
                    "BANGALORE"
                  ],
                  "state": [
                    ""
                  ],
                  "city": [
                    "BELLANDUR"
                  ],
                  "pincode": "560103",
                  "country": [
                    "IN",
                    "IND",
                    "INDIA"
                  ],
                  "address_line": "FLAT NO D-901 SUNCITY,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                  "cov_details": []
                }
              }
            }
          }
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify this API request.",
            "example": "test001"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 78
          },
          "dl_number": {
            "type": "string",
            "description": "It displays the unique number assigned to the driving licence.",
            "example": "JK01FG8087"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the individual as present in the driving licence.",
            "example": "2001-10-23"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the driving licence.\nPossible values are \n- `VALID`: driving license is valid.\n- `INVALID`: driving licence is invalid.",
            "example": "VALID"
          },
          "badge_details": {
            "type": "array",
            "description": "It contains the...",
            "items": {
              "$ref": "#/components/schemas/BadgeDetails"
            }
          },
          "dl_validity": {
            "type": "object",
            "description": "It contains the different information regarding the validity of the licence.",
            "properties": {
              "non_transport": {
                "$ref": "#/components/schemas/ValidityDetails"
              },
              "hazardous_valid_till": {
                "type": "string",
                "format": "date",
                "description": "It displays till when the individual can drive hazardous vehicle.",
                "example": "2001-10-23"
              },
              "transport": {
                "$ref": "#/components/schemas/ValidityDetails"
              },
              "hill_valid_till": {
                "type": "string",
                "format": "date",
                "description": "It displays till when the individual can drive the vehicle in hill and mountain regions.",
                "example": "2001-10-23"
              }
            }
          },
          "details_of_driving_licence": {
            "$ref": "#/components/schemas/DrivingLicenceDetails"
          }
        }
      },
      "ESignVerificationCreateSignatureRequestSchema": {
        "description": "Find the request parameters to add the details of the document and signer(s)",
        "type": "object",
        "example": {
          "verification_id": "ABC00123",
          "document_id": 36,
          "notification_modes": "email",
          "auth_type": "AADHAAR",
          "expiry_in_days": "2",
          "signers": [
            {
              "name": "John Doe",
              "email": "John.Doe@email.com",
              "phone": "9999999999",
              "sequence": 1,
              "aadhaar_last_four_digit": "6789",
              "sign_positions": [
                {
                  "page": 1,
                  "top_left_x_coordinate": 100,
                  "bottom_right_x_coordinate": 200,
                  "top_left_y_coordinate": 180,
                  "bottom_right_y_coordinate": 120
                },
                {
                  "page": 2,
                  "top_left_x_coordinate": 100,
                  "bottom_right_x_coordinate": 200,
                  "top_left_y_coordinate": 180,
                  "bottom_right_y_coordinate": 120
                }
              ]
            }
          ]
        },
        "required": [
          "verification_id",
          "document_id",
          "notification_modes",
          "auth_type",
          "expiry_in_days",
          "signers"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "ABC00123",
            "default": "ABC00123"
          },
          "document_id": {
            "description": "It is the unique ID received in the Upload Document for E-Sign API response.",
            "type": "integer",
            "example": 36,
            "default": 36
          },
          "notification_modes": {
            "description": "It is how you want to notify the signee about the e-sign details.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "email"
              ]
            },
            "example": [
              "email"
            ]
          },
          "auth_type": {
            "description": "It is the type of authentication to be used for signature.",
            "type": "string",
            "enum": [
              "AADHAAR"
            ],
            "example": "AADHAAR"
          },
          "expiry_in_days": {
            "description": "It is the expiry of the signing link for each signer in days. The maximum allowed time is 15 days.",
            "type": "string",
            "example": "2",
            "default": "2"
          },
          "signers": {
            "description": "It should contain the details of the signer(s).",
            "type": "array",
            "default": [
              {
                "name": "John Doe",
                "email": "John.Doe@email.com",
                "phone": "9999999999",
                "sequence": 1,
                "aadhaar_last_four_digit": "6789",
                "sign_positions": [
                  {
                    "page": 1,
                    "top_left_x_coordinate": 100,
                    "bottom_right_x_coordinate": 200,
                    "top_left_y_coordinate": 180,
                    "bottom_right_y_coordinate": 120
                  },
                  {
                    "page": 2,
                    "top_left_x_coordinate": 100,
                    "bottom_right_x_coordinate": 200,
                    "top_left_y_coordinate": 180,
                    "bottom_right_y_coordinate": 120
                  }
                ]
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "It is the name of the signer.",
                  "type": "string",
                  "example": "John Doe",
                  "default": "John Doe"
                },
                "email": {
                  "description": "It is the email ID of the signer.",
                  "type": "string",
                  "format": "email",
                  "example": "abc.def@klm.com",
                  "default": "abc.def@klm.com"
                },
                "phone": {
                  "description": "It is the phone number of the signer.",
                  "type": "string",
                  "example": "9999999999",
                  "default": "9999999999"
                },
                "sequence": {
                  "description": "It displays the sequence of the signer to sign the document. The value can be between 1 to n where n is number of signers.",
                  "type": "integer",
                  "example": 1,
                  "default": 1
                },
                "aadhaar_last_four_digit": {
                  "description": "It displays the last 4 digit of signer's aadhaar number.",
                  "type": "string",
                  "example": "6789"
                },
                "sign_positions": {
                  "description": "It displays the page wise coordinates of the rectangular space for signature placement.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "description": "It is the page number where the signer places the signature.",
                        "type": "integer",
                        "example": 1,
                        "default": 1
                      },
                      "top_left_x_coordinate": {
                        "description": "It is the top left X coordinate of the signature area (rectangular).",
                        "type": "integer",
                        "example": 100,
                        "default": 100
                      },
                      "bottom_right_x_coordinate": {
                        "description": "It is the bottom right X coordinate of the signature area (rectangular).",
                        "type": "integer",
                        "example": 200,
                        "default": 200
                      },
                      "top_left_y_coordinate": {
                        "description": "It is the top left Y coordinate of the signature area (rectangular).",
                        "type": "integer",
                        "example": 180,
                        "default": 180
                      },
                      "bottom_right_y_coordinate": {
                        "description": "It is the bottom right Y coordinate of the signature area (rectangular).",
                        "type": "integer",
                        "example": 120,
                        "default": 120
                      }
                    },
                    "required": [
                      "page",
                      "top_left_x_coordinate",
                      "bottom_right_x_coordinate",
                      "top_left_y_coordinate",
                      "bottom_right_y_coordinate"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "email",
                "sequence",
                "sign_positions"
              ]
            },
            "example": [
              {
                "name": "John Doe",
                "email": "John.Doe@email.com",
                "phone": "9999999999",
                "sequence": 1,
                "aadhaar_last_four_digit": "6789",
                "sign_positions": [
                  {
                    "page": 1,
                    "top_left_x_coordinate": 100,
                    "bottom_right_x_coordinate": 200,
                    "top_left_y_coordinate": 180,
                    "bottom_right_y_coordinate": 120
                  },
                  {
                    "page": 2,
                    "top_left_x_coordinate": 100,
                    "bottom_right_x_coordinate": 200,
                    "top_left_y_coordinate": 180,
                    "bottom_right_y_coordinate": 120
                  }
                ]
              }
            ]
          },
          "redirect_url": {
            "description": "It is the URL that you need to provide that takes the user to after completing the e-sign journey. It will contain the verification_id that can be used to get the status of the verification.",
            "type": "string",
            "example": "REDIRECT_PAGE_URL",
            "default": "REDIRECT_PAGE_URL"
          }
        }
      },
      "ESignVerificationCreateSignatureResponseSchema": {
        "description": "Success response for Create E-Sign RequestR",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the API request. Possible values are: - `SUCCESS`: Successfully initiated request for e-signature.",
            "example": "SUCCESS"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the API request.",
            "example": "ABC00123"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 33
          },
          "document_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments to identify the document. You receive this ID in the response of Upload Document For E-Sign API.",
            "example": 36
          },
          "signing_link": {
            "type": "string",
            "description": "It displays the link to proceed with the e-signature of the document for the first signer.",
            "example": "SIGNING_LINK"
          }
        }
      },
      "ESignVerificationGetStatusResponseSchema": {
        "description": "Success response for Get E-Sign Status",
        "type": "object",
        "example": {
          "value": {
            "status": "IN_PROGRESS",
            "reference_id": 32,
            "verification_id": "ESTestVERID34",
            "document_id": 36,
            "signers": [
              {
                "name": "John Doe",
                "status": "SUCCESS",
                "is_notified": true
              },
              {
                "name": "Frank Kelvin",
                "status": "SIGN_IN_PROGRESS",
                "is_notified": true
              }
            ],
            "signed_doc_url": "SIGNED_DOC_URL"
          }
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the e-signature. Possible values are: - `IN_PROGRESS`: Signing process is initiated. - `SUCCESS`: All the signers signed successfully. - `EXPIRED`: Signing window expired. - `FAILURE`: Error occured during signing the document.",
            "example": "IN_PROGRESS"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 32
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID created by you to identify the API request.",
            "example": "ABC00123"
          },
          "document_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments to identify the uploaded document.",
            "example": 36
          },
          "signers": {
            "type": "array",
            "description": "It contains the details of the signer(s).",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "It displays the name of the signer.",
                  "example": "John Doe"
                },
                "status": {
                  "type": "string",
                  "description": "It displays the signature status of the signer. Possible values are: - `RECEIVED`: Signer's signing request registered. Singning link is not provided yet. - `IN_PROGRESS`: Signing process is initiated. - `SUCCESS`: The signer has signed successfully. - `EXPIRED`: Signing window expired. - `FAILURE`: Error occured during signing the document.",
                  "example": "SUCCESS"
                },
                "is_notified": {
                  "type": "boolean",
                  "description": "It displays whether the signer is informed of the e-signature of the document.",
                  "example": true
                }
              },
              "required": [
                "name",
                "status",
                "is_notified"
              ]
            },
            "example": [
              {
                "name": "John Doe",
                "status": "RECEIVED",
                "is_notified": false
              },
              {
                "name": "John Snow",
                "status": "SIGN_INITIATED",
                "is_notified": true
              },
              {
                "name": "Frank Kelvin",
                "status": "SIGN_IN_PROGRESS",
                "is_notified": true
              },
              {
                "name": "John Cena",
                "status": "SUCCESS",
                "is_notified": true
              },
              {
                "name": "John Frank",
                "status": "FAILURE",
                "is_notified": true
              },
              {
                "name": "Frank Doe",
                "status": "EXPIRED",
                "is_notified": true
              }
            ]
          },
          "signed_doc_url": {
            "type": "string",
            "description": "It displays the link of the signed document.",
            "example": "SIGNED_DOC_URL"
          }
        }
      },
      "ESignVerificationUploadDocumentRequestSchema": {
        "description": "Find the request parameters to upload the document that requires an e-signature.",
        "type": "object",
        "required": [
          "document"
        ],
        "example": {
          "value": {
            "document": "DOCUMENT.pdf"
          }
        },
        "properties": {
          "document": {
            "description": "Upload the document that requires an e-sign. Allowed file type - PDF. Max file size allowed - 10MB.",
            "type": "string",
            "format": "binary",
            "example": "DOCUMENT.pdf"
          }
        }
      },
      "ESignVerificationUploadDocumentResponseSchema": {
        "description": "Success response for Upload Document For E-Sign",
        "type": "object",
        "example": {
          "value": {
            "status": "SUCCESS",
            "document_id": 14125
          }
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the API request. Possible values are: - `SUCCESS`: File uploaded successfully.",
            "example": "SUCCESS"
          },
          "document_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments to identify the uploaded document.",
            "example": 14125
          }
        }
      },
      "EmailDetailsMobile360": {
        "description": "It contains all the email information of the individual.",
        "type": "object",
        "example": {
          "email_list": [
            {
              "sequence": "1",
              "email": "johndoe@gmail.com"
            },
            {
              "sequence": "2",
              "email": "johndoe2@gmail.com"
            }
          ]
        },
        "properties": {
          "sequence": {
            "type": "string",
            "description": "It displays sequence of the list.",
            "example": "1"
          },
          "email": {
            "type": "string",
            "description": "It displays the email of the individual.",
            "example": "johndoe@gmail.com"
          }
        }
      },
      "ErrorResponseSchema": {
        "description": "Response in case of error.",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "x-client-id_missing"
          },
          "error": {
            "type": "object",
            "example": {
              "ref_id": 102
            }
          },
          "message": {
            "type": "string",
            "example": "x-client-id is missing in the request.",
            "description": "It displays the outcome of the error."
          },
          "type": {
            "type": "string",
            "example": "validation_error",
            "description": "It displays the type of error."
          }
        }
      },
      "FaceMatchRequestSchema": {
        "description": "Find the request parameters to verify facial features in two images.",
        "type": "object",
        "required": [
          "verification_id",
          "first_image",
          "second_image"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you need to create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-) and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "12345678",
            "default": "12345678"
          },
          "first_image": {
            "description": "It is the scanned copy of the image 1. Allowed file type - JPEG/JPG/PNG. Maximum file size allowed for both the files is 5 MB.",
            "type": "string",
            "format": "binary",
            "example": "FIRST_IMAGE"
          },
          "second_image": {
            "description": "It is the scanned copy of the image 2. Allowed file types are JPEG/JPG/PNG. Maximum file size allowed for both the files is 5 MB.",
            "type": "string",
            "format": "binary",
            "example": "SECOND_IMAGE"
          },
          "threshold": {
            "description": "It is the value to distinguish and match the facial features of the two images. The range is between 0 and 1. The default value is set as 0.75. We conclude that the images match when the analysis is or greater than the value set for threshold.",
            "type": "string",
            "example": "0.5",
            "default": "0.75"
          }
        }
      },
      "FaceMatchResponseSchema": {
        "description": "Success response for Face Match API",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are:\n- `SUCCESS`: A successful face match returns all fields in the response.\n- `MULTIPLE_FACE_DETECTED`: Indicates that multiple faces were detected in one or both of the input images.",
            "example": "SUCCESS"
          },
          "ref_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 2000
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the API request.",
            "example": "2000"
          },
          "face_match_result": {
            "type": "string",
            "description": "It displays the result of the face match verification request.\nPossible values are:\n- `YES`: The face match is positive i.e. the given 2 photos match.\n- `NO`: The face match is negative i.e. the given 2 photos don't match.",
            "example": "YES/NO"
          },
          "face_match_score": {
            "type": "number",
            "description": "It displays the score of the face match verification request.\nRange: `0 < x < 1`",
            "example": 0.8
          }
        }
      },
      "GetPanBulkResponseSchema": {
        "description": "Response for Verify Bulk PAN API",
        "type": "object",
        "properties": {
          "bulk_verification_id": {
            "type": "string",
            "description": "It displays the unique ID created by you to identify the bulk verification request.",
            "example": "1123456"
          },
          "reference_id": {
            "type": "string",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": "515"
          },
          "count": {
            "format": "int64",
            "type": "integer",
            "example": 1
          },
          "entries": {
            "type": "array",
            "description": "It contains the details of PAN for verification.",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/GetVerifyPanResponseSchema"
            },
            "example": {
              "father_name": "John Doe",
              "message": "VALID",
              "name_match_result": "PARTIAL",
              "name_match_score": "0.7",
              "name_provided": "John De",
              "pan": "ABCDP3011E",
              "reference_id": 1234567,
              "registered_name": "John Doe",
              "status_code": "VALID",
              "type": "Individual",
              "valid": true
            }
          }
        }
      },
      "GetStatusRpdResponseSchema": {
        "type": "object",
        "description": "Reverse penny drop verification successful",
        "properties": {
          "bank_account": {
            "type": "string",
            "description": "It displays the bank account number of the individual.",
            "example": "26291800001191"
          },
          "ifsc": {
            "type": "string",
            "description": "It displays the IFSC information of the individual's bank account.",
            "example": "YESB0000262"
          },
          "upi": {
            "type": "string",
            "description": "It displays the UPI VPA information of the individual.",
            "example": "success@upi"
          },
          "name_at_bank": {
            "type": "string",
            "description": "It displays the name of the individual registered in the bank records.",
            "example": "JOHN DOE"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID created by you to identify the verifiation request.",
            "example": "32"
          },
          "ref_id": {
            "type": "string",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": "33"
          },
          "utr": {
            "type": "string",
            "description": "It displays the unique transaction reference (UTR) number created by the bank to identify the transaction.",
            "example": "33"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are \n- `CREATED`: The request is created, but no payment has been made yet.\n- `SUCCESS`: A successful transaction returns all fields in the response.\n- `FAILURE`: The payment attempt failed for an unspecified reason.\n- `EXPIRED`: The link in the create request call expires after 10 minutes if no payment is made.",
            "example": "SUCCESS"
          },
          "name_match_score": {
            "type": "string",
            "description": "It displays the score of the name match verification.",
            "example": "10"
          },
          "name_match_result": {
            "type": "string",
            "description": "It displays the result of the name match verification.",
            "example": "POOR_PARTIAL_MATCH"
          },
          "added_on": {
            "type": "string",
            "description": "It displays the date and time of when the request was added.",
            "example": "2023-06-27T12:34:47+05:30"
          },
          "processed_on": {
            "type": "string",
            "description": "It displays the date and time of when the request was processed.",
            "example": "2023-06-27T18:15:02+05:30"
          },
          "penny_collected_on": {
            "type": "string",
            "description": "It displays the date and time of when the 1 rupee was collected.",
            "example": "2022-10-27T12:40:10+05:30"
          },
          "reversal_status": {
            "type": "string",
            "description": "It displays the status of the rupee reversal.\nPossible values are:\n- `TRANSFER_INITIATED`: Reversal is initiated.\n- `TRANSFER_SUCCESS`: The reversal process is successful.\n- `PENDING`: The reversal is pending and not initiated yet.\n- `FAILED`: The reversal is failed.",
            "example": "PENDING"
          },
          "account_type": {
            "type": "string",
            "description": "It displays the type of account.",
            "example": "SAVINGS"
          }
        }
      },
      "GetVerifyPanResponseSchema": {
        "description": "Success response for Verify PAN Sync API",
        "type": "object",
        "properties": {
          "pan": {
            "type": "string",
            "description": "It displays the unique 10-character alphanumeric identifier issued by the Income Tax Department.",
            "example": "ABCPV1234D"
          },
          "type": {
            "type": "string",
            "description": "It displays the type of the PAN issued.",
            "example": "Individual"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "format": "int64",
            "example": 161
          },
          "name_provided": {
            "type": "string",
            "description": "It displays the name entered in the API request.",
            "example": "JOHN DOE"
          },
          "registered_name": {
            "type": "string",
            "description": "It displays the PAN registered name.",
            "example": "JOHN DOE"
          },
          "valid": {
            "type": "boolean",
            "description": "It displays the status of the PAN card.",
            "example": true
          },
          "father_name": {
            "type": "string",
            "description": "It displays the father's name of the PAN card holder.",
            "example": ""
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request.",
            "example": "PAN verified successfully"
          },
          "name_match_score": {
            "type": "string",
            "description": "It displays the score for the name match verification.",
            "example": "100.00"
          },
          "name_match_result": {
            "type": "string",
            "description": "It displays the result of the name match verification. Possible values are:\n- `DIRECT_MATCH`\n- `GOOD_PARTIAL_MATCH`\n- `MODERATE_PARTIAL_MATCH`\n- `POOR_PARTIAL_MATCH`\n- `NO_MATCH`",
            "example": "DIRECT_MATCH"
          },
          "aadhaar_seeding_status": {
            "type": "string",
            "description": "It displays additional information of the linking of aadhaar and PAN card. Possible values are:\n- `Y`: \"Aadhaar is linked to pan\"\n- `R`: \"Aadhaar is not linked to pan\"\n- `NA`: \"Not applicable, in case of business pan\"",
            "example": "Y"
          },
          "last_updated_at": {
            "type": "string",
            "description": "It displays the last updated date.",
            "example": "01/01/2019"
          },
          "name_pan_card": {
            "type": "string",
            "description": "It displays the name displayed on the PAN card.",
            "example": "JOHN DOE"
          },
          "pan_status": {
            "type": "string",
            "description": "It displays the status of the PAN card. Possible values are:\n- `VALID`\n- `INVALID`\n- `DELETED`\n- `DEACTIVATED`",
            "example": "VALID"
          },
          "aadhaar_seeding_status_desc": {
            "type": "string",
            "description": "It displays additional information of the linking of aadhaar and PAN card.",
            "example": "Aadhaar is linked to PAN"
          }
        }
      },
      "GstinRequestSchema": {
        "description": "Find the request parameters to verify GSTIN information",
        "type": "object",
        "example": {
          "GSTIN": "29AAICP2912R1ZR",
          "business_name": "UJJIVAN SMALL FINANCE BANK"
        },
        "required": [
          "GSTIN"
        ],
        "properties": {
          "GSTIN": {
            "description": "It is the unique number assigned to businesses registered under the Goods and Services Tax (GST) system in India.",
            "type": "string",
            "example": "29AAICP2912R1ZR",
            "default": "29AAICP2912R1ZR"
          },
          "business_name": {
            "description": "It is the name of the business to which the GSTIN is issued. The maximum character limit is 200.",
            "type": "string",
            "example": "UJJIVAN SMALL FINANCE BANK",
            "default": "UJJIVAN SMALL FINANCE BANK"
          }
        }
      },
      "GstinResponseSchema": {
        "description": "Response for Verify GSTIN, which includes the GSTIN details, business information, and address details.",
        "type": "object",
        "properties": {
          "reference_id": {
            "format": "int64",
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 12345
          },
          "GSTIN": {
            "type": "string",
            "description": "Unique identification number assigned to businesses registered under the Goods and Services Tax (GST) system in India.",
            "example": "29AAICP2912R1ZR"
          },
          "legal_name_of_business": {
            "type": "string",
            "description": "Legal name of the business registered under the GST system.",
            "example": "UJJIVAN SMALL FINANCE BANK LIMITED"
          },
          "trade_name_of_business": {
            "type": "string",
            "description": "Trade name of the business registered under the GST system.",
            "example": "UJJIVAN SMALL FINANCE BANK"
          },
          "center_jurisdiction": {
            "type": "string",
            "description": "Center jurisdiction under which the business falls.",
            "example": "I-A RANGE"
          },
          "state_jurisdiction": {
            "type": "string",
            "description": "State jurisdiction under which the business falls.",
            "example": "GUWAHATI - A - 1"
          },
          "date_of_registration": {
            "type": "string",
            "description": "Date of GST registration for the business.",
            "example": "2017-09-30"
          },
          "constitution_of_business": {
            "type": "string",
            "description": "Constitution type of the business, such as Private Limited, Proprietorship, etc.",
            "example": "Public Limited Company"
          },
          "taxpayer_type": {
            "type": "string",
            "description": "Taxpayer type, indicating whether the business is a Regular taxpayer, Composition taxpayer, etc.",
            "example": "Regular"
          },
          "gst_in_status": {
            "type": "string",
            "description": "Current status of the GSTIN.",
            "example": "Active"
          },
          "last_update_date": {
            "type": "string",
            "description": "Date when the GST details were last updated.",
            "example": "2022-03-01"
          },
          "nature_of_business_activities": {
            "items": {
              "type": "string",
              "description": "Activity performed by the business, such as Retail Business, Supplier of Services, etc."
            },
            "type": "array",
            "description": "List of activities performed by the business, such as Retail Business, Supplier of Services, etc."
          },
          "principal_place_address": {
            "type": "string",
            "description": "Complete principal place address of the business.",
            "example": "First Floor 3512-DISPUR Prithivi Mansion opp. KFC building G.S. Road, Lachit Nagar Assam 781007"
          },
          "principal_place_split_address": {
            "type": "object",
            "description": "Split components of the principal place address.",
            "properties": {
              "building_name": {
                "type": "string",
                "description": "Name of the building.",
                "example": "Prithivi Mansion"
              },
              "street": {
                "type": "string",
                "description": "Name of the street.",
                "example": "G.S. Road"
              },
              "location": {
                "type": "string",
                "description": "Location or area of the address.",
                "example": "Lachit Nagar"
              },
              "building_number": {
                "type": "string",
                "description": "Number or identifier of the building.",
                "example": "3512-DISPUR"
              },
              "district": {
                "type": "string",
                "description": "District of the address.",
                "example": "Guwahati"
              },
              "state": {
                "type": "string",
                "description": "State of the address.",
                "example": "Assam"
              },
              "city": {
                "type": "string",
                "description": "City of the address.",
                "example": "Dispur"
              },
              "flat_number": {
                "type": "string",
                "description": "Flat or floor number.",
                "example": "First Floor"
              },
              "latitude": {
                "type": "string",
                "description": "Latitude coordinate of the address.",
                "example": "26.1445"
              },
              "longitude": {
                "type": "string",
                "description": "Longitude coordinate of the address.",
                "example": "91.7362"
              },
              "pincode": {
                "type": "string",
                "description": "Pincode or ZIP code of the address.",
                "example": "781007"
              }
            }
          },
          "additional_address_array": {
            "type": "array",
            "description": "List of additional addresses associated with the business.",
            "minItems": 0,
            "items": {
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Complete additional address.",
                  "example": "N.A.C.C.I. Foundation 3559-Tezpur CHAMBER BHAWAN Binjraj Road, P. o. and P.S. - Tezpur, Dist. Binjraj Road, P. o. and P.S. - Tezpur, Dist. Sonitpur Assam 784154"
                },
                "split_address": {
                  "type": "object",
                  "description": "Split components of the additional address.",
                  "properties": {
                    "building_name": {
                      "type": "string",
                      "description": "Name of the building.",
                      "example": "CHAMBER BHAWAN"
                    },
                    "street": {
                      "type": "string",
                      "description": "Name of the street.",
                      "example": "Binjraj Road"
                    },
                    "location": {
                      "type": "string",
                      "description": "Location or area of the address.",
                      "example": "Tezpur"
                    },
                    "building_number": {
                      "type": "string",
                      "description": "Number or identifier of the building.",
                      "example": "3559-Tezpur"
                    },
                    "district": {
                      "type": "string",
                      "description": "District of the address.",
                      "example": "Sonitpur"
                    },
                    "state": {
                      "type": "string",
                      "description": "State of the address.",
                      "example": "Assam"
                    },
                    "city": {
                      "type": "string",
                      "description": "City of the address.",
                      "example": "Tezpur"
                    },
                    "flat_number": {
                      "type": "string",
                      "description": "Flat or floor number.",
                      "example": "First Floor"
                    },
                    "latitude": {
                      "type": "string",
                      "description": "Latitude coordinate of the address.",
                      "example": "26.6338"
                    },
                    "longitude": {
                      "type": "string",
                      "description": "Longitude coordinate of the address.",
                      "example": "92.8006"
                    },
                    "pincode": {
                      "type": "string",
                      "description": "Pincode or ZIP code of the address.",
                      "example": "784154"
                    }
                  }
                }
              }
            }
          },
          "valid": {
            "type": "boolean",
            "description": "Indicates whether the GSTIN is valid."
          },
          "message": {
            "type": "string",
            "description": "The message indicates whether the GSTIN exists."
          }
        }
      },
      "IdentityDetailsMobile360": {
        "type": "object",
        "description": "It displays all the identity number linked for individual",
        "example": {
          "passport_number": [
            {
              "sequence": "1",
              "number": "D1023456"
            }
          ]
        },
        "properties": {
          "sequence": {
            "type": "string",
            "description": "It displays sequence of the list.",
            "example": "1"
          },
          "number": {
            "type": "string",
            "description": "It displays the identity number of the individual.",
            "example": "D1023456"
          }
        }
      },
      "IpVerificationRequestSchema": {
        "description": "Find the request parameters to verify IP address",
        "type": "object",
        "example": {
          "ip_address": "1.0.171.255",
          "verification_id": "testverificationid"
        },
        "required": [
          "ip_address",
          "verification_id"
        ],
        "properties": {
          "ip_address": {
            "type": "string",
            "description": "It is the IP address that you need to verify which is assigned to a device connected to a computer network.",
            "example": "1.0.171.255",
            "default": "1.0.171.255"
          },
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "testverificationid",
            "default": "testverificationid"
          }
        }
      },
      "IpVerificationResponseSchema": {
        "description": "Verify IP success response",
        "type": "object",
        "example": {
          "value": {
            "reference_id": 1358,
            "verification_id": "testverificationid",
            "status": "VALID",
            "ip_address": "1.0.171.255",
            "proxy_type": "VPA",
            "country_code": "TH",
            "country_name": "Thailand",
            "region_name": "Phangna",
            "city_name": "Phang Nga",
            "city_risk_score": "0",
            "proxy_type_risk_score": "0"
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "testverificationid"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the IP address.",
            "example": "VALID"
          },
          "ip_address": {
            "type": "string",
            "description": "It displays the entered IP address.",
            "example": "1.0.171.255"
          },
          "proxy_type": {
            "type": "string",
            "description": "It displays the category or classification of a proxy server based on its functionality and how it handles network requests.",
            "example": "VPA"
          },
          "country_code": {
            "type": "string",
            "description": "It displays the country code associated with the geographical location of the device or network to which the IP address is assigned.",
            "example": "TH"
          },
          "country_name": {
            "type": "string",
            "description": "It displays the name of the country associated with the geographical location of the device or network to which the IP address is assigned.",
            "example": "Thailand"
          },
          "region_name": {
            "type": "string",
            "description": "It displays the name of the region associated with the geographical location of the device or network to which the IP address is assigned.",
            "example": "Phangnga"
          },
          "city_name": {
            "type": "string",
            "description": "It displays the name of the city associated with the geographical location of the device or network to which the IP address is assigned.",
            "example": "Phang Nga"
          },
          "city_risk_score": {
            "type": "string",
            "description": "It displays the risk score associated with a particular city based on factors such as cybersecurity threats, crime rates, or other relevant data.",
            "example": "0"
          },
          "proxy_type_risk_score": {
            "type": "string",
            "description": "It displays the risk score associated with a particular city based on factors such as cybersecurity threats, crime rates, or other relevant data.",
            "example": "0"
          }
        }
      },
      "LivelinessRequestSchema": {
        "description": "Find the request parameters to check the liveliness in an image",
        "type": "object",
        "required": [
          "verification_id",
          "image"
        ],
        "example": {
          "verification_id": "123",
          "image": "IMAGE",
          "strict_check": true
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-) and underscore ( _ ) are allowed.",
            "example": "123",
            "default": "123"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Upload the image of the individual to verify the liveliness of the image.",
            "example": "IMAGE"
          },
          "strict_check": {
            "type": "boolean",
            "description": "It is the boolean value to set the strictness check of the image. Default value for strict_check is false.",
            "example": true
          }
        }
      },
      "Liveliness200ResponseSchema": {
        "description": "Success response for Liveliness Check API",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1357
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the API request.",
            "example": "123456789"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are:\n- `SUCCESS`: A face is detected.\n- `FACE_NOT_DETECTED`: A face is not detected.\n- `MULTIPLE_FACE_DETECTED`: Multiple faces are detected.",
            "example": "SUCCESS"
          },
          "liveliness": {
            "type": "boolean",
            "description": "It displays the result of the liveliness check.",
            "example": true
          },
          "score": {
            "type": "number",
            "description": "It displays the score of the liveliness check. \nRange: `0 < x < 1`",
            "format": "float",
            "example": 0.95
          }
        }
      },
      "Mobile360RequestSchema": {
        "description": "Find the request parameters for Mobile 360",
        "type": "object",
        "example": {
          "verification_id": "test_verification_id",
          "mobile_number": "9988777666",
          "name": "John Doe",
          "type": "lite",
          "consent_desc": "Fetching data of customer XYZ"
        },
        "required": [
          "verification_id",
          "mobile_number",
          "type",
          "consent_desc"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id",
            "default": "test_verification_id"
          },
          "mobile_number": {
            "type": "string",
            "description": "It is the mobile number of individual.",
            "example": "9988777666",
            "default": "9988777666"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the individual.",
            "example": "John Doe",
            "default": "John Doe"
          },
          "type": {
            "type": "string",
            "description": "It is the type of data fetching method. Allowed value - lite.",
            "example": "lite",
            "default": "lite"
          },
          "consent_desc": {
            "type": "string",
            "description": "It is the description that explains fetching the data.",
            "maxLength": 50,
            "minLength": 20,
            "example": "Fetching data of customer XYZ",
            "default": "Fetching data of customer XYZ"
          }
        }
      },
      "Mobile360SendOtpRequestSchema": {
        "type": "object",
        "example": {
          "verification_id": "ABC00122",
          "mobile_number": "9999999999",
          "name": "John Doe",
          "user_consent": {
            "timestamp": "2024-11-29T12:34:56Z",
            "purpose": "User consent to fetch data.",
            "obtained": true,
            "type": "EXPLICIT"
          },
          "notification_modes": [
            "SMS",
            "WHATSAPP"
          ]
        },
        "required": [
          "verification_id",
          "mobile_number",
          "user_consent",
          "notification_modes"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id",
            "default": "test_verification_id"
          },
          "mobile_number": {
            "type": "string",
            "description": "It is the 10 digit mobile number of individual.",
            "example": "9999999999",
            "default": "9999999999"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the individual.",
            "example": "John Doe",
            "default": "John Doe"
          },
          "notification_modes": {
            "type": "array",
            "description": "Modes for sending OTP\nPossible values are  \n- `SMS`\n- `WHATSAPP`",
            "items": {
              "type": "string",
              "example": "SMS"
            }
          },
          "user_consent": {
            "$ref": "#/components/schemas/Mobile360ConsentSchema"
          }
        }
      },
      "Mobile360ConsentSchema": {
        "description": "Consent details for Mobile360 Send OTP",
        "type": "object",
        "required": [
          "timestamp",
          "purpose",
          "obtained",
          "type"
        ],
        "properties": {
          "obtained": {
            "type": "boolean",
            "description": "Indicates whether the user has given consent.",
            "example": true
          },
          "type": {
            "type": "string",
            "description": "It displays the type of user consent provided. \nPossible values are:  \n- `EXPLICIT`: Consent is clearly given by the user to collect and process personal data.\n- `IMPLICIT`: Consent is implied through the user's actions.\n- `OPT-OUT`: Consent is assumed by default, but the user can revoke it later  \n- `BROAD`: Consent is granted for future, undefined purposes.",
            "example": "EXPLICIT"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the consent was provided. The value must be in UTC and must be within 5 minutes before or after the current time.",
            "example": "2024-11-29T12:34:56Z"
          },
          "purpose": {
            "type": "string",
            "description": "The description of the consent. The length must be between 20 and 100 characters. Allowed characters are alphanumeric, period (.), hyphen (-), slash (/), ampersand (&), and underscore (_).",
            "example": "Fetching data of customer XYZ for verification purposes",
            "minLength": 20,
            "maxLength": 100
          },
          "network_details": {
            "type": "object",
            "properties": {
              "ip": {
                "type": "string",
                "description": "IP address of the user. Must be a valid IP.",
                "example": "192.168.1.1"
              },
              "ip_origin": {
                "type": "string",
                "enum": [
                  "HOME",
                  "OFFICE",
                  "OTHERS"
                ],
                "description": "Origin of the IP. Allowed values are HOME, OFFICE, and OTHERS.",
                "example": "HOME"
              },
              "isp": {
                "type": "string",
                "description": "Name of the Internet service provider. The maximum character limit is 100. Allowed characters are alphanumeric, period (.), hyphen (-), slash (/), ampersand (&), and underscore (_).",
                "example": "ISP Provider Name",
                "maxLength": 100
              }
            }
          },
          "device_details": {
            "type": "object",
            "properties": {
              "device_id": {
                "type": "string",
                "description": "It is the unique identifier for the user's device. The maximum character limit is 100. Allowed characters are alphanumeric, period (.), hyphen (-), slash (/), ampersand (&), and underscore (_).",
                "example": "12345-ABCDE",
                "maxLength": 100
              },
              "os_type": {
                "type": "string",
                "description": "The operating system of the user's device. The maximum character limit is 50. Allowed characters are alphanumeric, period (.), hyphen (-), slash (/), ampersand (&), and underscore (_).",
                "example": "WINDOWS",
                "maxLength": 50
              },
              "model": {
                "type": "string",
                "description": "The model of the user's device. The maximum character limit is 100. Allowed characters are alphanumeric, period (.), hyphen (-), slash (/), ampersand (&), and underscore (_).",
                "example": "SAMSUNG GALAXY S21",
                "maxLength": 100
              }
            }
          }
        }
      },
      "Mobile360VerifyOtpRequestSchema": {
        "type": "object",
        "example": {
          "verification_id": "test_verification_id",
          "otp": "123456"
        },
        "required": [
          "verification_id",
          "otp"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "The same unique ID provided during the [Send OTP](https://www.cashfree.com/docs/api-reference/vrs/v2/mobile-360-otp-flow/mobile-360-send-otp-request) request.",
            "example": "test_verification_id",
            "default": "test_verification_id"
          },
          "otp": {
            "type": "string",
            "description": "The OTP sent to the mobile number provided in the [Send OTP](https://www.cashfree.com/docs/api-reference/vrs/v2/mobile-360-otp-flow/mobile-360-send-otp-request) request.",
            "example": "123456",
            "default": "123456"
          }
        }
      },
      "Mobile360ResponseSchema": {
        "description": "Success response",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.",
            "example": "SUCCESS"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "test_verification_id"
          },
          "name": {
            "type": "string",
            "description": "It displays the name of the mobile number holder.",
            "example": "John Doe"
          },
          "vpa": {
            "type": "string",
            "description": "It displays the UPI VPA associated with the entered mobile number. If no primary UPI VPA is associated, this field will be null.",
            "example": "johndoe@oksbi"
          },
          "ifsc": {
            "type": "string",
            "description": "It displays the IFSC information associated with the UPI VPA information.",
            "example": "ICIC0006567"
          },
          "ifsc_details": {
            "type": "object",
            "description": "It displays the details corresponding to IFSC.",
            "properties": {
              "bank": {
                "type": "string",
                "description": "It displays the name of the bank.",
                "example": "Bank Name"
              },
              "neft": {
                "type": "string",
                "description": "It displays the status of NEFT.",
                "example": "Live"
              },
              "imps": {
                "type": "string",
                "description": "It displays the status of IMPS.",
                "example": "Live"
              },
              "rtgs": {
                "type": "string",
                "description": "It displays the status of RTGS.",
                "example": "Live"
              },
              "upi": {
                "type": "string",
                "description": "It displays the status of UPI.",
                "example": "Live"
              },
              "address": {
                "type": "string",
                "description": "It displays the address of the bank's branch.",
                "example": "GROUND FLOOR, 123, ABC CIRCLE, XYZ MAIN ROAD, BANGALORE - 560098"
              },
              "city": {
                "type": "string",
                "description": "It represents the city of the bank operational address.",
                "example": "BANGALORE"
              },
              "state": {
                "type": "string",
                "description": "It represents the state of the city where the bank operates.",
                "example": "KARNATAKA"
              },
              "branch": {
                "type": "string",
                "description": "It displays the name of the branch.",
                "example": "BANGALORE - RAJA RAJESHWARI NAGAR BRANCH"
              },
              "category": {
                "type": "string",
                "description": "It displays the IFSC category.",
                "example": "SUB_MEMBER"
              },
              "swift_code": {
                "type": "string",
                "description": "It represents the code to identify the bank branch that processes international transactions.",
                "example": "ABCDINBBDCL"
              },
              "micr": {
                "type": "integer",
                "description": "It represents the code used to identify banks and branches participating in the Electronic Clearing System (ECS).",
                "example": 560751026
              },
              "nbin": {
                "type": "integer",
                "description": "It represents the national bank identification number (NBIN).",
                "example": 1234
              }
            }
          }
        }
      },
      "Mobile360VerifyOtpResponseSchema": {
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "Unique ID of the verification request.",
            "example": "test_verification_id_123"
          },
          "reference_id": {
            "type": "integer",
            "description": "Unique reference ID for the transaction.",
            "example": 987654
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are  \n- `SUCCESS`: Data has been successfully fetched using the provided mobile number.\n- `DETAILS_NOT_FOUND`: No data for the given mobile number could be retrieved.",
            "example": "SUCCESS"
          },
          "personal_details": {
            "type": "object",
            "description": "Personal information of the individual.",
            "properties": {
              "full_name": {
                "type": "string",
                "description": "Full name of the individual.",
                "example": "JOHN SNOW"
              },
              "gender": {
                "type": "string",
                "description": "Gender of the individual.",
                "example": "MALE"
              },
              "total_income": {
                "type": "string",
                "description": "Total income of the individual.",
                "example": "500000"
              },
              "occupation": {
                "type": "string",
                "description": "Occupation of the individual.",
                "example": "Software Engineer"
              },
              "age": {
                "type": "string",
                "description": "Age of the individual.",
                "example": 30
              },
              "dob": {
                "type": "string",
                "description": "Date of birth of the individual.",
                "example": "1994-05-10"
              },
              "relatives_details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "relation": {
                      "type": "string",
                      "example": "FATHER"
                    },
                    "relative_name": {
                      "type": "string",
                      "example": "Alice Doe"
                    }
                  }
                }
              }
            }
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "MOBILE"
                },
                "phone": {
                  "type": "string",
                  "example": "9999999999"
                },
                "linked_to": {
                  "type": "string",
                  "example": "CREDIT"
                }
              }
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "linked_to": {
                  "type": "string",
                  "example": "PAN"
                }
              }
            }
          },
          "passport_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "passport_number": {
                  "type": "string",
                  "example": "PA123456"
                },
                "linked_to": {
                  "type": "string",
                  "example": "CREDIT"
                }
              }
            }
          },
          "bank_account_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_account": {
                  "type": "string",
                  "example": "123456789012"
                },
                "ifsc": {
                  "type": "string",
                  "example": "HDFC0001234"
                },
                "bank_address": {
                  "type": "string",
                  "example": "MG Road, Bangalore"
                },
                "linked_to": {
                  "type": "string",
                  "example": "UAN"
                }
              }
            }
          },
          "aadhaar_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "masked_aadhaar_number": {
                  "type": "string",
                  "example": "XXXXXXXX8848"
                },
                "linked_to": {
                  "type": "string",
                  "example": "PAN"
                }
              }
            }
          },
          "ration_card_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ration_card_number": {
                  "type": "string",
                  "example": "TN1234567890"
                },
                "linked_to": {
                  "type": "string",
                  "example": "CREDIT"
                }
              }
            }
          },
          "driving_license_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "driving_license_number": {
                  "type": "string",
                  "example": "KA0120198900984"
                },
                "linked_to": {
                  "type": "string",
                  "example": "CREDIT"
                }
              }
            }
          },
          "voter_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "voter_id": {
                  "type": "string",
                  "example": "UAI4574761"
                },
                "linked_to": {
                  "type": "string",
                  "example": "CREDIT"
                }
              }
            }
          },
          "pan_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pan_number": {
                  "type": "string",
                  "example": "ABCDE1234F"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "registered_name": {
                      "type": "string",
                      "example": "JOHN SNOW"
                    },
                    "name_pan_card": {
                      "type": "string",
                      "example": "JOHN SNOW"
                    },
                    "type": {
                      "type": "string",
                      "example": "Individual or Person"
                    },
                    "aadhaar_linked": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "123, 4th Cross, MG Road"
                },
                "type": {
                  "type": "string",
                  "example": "Primary"
                },
                "state": {
                  "type": "string",
                  "example": "Karnataka"
                },
                "pincode": {
                  "type": "string",
                  "example": "560001"
                },
                "city": {
                  "type": "string",
                  "example": "Bangalore"
                },
                "street": {
                  "type": "string",
                  "example": "MG Road"
                },
                "country": {
                  "type": "string",
                  "example": "India"
                },
                "linked_to": {
                  "type": "string",
                  "example": "PAN"
                }
              }
            }
          },
          "employment_details": {
            "type": "object",
            "description": "Employment details of the individual.",
            "properties": {
              "uan": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uan": {
                      "type": "string",
                      "example": "200123456789"
                    },
                    "member_id": {
                      "type": "string",
                      "example": "XYZAB00123450000005678"
                    },
                    "establishment_id": {
                      "type": "string",
                      "example": "XYZAB0012345000"
                    },
                    "exit_date": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "joining_date": {
                      "type": "string",
                      "example": "2018-05-10"
                    },
                    "leave_reason": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    },
                    "establishment_name": {
                      "type": "string",
                      "example": "ABC TECHNOLOGIES PVT LTD"
                    },
                    "uan_linked_aadhaar": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              },
              "recent_employment_details": {
                "type": "object",
                "properties": {
                  "employee_details": {
                    "type": "object",
                    "properties": {
                      "member_id": {
                        "type": "string",
                        "example": "XYZAB00123450000005678"
                      },
                      "exit_date": {
                        "type": "string",
                        "nullable": true,
                        "example": null
                      },
                      "joining_date": {
                        "type": "string",
                        "example": "2018-05-10"
                      },
                      "uan": {
                        "type": "string",
                        "example": "200123456789"
                      },
                      "epfo": {
                        "type": "object",
                        "properties": {
                          "recent": {
                            "type": "boolean",
                            "example": true
                          },
                          "name_unique": {
                            "type": "boolean",
                            "example": true
                          },
                          "pf_filings_details": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      },
                      "employed": {
                        "type": "boolean",
                        "example": true
                      },
                      "employee_name_match": {
                        "type": "boolean",
                        "example": true
                      },
                      "exit_date_marked": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  },
                  "employer_details": {
                    "type": "object",
                    "properties": {
                      "establishment_id": {
                        "type": "string",
                        "example": "XYZAB0012345000"
                      },
                      "establishment_name": {
                        "type": "string",
                        "example": "ABC TECHNOLOGIES PVT LTD"
                      },
                      "setup_date": {
                        "type": "string",
                        "example": "2012-03-15"
                      },
                      "ownership_type": {
                        "type": "string",
                        "example": "Private Limited Company"
                      },
                      "employer_confidence_score": {
                        "type": "number",
                        "format": "float",
                        "example": 85.5
                      },
                      "employer_name_match": {
                        "type": "boolean",
                        "example": true
                      },
                      "pf_filing_details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "total_amount": {
                              "type": "integer",
                              "example": 32145678
                            },
                            "employees_count": {
                              "type": "integer",
                              "example": 5678
                            },
                            "wage_month": {
                              "type": "string",
                              "example": "JAN-25"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Mobile360SendOtpResponseSchema": {
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "Unique ID of the verification request.",
            "example": "ABC00122"
          },
          "mobile_number": {
            "type": "string",
            "description": "Mobile number of the individual.",
            "example": "9999999999"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are \n- `OTP_GENERATED`: The OTP has been successfully generated.",
            "example": "OTP_GENERATED"
          },
          "reference_id": {
            "type": "integer",
            "description": "Reference ID for the transaction.",
            "example": 123454
          },
          "name": {
            "type": "string",
            "description": "Name of the individual.",
            "example": "John Doe"
          },
          "notification_modes": {
            "type": "array",
            "description": "Modes for sending OTP\nPossible values are \n- `SMS`\n- `WHATSAPP`",
            "items": {
              "type": "string",
              "example": "SMS"
            }
          }
        }
      },
      "NameMatchRequestSchema": {
        "description": "Find the request parameters for the Name Match API",
        "type": "object",
        "required": [
          "verification_id",
          "name_1",
          "name_2"
        ],
        "example": {
          "verification_id": "ABC00123",
          "name_1": "JOHN DOE",
          "name_2": "JOHN DOE"
        },
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you need to create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-) and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "ABC00123",
            "default": "ABC00123"
          },
          "name_1": {
            "description": "It is the name you want to verify.",
            "type": "string",
            "example": "JOHN DOE",
            "default": "JOHN DOE"
          },
          "name_2": {
            "description": "It is the name you want to verify with name_1.",
            "type": "string",
            "example": "JOHN DOE",
            "default": "JOHN DOE"
          }
        }
      },
      "NameMatchResponseSchema": {
        "description": "Success response for Name Match API",
        "type": "object",
        "example": {
          "verification_id": "ABC00123",
          "reference_id": 1358,
          "name_1": "John Doe",
          "name_2": "John Snow",
          "status": "SUCCESS",
          "score": 0.85,
          "reason": "The given names are identical"
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "ABC00123"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "name_1": {
            "type": "string",
            "description": "It displays the name you entered for verification.",
            "example": "John Doe"
          },
          "name_2": {
            "type": "string",
            "description": "It displays the name you entered for verificaiton with name_1.",
            "example": "John Snow"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request. Possible values are\n- `SUCCESS`: A successful name match.",
            "example": "SUCCESS"
          },
          "score": {
            "type": "number",
            "description": "It displays the score for name match verification, with values ranging from 0 to 1.",
            "example": 0.85
          },
          "reason": {
            "type": "string",
            "description": "It justifies the match score for the API request.",
            "example": "The given names are identical"
          }
        }
      },
      "OfflineAadhaarSendOtpRequestSchema": {
        "description": "Find the request parameters to generate an OTP for aadhaar verification",
        "type": "object",
        "required": [
          "aadhaar_number"
        ],
        "example": {
          "aadhaar_number": "655675523712"
        },
        "properties": {
          "aadhaar_number": {
            "description": "It is the unique 12-digit identification number issued by the Unique Identification Authority of India (UIDAI).",
            "type": "string",
            "example": "655675523712",
            "default": "655675523712"
          }
        }
      },
      "OfflineAadhaarSendOtpResponseSchema": {
        "description": "Success response for Generate OTP to Verify Aadhaar API",
        "type": "object",
        "example": {
          "ref_id": "12345",
          "status": "SUCCESS",
          "message": "OTP send successfully."
        },
        "properties": {
          "ref_id": {
            "type": "string",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": "12345"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request. Possible values are:\n- `SUCCESS`: OTP generated successfully / Aadhaar not linked to mobile number.\n- `INVALID`: Aadhaar card invalid.",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request.",
            "example": "OTP send successfully."
          }
        }
      },
      "OfflineAadhaarVerifyOtpRequestSchema": {
        "description": "Find the request parameters to submit the OTP for aadhaar verification",
        "type": "object",
        "example": {
          "otp": "267987",
          "ref_id": "21637861"
        },
        "required": [
          "otp",
          "ref_id"
        ],
        "properties": {
          "otp": {
            "description": "It is the OTP received on the registered phone number for offline aadhaar verification.",
            "type": "string",
            "example": "267987",
            "default": "267987"
          },
          "ref_id": {
            "description": "It is the unique ID created by Cashfree Payments that you receive in the response of Generate OTP to Verify Aadhaar API.",
            "type": "string",
            "example": "21637861",
            "default": "21637861"
          }
        }
      },
      "OfflineAadhaarVerifyOtpResponseSchema": {
        "description": "Success response for Submit OTP for Aadhaar Verification",
        "type": "object",
        "properties": {
          "ref_id": {
            "type": "string",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": "123456789"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the aadhaar information. Possible values are:\n- `VALID`: Successfully fetched Aadhaar details.",
            "example": "VALID"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request.",
            "example": "123456789"
          },
          "care_of": {
            "type": "string",
            "description": "It displays the parent/guardian of the aadhaar card holder.",
            "example": "Jane Doe"
          },
          "address": {
            "type": "string",
            "description": "It displays the address information as present in the aadhaar card.",
            "example": "Chimli"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the aadhaar card holder.",
            "example": "01-01-2000."
          },
          "email": {
            "type": "string",
            "description": "It displays the email hash of the aadhaar card holder.",
            "example": "v5c64757c746ytvfb687iyjg"
          },
          "gender": {
            "type": "string",
            "description": "It displays the gender of the aadhaar card holder.",
            "example": "Male"
          },
          "name": {
            "type": "string",
            "description": "It displays the name of the aadhaar card holder.",
            "example": "John Doe"
          },
          "year_of_birth": {
            "type": "string",
            "description": "It displays the year of birth of the aadhaar card holder.",
            "example": "2000"
          },
          "mobile_hash": {
            "type": "string",
            "description": "It displays the unique information about the device's hardware, software, and other characteristics.",
            "example": "v5c64757c746ytvfb687iyjg"
          },
          "photo_link": {
            "type": "string",
            "description": "It displays the URL to the image present in the aadhaar card.",
            "example": "IMAGE_LINK"
          },
          "share_code": {
            "type": "string",
            "description": "It is the passcode with which we can unzip the xml file",
            "example": 1234
          },
          "xml_file": {
            "type": "string",
            "description": "It is the link which points to the zip file and contains the xml file and has 24 hrs expiry",
            "example": "https://abc.xyz"
          },
          "split_address": {
            "type": "object",
            "description": "It contains the address information in individual components.",
            "properties": {
              "country": {
                "type": "string",
                "description": "It displays the name of the country as present in the aadhaar card.",
                "example": "India"
              },
              "dist": {
                "type": "string",
                "description": "It displays the name of the district as present in the aadhaar card.",
                "example": "Indore"
              },
              "house": {
                "type": "string",
                "description": "It displays the house name/number as present in the aadhaar card.",
                "example": "1234"
              },
              "landmark": {
                "type": "string",
                "description": "It displays the name of the landmark as present in the aadhaar card.",
                "example": "Near ABC Hospital."
              },
              "pincode": {
                "type": "string",
                "description": "It displays the PIN code information as present in the aadhaar card.",
                "example": "453551"
              },
              "po": {
                "type": "string",
                "description": "It displays the post office nearest to the address present.",
                "example": "Badodiya Khan."
              },
              "state": {
                "type": "string",
                "description": "It displays the name of the state as present in the aadhaar card.",
                "example": "Madhya Pradesh"
              },
              "street": {
                "type": "string",
                "description": "It displays the name of the street as present in the aadhaar card.",
                "example": "ABC street"
              },
              "subdist": {
                "type": "string",
                "description": "It displays the name of the sub district as present in the aadhaar card.",
                "example": "Sanwer"
              },
              "vtc": {
                "type": "string",
                "description": "It displays the village, town, city information as present in the aadhaar card.",
                "example": "Ajnod"
              },
              "locality": {
                "type": "string",
                "description": "It displays the locality as present in the aadhaar card.",
                "example": "Pritam Pura"
              }
            }
          }
        }
      },
      "PanAdvanceRequestSchema": {
        "description": "Find the request parameters to verify PAN information",
        "type": "object",
        "example": {
          "pan": "AZJPG7110R",
          "verification_id": "testverificationid",
          "name": "JOHN SNOW"
        },
        "required": [
          "pan",
          "verification_id"
        ],
        "properties": {
          "pan": {
            "type": "string",
            "description": "It is the unique 10-character alphanumeric identifier of the individual issued by the Income Tax Department. The first 5 should be alphabets followed by 4 numbers and the 10th character should again be an alphabet.",
            "example": "AZJPG7110R",
            "default": "AZJPG7110R"
          },
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "testverificationid",
            "default": "testverificationid"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the PAN information holder.",
            "example": "JOHN SNOW",
            "default": "JOHN SNOW"
          }
        }
      },
      "PanAdvanceResponseSchema": {
        "description": "Success response for PAN Advance",
        "type": "object",
        "example": {
          "value": {
            "status": "VALID",
            "message": "PAN verified successfully",
            "reference_id": 21637861,
            "verification_id": "testverificationId",
            "name_provided": "JOHN SNOW",
            "pan": "LMNCD8010T",
            "registered_name": "JOHN SNOW",
            "name_pan_card": "JOHN SNOW",
            "first_name": "JOHN",
            "last_name": "SNOW",
            "type": "Individual or Person",
            "gender": "Male",
            "date_of_birth": "27-10-2004",
            "masked_aadhaar_number": "XXXXXXXX8848",
            "email": "abc@gmail.com",
            "mobile_number": "99999999999",
            "aadhaar_linked": true,
            "address": {
              "full_address": "Quarter - A, Block - B Sample Area, ABC Street 700011 KOLKATA WEST BENGAL INDIA",
              "street": "ABC Street",
              "city": "KOLKATA",
              "state": "WEST BENGAL",
              "pincode": 700011,
              "country": "India"
            }
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "testverificationid"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are \n- `VALID`: The provided PAN is valid.\n- `INVALID`: The provided PAN is invalid.",
            "example": "VALID"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request.",
            "example": "PAN verified successfully"
          },
          "pan": {
            "type": "string",
            "description": "It displays the PAN information entered in the API request.",
            "example": "AZJPG7110R"
          },
          "name_provided": {
            "type": "string",
            "description": "It displays the name entered in the API request.",
            "example": "JOHN SNOW"
          },
          "registered_name": {
            "type": "string",
            "description": "It displays the registererd name as present in the PAN information.",
            "example": "JOHN SNOW"
          },
          "name_pan_card": {
            "type": "string",
            "description": "It displays the name as present in the PAN information.",
            "example": "JOHN SNOW"
          },
          "first_name": {
            "type": "string",
            "description": "It displays the first name as present in the PAN information.",
            "example": "JOHN"
          },
          "last_name": {
            "type": "string",
            "description": "It displays the last name as present in the PAN information.",
            "example": "SNOW"
          },
          "type": {
            "type": "string",
            "description": "It displays the type of the PAN issued.",
            "example": "Individual or Person"
          },
          "gender": {
            "type": "string",
            "description": "It displays the gender of the individual as present in the PAN information.",
            "example": "Male"
          },
          "date_of_birth": {
            "type": "string",
            "description": "It displays the date of birth of the individual.",
            "example": "01/02/1990"
          },
          "masked_aadhaar_number": {
            "type": "string",
            "description": "It displays the masked aadhaar number of the individual.",
            "example": "XXXXXXXX8848"
          },
          "email": {
            "type": "string",
            "description": "It displays the email ID of the individual.",
            "example": "abc@gmail.com"
          },
          "mobile_number": {
            "type": "string",
            "description": "It displays the mobile number of the individual.",
            "example": "9999999999"
          },
          "aadhaar_linked": {
            "type": "boolean",
            "description": "It displays the aadhaar and PAN link status.",
            "example": true
          },
          "address": {
            "type": "object",
            "description": "It displays the address information of the individual.",
            "properties": {
              "full_address": {
                "type": "string",
                "description": "It displays the complete address of the individual.",
                "example": "Quarter - A, Block - B Sample Area, ABC Street 700011 KOLKATA WEST BENGAL INDIA"
              },
              "street": {
                "type": "string",
                "description": "It displays the street name from the individual's address.",
                "example": "ABC Street"
              },
              "city": {
                "type": "string",
                "description": "It displays the city name from the individual's address.",
                "example": "KOLKATA"
              },
              "state": {
                "type": "string",
                "description": "It displays the state name from the individual's address.",
                "example": "WEST BENGAL"
              },
              "pincode": {
                "type": "integer",
                "description": "It displays the PIN code from the individual's address.",
                "example": 700011
              },
              "country": {
                "type": "string",
                "description": "It displays the country name from the individual's address.",
                "example": "India"
              }
            },
            "example": {
              "full_address": "Quarter - A, Block - B Sample Area, ABC Street 700011 KOLKATA WEST BENGAL INDIA",
              "street": "ABC Street",
              "city": "KOLKATA",
              "state": "WEST BENGAL",
              "pincode": 700011,
              "country": "India"
            }
          }
        }
      },
      "PanLiteRequestSchema": {
        "description": "Find the request parameters for PAN Lite",
        "type": "object",
        "required": [
          "verification_id",
          "pan",
          "name",
          "dob"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the API request. The maximum character limit is 50. Only alphanumeric, hyphen (-), period (.), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "test001",
            "default": "test001"
          },
          "pan": {
            "description": "It is the unique 10-character alphanumeric identifier of the individual issued by the Income Tax Department. The first 5 should be alphabets followed by 4 numbers and the 10th character should again be an alphabet.",
            "type": "string",
            "example": "ABCTY1234D",
            "default": "ABCTY1234D"
          },
          "name": {
            "description": "It is the name of the individual as per the PAN information",
            "type": "string",
            "example": "John Doe",
            "default": "John Doe"
          },
          "dob": {
            "description": "It is the date of birth of the individual as per the PAN information. The format is YYYY-MM-DD",
            "type": "string",
            "example": "1993-06-30",
            "default": "1993-06-30"
          }
        }
      },
      "PanLiteResponseSchema": {
        "description": "Success response for verifying PAN information",
        "type": "object",
        "properties": {
          "reference_id": {
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "type": "integer",
            "example": 21637861
          },
          "verification_id": {
            "description": "It is the unique ID you create to identify the API request. The maximum character limit is 50. Only alphanumeric, hyphen (-), period (.), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "test001"
          },
          "pan": {
            "description": "It is the unique 10-character alphanumeric identifier of the individual issued by the Income Tax Department. The first 5 should be alphabets followed by 4 numbers and the 10th character should again be an alphabet.",
            "type": "string",
            "example": "ABCTY1234D"
          },
          "name": {
            "description": "It is the name of the individual as per the PAN information",
            "type": "string",
            "example": "John Doe"
          },
          "dob": {
            "description": "It is the date of birth of the individual as per the PAN information. The format is YYYY-MM-DD",
            "type": "string",
            "example": "1993-06-30"
          },
          "name_match": {
            "description": "It displays the result of name match verification.\nThe possible values are:\n\n - `Y` : The name entered matches with the name present on the PAN.\n\n - `N` : The name entered does matches with the name present on the PAN.",
            "type": "string",
            "example": "Y"
          },
          "dob_match": {
            "description": "It displays the result of the date of birth verification. \nThe possible values are:\n\n - `Y` : The date of birth of the individual matches with the date of birth present on PAN.\n\n - `N` : The date of birth of the individual does not matches with the date of birth present on PAN.",
            "type": "string",
            "example": "Y"
          },
          "pan_status": {
            "description": "It displays the status of the PAN information.\nThe possible values are:\n\n - `E` : The entered PAN information is valid.\n\n - `EC`: The entered PAN information exists and is valid but marked as Acquisition.\n\n - `N` : The entered PAN information does not exist in the database.\n\n - `X` : The entered PAN information has been deactivated.\n\n - `F` : The entered PAN information is fake.\n\n - `D` : The entered PAN information has been deleted.\n\n - `EA` : The entered PAN information is valid but marked as Amalgamation.\n\n - `ED` : The entered PAN information is valid but marked as Death.\n\n - `EI` : The entered PAN information is valid but marked as Dissolution.\n\n - `EL` : The entered PAN information is valid but marked as Liquidated.\n\n - `EM` : The entered PAN information is valid but marked as Merger.\n\n - `EP` : The entered PAN information is valid but marked as Partition.\n\n - `ES` : The entered PAN information is valid but marked as Split.\n\n - `EU` : The entered PAN information is valid but marked as Under Liquidation.",
            "type": "string",
            "example": "E"
          },
          "status": {
            "description": "It displays status of PAN. \nThe Possible Values are:\n- `VALID`\n- `INVALID`",
            "type": "string",
            "example": "VALID"
          },
          "aadhaar_seeding_status": {
            "description": "It displays whether the individual linked the aadhaar information with PAN. \nThe possible values are:\n- `Y`: Aadhaar is linked to PAN\n- `R`: Aadhaar is not linked to PAN\n- `NA`: Not applicable, in case of business PAN",
            "type": "string",
            "example": "Y"
          },
          "aadhaar_seeding_status_desc": {
            "description": "It displays additional information of the linking of aadhaar and PAN card.",
            "type": "string",
            "example": "Aadhaar is linked to PAN"
          }
        }
      },
      "PanOcrRequestSchema": {
        "description": "Find the request parameters to verify PAN via OCR",
        "type": "object",
        "example": {
          "verification_id": "12345678",
          "front_image": "FRONT_IMAGE"
        },
        "required": [
          "front_image",
          "verification_id"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "12345678",
            "default": "12345678"
          },
          "front_image": {
            "description": "It is the scanned copy of the PAN card. Allowed file type - JPEG/JPG/PNG.",
            "type": "string",
            "format": "binary",
            "example": "FRONT_IMAGE"
          }
        }
      },
      "PanOcrResponseSchema": {
        "description": "PAN Verification via OCR success response",
        "type": "object",
        "example": {
          "value": {
            "name": "JOHN DOE",
            "dob": "03/06/1993",
            "father": "JOSH DOE",
            "pan_type": "Individual",
            "pan": "AUHPJ0671P",
            "valid": true,
            "age": "29",
            "status": "VALID",
            "reference_id": "106",
            "verification_id": "76",
            "message": "PAN card is valid"
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "It displays the name of the PAN holder.",
            "example": "John Doe"
          },
          "organization_name": {
            "type": "string",
            "description": "It displays the name of the organisation the individual runs.",
            "example": "ABC pvt ltd."
          },
          "pan_type": {
            "type": "string",
            "description": "It displays the type of PAN issued to the individual.",
            "example": "Business"
          },
          "date_of_incorporation": {
            "type": "string",
            "description": "It displays the incorporation date of the individual's organisation.",
            "example": "01-01-2000"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the individual.",
            "example": "01-01-1990"
          },
          "father": {
            "type": "string",
            "description": "It displays the father's name of the individual.",
            "example": "Jone Doe"
          },
          "pan": {
            "type": "string",
            "description": "It displays the entered PAN information in the request.",
            "example": "ABCPP3011E"
          },
          "valid": {
            "type": "boolean",
            "description": "It displays whethere the entered PAN information is valid.",
            "example": true
          },
          "age": {
            "type": "string",
            "description": "It displays the age of the individual.",
            "example": "20"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the PAN information.",
            "example": "Valid"
          },
          "reference_id": {
            "type": "string",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": "123456789"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the request.",
            "example": "1676668986"
          },
          "confidence_score": {
            "type": "string",
            "description": "It displays the level of confidence or reliability associated with the PAN verification.",
            "example": "0.98"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request.",
            "example": "Valid PAN"
          }
        }
      },
      "PanRequestSchema": {
        "description": "Find the request parameters to verify PAN",
        "type": "object",
        "example": {
          "pan": "ABCPV1234D",
          "name": "Gurav"
        },
        "required": [
          "pan"
        ],
        "properties": {
          "pan": {
            "description": "It is the unique 10-character alphanumeric identifier of the individual issued by the Income Tax Department. The first 5 should be alphabets followed by 4 numbers and the 10th character should again be an alphabet.",
            "type": "string",
            "example": "ABCPV1234D",
            "default": "ABCPV1234D"
          },
          "name": {
            "description": "It is the name of the individual.",
            "type": "string",
            "example": "Gurav",
            "default": "Gurav"
          }
        }
      },
      "PanToGstinRequestSchema": {
        "description": "Find the request parameters to fetch the list of GSTIN associated with PAN",
        "type": "object",
        "example": {
          "pan": "AZJPG7110R",
          "verification_id": "testverificationid"
        },
        "required": [
          "pan",
          "verification_id"
        ],
        "properties": {
          "pan": {
            "type": "string",
            "description": "It is the unique 10-character alphanumeric identifier issued by the Income Tax Department.",
            "example": "AZJPG7110R",
            "default": "AZJPG7110R"
          },
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the request. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "testverificationid",
            "default": "testverificationid"
          }
        }
      },
      "PanToGstinResponseSchema": {
        "description": "Success response for Fetch GSTIN with PAN",
        "type": "object",
        "example": {
          "value": {
            "reference_id": 1358,
            "verification_id": "testverificationid",
            "status": "SUCCESS",
            "pan": "AZJPG7110R",
            "gstin_list": [
              {
                "gstin": "29AAFCD5862R1ZR",
                "status": "ACTIVE",
                "state": "KARNATAKA"
              },
              {
                "gstin": "27AAFCD5862R1ZV",
                "status": "ACTIVE",
                "state": "MAHARASHTRA"
              }
            ]
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you create to identity the verification request.",
            "example": "testverificationid"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are \n- `SUCCESS`:  GSTINs associated with the provided PAN were retrieved successfully.\n- `GSTIN_NOT_FOUND`: No GSTIN is associated with the provided PAN.",
            "example": "SUCCESS"
          },
          "pan": {
            "type": "string",
            "description": "It displays the entered PAN information in the request.",
            "example": "AZJPG7110R"
          },
          "gstin_list": {
            "type": "array",
            "description": "It displays the list of GSTIN associated with the entered PAN.",
            "items": {
              "type": "object",
              "properties": {
                "gstin": {
                  "type": "string",
                  "description": "It displays the GSTIN information.",
                  "example": "29AAFCD5862R1ZR"
                },
                "status": {
                  "type": "string",
                  "description": "It displays the status of the GSTIN associated with the entered PAN.",
                  "example": "ACTIVE"
                },
                "state": {
                  "type": "string",
                  "description": "It displays the name of the state.",
                  "example": "KARNATAKA"
                }
              }
            }
          }
        }
      },
      "PassportVerificationRequestSchema": {
        "description": "Find the request parameters to verify passport information",
        "type": "object",
        "example": {
          "verification_id": "ABC00123",
          "name": "John Doe",
          "file_number": "PA1079341954215",
          "dob": "2007-03-01"
        },
        "required": [
          "verification_id",
          "file_number",
          "dob"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "ABC00123",
            "default": "ABC00123"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the passport holder.",
            "example": "John Doe"
          },
          "file_number": {
            "type": "string",
            "description": "It is the unique alphanumeric code that identifies an individual's passport application.",
            "example": "PA1079341954215",
            "default": "PA1079341954215"
          },
          "dob": {
            "type": "string",
            "description": "It is the date of birth of the passport holder. The format is YYYY-MM-DD.",
            "example": "2007-03-01",
            "default": "2007-03-01"
          }
        }
      },
      "PassportVerificationResponseSchema": {
        "description": "Success response for Verify Passport",
        "type": "object",
        "example": {
          "value": {
            "verification_id": "ABC00123",
            "reference_id": 1358,
            "status": "VALID",
            "file_number": "PA1079341954215",
            "name": "John doe",
            "dob": "1998-12-31",
            "application_type": "NORMAL",
            "application_received_date": "2003-12-31"
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "ABC00123"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the passport.",
            "example": "VALID"
          },
          "file_number": {
            "type": "string",
            "description": "It displays the unique alphanumeric code that identifies an individual's passport application.",
            "example": "XX0000000000000"
          },
          "name": {
            "type": "string",
            "description": "It displays the name of the passport holder.",
            "example": "John Doe"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the passport holder.",
            "example": "YYYY-MM-DD"
          },
          "application_type": {
            "type": "string",
            "description": "It displays the type of passport application.",
            "example": "NORMAL"
          },
          "application_received_date": {
            "type": "string",
            "description": "It displays when the passport application was received.",
            "example": "YYYY-MM-DD"
          }
        }
      },
      "PhoneDetailsMobile360": {
        "type": "object",
        "description": "It displays all the list of phone number details linked for individual",
        "example": {
          "phone_list": [
            {
              "sequence": "1",
              "type": "MOBILE",
              "number": "999999999"
            },
            {
              "sequence": "2",
              "type": "WORK_FAX",
              "number": "9999999998"
            }
          ]
        },
        "properties": {
          "sequence": {
            "type": "string",
            "description": "It displays sequence of the list.",
            "example": "1"
          },
          "type": {
            "type": "string",
            "description": "It displays the type of the phone number.",
            "example": "MOBILE"
          },
          "number": {
            "type": "string",
            "description": "It displays the linked phone number of the individual.",
            "example": "999999999"
          }
        }
      },
      "PostPanBulkResponseSchema": {
        "description": "Success response for verifying a large number of PAN information",
        "type": "object",
        "properties": {
          "reference_id": {
            "format": "int64",
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 612
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request.",
            "example": "Request accepted. You can check the status after some time."
          }
        }
      },
      "ReverseGeocodingRequestSchema": {
        "description": "Find the request parameters to convert geographic cooridnates into readable location",
        "type": "object",
        "example": {
          "verification_id": "test001",
          "latitude": "12.9274477",
          "longitude": "77.6326542"
        },
        "required": [
          "verification_id",
          "latitude",
          "longitude"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "test001",
            "default": "test001"
          },
          "latitude": {
            "description": "It is the angular distance expressed in degrees of arc north or south of the equator to specify the location.",
            "type": "string",
            "example": "12.9274477",
            "default": "12.9274477"
          },
          "longitude": {
            "description": "It is the angular distance expressed in degrees of arc east or west of the equator to specify the location.",
            "type": "string",
            "example": "77.6326542",
            "default": "77.6326542"
          }
        }
      },
      "ReverseGeocodingResponseSchema": {
        "description": "Reverse Geocoding success response",
        "type": "object",
        "example": {
          "value": {
            "verification_id": "test001",
            "reference_id": 21637861,
            "latitude": "12.9274477",
            "longitude": "77.6326542",
            "address": "JSS Institutions Campus, First Floor, CA Site No.1, HAL 3rd Stage, HAL 3rd Stage, KodihalliBehind Hotel Leela Palace, HAL 2nd Stage, Kodihalli, Bengaluru, Karnataka 560008, India",
            "city": "bangalore",
            "state": "Karnataka",
            "statecode": "KA",
            "countrycode": "In",
            "pincode": "560008",
            "score": 1,
            "status": "VALID"
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 21637861
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "test001"
          },
          "latitude": {
            "type": "string",
            "description": "It displays the entered angular distance expressed in degrees of arc north or south of the equator to specify the location.",
            "example": "12.9274477"
          },
          "longitude": {
            "type": "string",
            "description": "It displays the entered angular distance expressed in degrees of arc east or west of the equator to specify the location.",
            "example": "77.6326542"
          },
          "address": {
            "type": "string",
            "description": "It displays the physical address of the entered coordinates.",
            "example": "JSS Institutions Campus, First Floor, CA Site No.1, HAL 3rd Stage, HAL 3rd Stage, KodihalliBehind Hotel Leela Palace, HAL 2nd Stage, Kodihalli, Bengaluru, Karnataka 560008, India"
          },
          "city": {
            "type": "string",
            "description": "It displays the name of the city of the entered coordinates.",
            "example": "bangalore"
          },
          "state": {
            "type": "string",
            "description": "It displays the name of the state of the entered coordinates.",
            "example": "Karnataka"
          },
          "statecode": {
            "type": "string",
            "description": "It displays the state's code of the entered coordinates.",
            "example": "KA"
          },
          "countrycode": {
            "type": "string",
            "description": "It displays the country's code of the entered coordinates.",
            "example": "In"
          },
          "pincode": {
            "type": "string",
            "description": "It displays the PIN code information of the entered coordinates.",
            "example": "560008"
          },
          "score": {
            "type": "number",
            "description": "It displays the confidence score. Value ranges from 0 to 1",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the entered coordinates.\nPossible values are:\n- `VALID`",
            "example": "VALID"
          }
        }
      },
      "SplitAddress": {
        "type": "object",
        "description": "It containts the address information in individual components.",
        "example": {
          "value": {
            "district": [
              "BANGALORE"
            ],
            "state": [
              "KARNATAKA",
              "KA"
            ],
            "city": [
              "BELLANDUR"
            ],
            "pincode": "560103",
            "country": [
              "IN",
              "IND",
              "INDIA"
            ],
            "address_line": "FLAT 901 A BLOCK GOYAL ORCHID,LAKE VIEW APTS KARIAGRAHARA"
          }
        },
        "properties": {
          "district": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "BANGALORE"
            }
          },
          "state": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "example": [
                  "KARNATAKA",
                  "KA"
                ]
              }
            }
          },
          "city": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "BELLANDUR"
            }
          },
          "pincode": {
            "type": "string",
            "example": "560103"
          },
          "country": {
            "type": "array",
            "items": {
              "type": "string",
              "example": [
                "IN",
                "IND",
                "INDIA"
              ]
            }
          },
          "address_line": {
            "type": "string",
            "example": "FLAT 901 A BLOCK GOYAL ORCHID,LAKE VIEW APTS KARIAGRAHARA"
          }
        }
      },
      "SplitAddressSchema": {
        "description": "It contains the address information of the individual as present in the voter ID card.",
        "type": "object",
        "example": {
          "value": {
            "district": [
              "RAICHUR"
            ],
            "state": [
              "Karnataka"
            ],
            "city": [
              "Manvi"
            ],
            "pincode": "560034",
            "country": [
              "IN",
              "IND",
              "INDIA"
            ],
            "address_line": "GOVT JUNIOR COLLEGE SIRWAR"
          }
        },
        "properties": {
          "district": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "It displays the name of the district as present in the address information of the voter ID card.",
            "example": [
              "RAICHUR"
            ]
          },
          "state": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "It displays the name of the state as present in the address information of the voter ID card.",
            "example": [
              [
                "Karnataka"
              ]
            ]
          },
          "city": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "It displays the name of the city as present in the voter ID card.",
            "example": [
              "Manvi"
            ]
          },
          "pincode": {
            "type": "string",
            "description": "It displays the PIN code information as present in the voter ID card.",
            "example": "560034"
          },
          "country": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "It displays the name of the country as present in the voter ID card.",
            "example": [
              "IN",
              "IND",
              "INDIA"
            ]
          },
          "address_line": {
            "type": "string",
            "description": "It displays the address information as present in the voter ID card.",
            "example": "GOVT JUNIOR COLLEGE SIRWAR"
          }
        }
      },
      "UPIv2RequestSchema": {
        "description": "Request Body Schema for UPI V2.",
        "type": "object",
        "required": [
          "verification_id",
          "vpa"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id"
          },
          "name": {
            "description": "It is the name of the account holder.",
            "type": "string",
            "example": "John Doe"
          },
          "vpa": {
            "description": "It is the valid UPI VPA information. Only alphanumeric, period (.), hyphen (-), underscore ( _ ), and at the rate of (@) are accepted.",
            "type": "string",
            "example": "success@upi"
          }
        }
      },
      "UPIv2ResponseSchema": {
        "description": "UPI V2 Response Body Schema",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 123
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the UPI VPA information.",
            "example": "VALID"
          },
          "name_at_bank": {
            "type": "string",
            "description": "It displays the name of the account holder as per the bank records.",
            "example": "JOHN DOE"
          },
          "vpa": {
            "description": "It is the valid UPI VPA information. Only alphanumeric, period (.), hyphen (-), underscore ( _ ), and at the rate of (@) are accepted.",
            "type": "string",
            "example": "success@upi"
          }
        }
      },
      "InitiateOauthResponseSchema": {
        "description": "Initiate Oauth Response Body Schema",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "test_verification_id"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 123
          },
          "expiry": {
            "type": "string",
            "description": "The expiration date and time of the session, in UTC format. Format `YYYY-MM-DDTHH:mm:ssZ`",
            "example": "2024-12-31T23:59:59Z"
          },
          "session_id": {
            "type": "string",
            "description": "A unique identifier for the session associated with the request.",
            "example": "session_id_value"
          },
          "user": {
            "type": "object",
            "description": "It displays the list of user identifiers provided in the request.",
            "required": [
              "identifier_type",
              "identifier_value"
            ],
            "properties": {
              "identifier_type": {
                "type": "string",
                "enum": [
                  "MOBILE"
                ],
                "description": "The type of identifier used to recognize a user.\nPossible values are\n- `MOBILE`: Mobile number of the user."
              },
              "identifier_value": {
                "type": "string",
                "description": "The 10-digit mobile number of the user. No prefixes or country codes are required.",
                "example": "9988776655"
              }
            }
          }
        }
      },
      "AccessTokenGenerationResponseSchema": {
        "description": "AccessnToken Generation Response Body Schema",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request in initiate OAuth request.",
            "example": "test_verification_id"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 123
          },
          "expiry": {
            "type": "string",
            "description": "The expiration date and time for the access token, in UTC format. Format - `YYYY-MM-DDTHH:mm:ssZ`.",
            "example": "2024-12-31T23:59:59Z"
          },
          "access_token": {
            "type": "string",
            "description": "It displays the the access token value. Use this access token to get the user details in fetch user details API.",
            "example": "access_token_value"
          }
        }
      },
      "FetchDetailsResponseSchema": {
        "description": "Fetch Details Response Body Schema",
        "type": "object",
        "properties": {
          "reference_id": {
            "type": "string",
            "description": "A unique ID created by Cashfree Payments for reference purposes.",
            "example": "ref123"
          },
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request.",
            "example": "verif123"
          },
          "scopes": {
            "type": "array",
            "description": "A list of scopes associated with the verification, each representing a specific type of user data that can be accessed.",
            "items": {
              "$ref": "#/components/schemas/Scope"
            }
          }
        }
      },
      "IFSCv2RequestSchema": {
        "description": "Find the request parameters for IFSC Verification V2",
        "type": "object",
        "required": [
          "verification_id",
          "ifsc"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id",
            "default": "test_verification_id"
          },
          "ifsc": {
            "description": "It is the IFSC information of the bank account to be validated. It should be an alphanumeric value of 11 characters. The first 4 characters should be alphabets, the 5th character should be a 0, and the remaining 6 characters should be numerals.",
            "type": "string",
            "example": "HDFC0000001",
            "default": "HDFC0000001"
          }
        }
      },
      "InitiateOauthRequestSchema": {
        "type": "object",
        "required": [
          "user",
          "verification_id"
        ],
        "properties": {
          "user": {
            "type": "object",
            "description": "It displays the list of user identifiers.",
            "required": [
              "identifier_type",
              "identifier_value"
            ],
            "properties": {
              "identifier_type": {
                "type": "string",
                "enum": [
                  "MOBILE"
                ],
                "description": "The type of identifier used to recognize a user.\nPossible values are\n- `MOBILE`: Mobile number of the user."
              },
              "identifier_value": {
                "type": "string",
                "description": "The 10-digit mobile number of the user. No prefixes or country codes are required.",
                "example": "9988776655",
                "default": "9988776655"
              }
            }
          },
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the user session. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id"
          }
        }
      },
      "AccessTokenGenerationRequestSchema": {
        "type": "object",
        "required": [
          "auth_code"
        ],
        "properties": {
          "auth_code": {
            "type": "string",
            "example": "auth_code_value",
            "description": "This is the authcode for generating the access token. The SDK sends the callback using the redirect URL provided in the [Merchant Dashboard](https://merchant.cashfree.com/verificationsuite/secure-share) while creating the app. The authcode will be included in the callback sent to the redirect URL."
          }
        }
      },
      "IFSCv2ResponseSchema": {
        "description": "IFSC Verification V2 success response",
        "type": "object",
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification ID.",
            "example": "test_verification_id"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 123
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the IFSC information. Possible values are: - `VALID`: IFSC provided is valid.",
            "example": "VALID"
          },
          "bank": {
            "type": "string",
            "description": "It displays the name of the bank.",
            "example": "Bank Name"
          },
          "ifsc": {
            "type": "string",
            "description": "It displays the IFSC information.",
            "example": "HDFC0000001"
          },
          "neft": {
            "type": "string",
            "description": "It displays the status of NEFT.",
            "example": "Live"
          },
          "imps": {
            "type": "string",
            "description": "It displays the status of IMPS.",
            "example": "Live"
          },
          "rtgs": {
            "type": "string",
            "description": "It displays the status of RTGS.",
            "example": "Live"
          },
          "upi": {
            "type": "string",
            "description": "It displays the status of UPI.",
            "example": "Live"
          },
          "ft": {
            "type": "string",
            "description": "It displays the status of fund transfer.",
            "example": "Live"
          },
          "card": {
            "type": "string",
            "description": "It displays the status of card.",
            "example": "Live"
          },
          "micr": {
            "type": "integer",
            "description": "It displays the MICR code that can be used to identify the bank.",
            "example": 560751026
          },
          "nbin": {
            "type": "integer",
            "description": "It displays the National Bank Identification Number (NBIN) information.",
            "example": 1234
          },
          "address": {
            "type": "string",
            "description": "It displays the physical address information of the branch.",
            "example": "GROUND FLOOR, 123, ABC CIRCLE, XYZ MAIN ROAD, BANGALORE - 560098"
          },
          "city": {
            "type": "string",
            "description": "It displays the city name where the branch is located.",
            "example": "BANGALORE"
          },
          "state": {
            "type": "string",
            "description": "It displays the name of the state where the branch is located.",
            "example": "KARNATAKA"
          },
          "branch": {
            "type": "string",
            "description": "It displays the name of the branch.",
            "example": "BANGALORE - RAJA RAJESHWARI NAGAR BRANCH"
          },
          "ifsc_subcode": {
            "type": "string",
            "description": "It displays the subcode of the IFSC information.",
            "example": "HDFC0"
          },
          "category": {
            "type": "string",
            "description": "It displays the category of the bank.",
            "example": "DIRECT_MEMBER"
          },
          "swift_code": {
            "type": "string",
            "description": "It displays the code that identifies banks and financial institutions worldwide. The code helps pinpoint the specific bank.",
            "example": "HDFCINBB"
          }
        }
      },
      "UpiAdvanceRequestSchema": {
        "description": "Find the request parameters to verify UPI VPA information",
        "type": "object",
        "example": {
          "value": {
            "vpa": "valid_vpa@upi",
            "name": "John Doe"
          }
        },
        "required": [
          "vpa"
        ],
        "properties": {
          "vpa": {
            "type": "string",
            "description": "It is the UPI VPA information. Only alphanumeric characters with period (.), hyphen (-), and underscore ( _ ), at the rate of (@) are allowed.",
            "example": "valid_vpa@upi",
            "default": "valid_vpa@upi"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the UPI VPA account holder.",
            "example": "John Doe",
            "default": "John Doe"
          }
        }
      },
      "UpiAdvanceResponseSchema": {
        "description": "UPI 360 success response",
        "type": "object",
        "example": {
          "value": {
            "reference_id": 1358,
            "status": "VALID",
            "message": "Vpa verified successfully.",
            "ifsc": "ICIC0006567",
            "vpa": "valid@upi",
            "name_at_bank": "John doe",
            "ifsc_details": {
              "bank": "Bank Name",
              "neft": "Live",
              "imps": "Live",
              "rtgs": "Live",
              "upi": "Live",
              "address": "GROUND FLOOR, 123, ABC CIRCLE, XYZ MAIN ROAD, BANGALORE - 560098",
              "city": "BANGALORE",
              "state": "KARNATAKA",
              "branch": "BANGALORE - RAJA RAJESHWARI NAGAR BRANCH",
              "category": "SUB_MEMBER",
              "swift_code": "ABCDINBBDCL",
              "micr": 560751026,
              "nbin": 1234
            }
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the UPI VPA information.",
            "example": "VALID"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request.",
            "example": "Vpa verified successfully"
          },
          "ifsc": {
            "type": "string",
            "description": "It displays the IFSC information associated with the UPI VPA information.",
            "example": "ICIC0006567"
          },
          "vpa": {
            "type": "string",
            "description": "It displays the UPI VPA information.",
            "example": "success@upi"
          },
          "name_at_bank": {
            "type": "string",
            "description": "It displays the name of the account holder as registered in the bank records.",
            "example": "John Doe"
          },
          "ifsc_details": {
            "type": "object",
            "description": "It displays the details corresponding to the IFSC information.",
            "properties": {
              "bank": {
                "type": "string",
                "description": "It displays the name of the bank.",
                "example": "Bank Name"
              },
              "neft": {
                "type": "string",
                "description": "It displays the status of NEFT.",
                "example": "Live"
              },
              "imps": {
                "type": "string",
                "description": "It displays the status of IMPS.",
                "example": "Live"
              },
              "rtgs": {
                "type": "string",
                "description": "It displays the status of RTGS.",
                "example": "Live"
              },
              "upi": {
                "type": "string",
                "description": "It displays the status of UPI.",
                "example": "Live"
              },
              "address": {
                "type": "string",
                "description": "It displays the physical address information of the branch.",
                "example": "GROUND FLOOR, 123, ABC CIRCLE, XYZ MAIN ROAD, BANGALORE - 560098"
              },
              "city": {
                "type": "string",
                "description": "It displays the city name where the branch is located.",
                "example": "BANGALORE"
              },
              "state": {
                "type": "string",
                "description": "It displays the name of the state where the branch is located.",
                "example": "KARNATAKA"
              },
              "branch": {
                "type": "string",
                "description": "It displays the name of the branch.",
                "example": "BANGALORE - RAJA RAJESHWARI NAGAR BRANCH"
              },
              "category": {
                "type": "string",
                "description": "It displays the category of the bank.",
                "example": "SUB_MEMBER"
              },
              "swift_code": {
                "type": "string",
                "description": "It displays the code that identifies banks and financial institutions worldwide. The code helps pinpoint the specific bank.",
                "example": "ABCDINBBDCL"
              },
              "micr": {
                "type": "integer",
                "description": "It displays the MICR code that can be used to identify the bank.",
                "example": 560751026
              },
              "nbin": {
                "type": "integer",
                "description": "It displays the National Bank Identification Number (NBIN) information.",
                "example": 1234
              }
            }
          }
        }
      },
      "UpiMobileRequestSchema": {
        "description": "Find the request parameters to fetch the list of UPI VPA",
        "type": "object",
        "example": {
          "verification_id": "test_verification_id",
          "mobile_number": "6666666666",
          "name": "John Doe",
          "email": "JohnDoe@gmail.com",
          "additional_vpas": true
        },
        "required": [
          "verification_id",
          "mobile_number"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test_verification_id",
            "default": "test_verification_id"
          },
          "mobile_number": {
            "type": "string",
            "description": "It is the mobile number of the UPI VPA account holder.",
            "example": "6666666666",
            "default": "6666666666"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the account holder.",
            "example": "John Doe",
            "default": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "It is the email ID of the account holder.",
            "example": "JohnDoe@gmail.com",
            "default": "JohnDoe@gmail.com"
          },
          "additional_vpas": {
            "type": "boolean",
            "description": "It is a boolean flag to fetch additional_vpas associated with the phone number in the response.",
            "example": true,
            "default": true
          }
        }
      },
      "UpiMobileResponseSchema": {
        "description": "Success response",
        "type": "object",
        "example": {
          "value": {
            "reference_id": 1358,
            "status": "SUCCESS",
            "account_status": "VALID",
            "verification_id": "test_verification_id",
            "mobile_number": "6666666666",
            "vpa": "6666666666@upi",
            "name_at_bank": "John doe",
            "additional_vpas": [
              "6666666666@paytm",
              "6666666666@ybl"
            ]
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.",
            "example": "SUCCESS"
          },
          "account_status": {
            "type": "string",
            "description": "It displays the status of the UPI VPA information.",
            "example": "VALID"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "test_verification_id"
          },
          "mobile_number": {
            "type": "string",
            "description": "It displays the mobile number of the account holder.",
            "example": "6666666666"
          },
          "vpa": {
            "type": "string",
            "description": "It displays the UPI VPA associated with the entered mobile number. If no primary UPI VPA is associated, this field will be null.",
            "example": "johndoe@oksbi"
          },
          "name_at_bank": {
            "type": "string",
            "description": "It displays the name of the account holder as registered in the bank. If no primary UPI VPA is associated, this field will be null.",
            "example": "John Doe"
          },
          "additional_vpas": {
            "type": "array",
            "description": "It displays the list of additional UPI VPA associated with the mobile number. If no other UPI VPA is linked with the mobile number, this will be an empty array [].",
            "items": {
              "type": "string"
            },
            "example": [
              "6666666666@apl",
              "6666666666@paytm"
            ]
          }
        }
      },
      "ValidityDetails": {
        "type": "object",
        "description": "It contains the validity details.",
        "example": {
          "value": {
            "to": "2023-10-23",
            "from": "2023-10-23"
          }
        },
        "properties": {
          "to": {
            "type": "string",
            "format": "date",
            "example": "2023-10-23"
          },
          "from": {
            "type": "string",
            "format": "date",
            "example": "2023-10-23"
          }
        }
      },
      "VehicleRcRequestSchema": {
        "description": "Find the request parameters to verify vehicle RC information",
        "type": "object",
        "example": {
          "verification_id": "test001",
          "vehicle_number": "PY01MW8769"
        },
        "required": [
          "verification_id",
          "vehicle_number"
        ],
        "properties": {
          "verification_id": {
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "test001",
            "default": "test001"
          },
          "vehicle_number": {
            "description": "It is the registration number of the vehicle",
            "type": "string",
            "example": "PY01MW8769"
          }
        }
      },
      "VehicleRcResponseSchema": {
        "description": "Verify Vehicle RC success response",
        "type": "object",
        "example": {
          "value": {
            "verification_id": "6c617137-6d50-4c59-9302-c453ca42aa8589",
            "reference_id": 88,
            "status": "VALID",
            "reg_no": "PY01MW8675",
            "class": "Motor Car",
            "chassis": "XDLKHK511VKL59924",
            "engine": "L5LCFF4579076",
            "vehicle_manufacturer_name": "HYUNDAI MOTOR INDIA LTD",
            "model": "PORCHE GDI DCT",
            "vehicle_colour": "TITAN GREY",
            "type": "PETROL",
            "norms_type": "BHARAT STAGE VI",
            "body_type": "HATCHBACK",
            "owner_count": "1",
            "owner": "JOHN DOE",
            "owner_father_name": "JOHN DOE",
            "mobile_number": null,
            "rc_status": "ACTIVE",
            "status_as_on": "19/01/2024",
            "reg_authority": "BENGALURU CENTRAL RTO, Karnataka",
            "reg_date": "24/12/2021",
            "vehicle_manufacturing_month_year": "12/2021",
            "rc_expiry_date": "23/12/2036",
            "vehicle_tax_upto": null,
            "vehicle_insurance_company_name": "BAJAJ INSURANCE CO. LTD.",
            "vehicle_insurance_upto": "14/12/2024",
            "vehicle_insurance_policy_number": "62000344820000",
            "rc_financer": "BAJAJ FINANCE",
            "present_address": "D-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103",
            "split_present_address": {
              "district": [
                "BANGALORE"
              ],
              "state": [
                "KARNATAKA",
                "KA"
              ],
              "city": [
                "BELLANDUR"
              ],
              "pincode": "560103",
              "country": [
                "IN",
                "IND",
                "INDIA"
              ],
              "address_line": "D-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103"
            },
            "permanent_address": "D-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103",
            "split_permanent_address": {
              "district": [
                "BANGALORE"
              ],
              "state": [
                "KARNATAKA",
                "KA"
              ],
              "city": [
                "BELLANDUR"
              ],
              "pincode": "560103",
              "country": [
                "IN",
                "IND",
                "INDIA"
              ],
              "address_line": "FD-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103"
            },
            "vehicle_cubic_capacity": "998",
            "gross_vehicle_weight": "1490",
            "unladen_weight": "1086",
            "vehicle_category": "LMV",
            "rc_standard_cap": "0",
            "vehicle_cylinders_no": "3",
            "vehicle_seat_capacity": "5",
            "vehicle_sleeper_capacity": "0",
            "vehicle_standing_capacity": "0",
            "wheelbase": "2580",
            "vehicle_number": "PY01MW5890",
            "pucc_number": "Newv4",
            "pucc_upto": "23/12/2022",
            "blacklist_status": "NA",
            "blacklist_details": null,
            "challan_details": null,
            "permit_issue_date": null,
            "permit_number": null,
            "permit_type": null,
            "permit_valid_from": null,
            "permit_valid_upto": null,
            "non_use_status": null,
            "non_use_from": null,
            "non_use_to": null,
            "national_permit_number": null,
            "national_permit_upto": null,
            "national_permit_issued_by": null,
            "is_commercial": false,
            "noc_details": null
          }
        },
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "6c617137-6d50-4c59-9302-c453ca42aa8589"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 88
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the vehicle rc.\nPossible values are \n- `VALID`: vehicle rc is valid.\n- `INVALID`: vehicle rc is invalid.",
            "example": "VALID"
          },
          "reg_no": {
            "type": "string",
            "description": "It displays the registration number of the vehicle.",
            "example": "KA01MW6127"
          },
          "class": {
            "type": "string",
            "description": "It displays the category or type of the vehicle as recognised by the relevant transportation authorities.",
            "example": "Motor Car"
          },
          "chassis": {
            "type": "string",
            "description": "It displays the chassis information of the vehicle.",
            "example": "MALBK511VMM110528"
          },
          "engine": {
            "type": "string",
            "description": "It displays the engine number of the vehicle.",
            "example": "G3LCMM440323"
          },
          "vehicle_manufacturer_name": {
            "type": "string",
            "description": "It displays the manufacturer of the vehicle.",
            "example": "HYUNDAI MOTOR INDIA LTD"
          },
          "model": {
            "type": "string",
            "description": "It displays the model number of the vehicle.",
            "example": "I20 N LINE N8 1.0TURBO GDI DCT"
          },
          "vehicle_color": {
            "type": "string",
            "description": "It displays the colour of the vehicle.",
            "example": "TITAN GREY"
          },
          "type": {
            "type": "string",
            "description": "It displays the type of the vehicle.",
            "example": "PETROL"
          },
          "norms_type": {
            "type": "string",
            "description": "It displays the norms set by the Central Pollution Control Board (CPCB)",
            "example": "BHARAT STAGE VI"
          },
          "body_type": {
            "type": "string",
            "description": "It displays the body type of the vehicle.",
            "example": "HATCHBACK"
          },
          "owner_count": {
            "type": "string",
            "description": "It displays the number of owners of the vehicle.",
            "example": "1"
          },
          "owner": {
            "type": "string",
            "description": "It displays the name of the current owner of the vehicle.",
            "example": "RAGHAV RASTOGI"
          },
          "owner_father_name": {
            "type": "string",
            "description": "It displays the father's name of the current owner of the vehicle.",
            "example": "ROHIT RASTOGI"
          },
          "mobile_number": {
            "type": "string",
            "description": "It displays the mobile number of the current owner of the vehicle.",
            "example": ""
          },
          "rc_status": {
            "type": "string",
            "description": "It displays the status of the RC.",
            "example": "ACTIVE"
          },
          "status_as_on": {
            "type": "string",
            "description": "It displays the particular date of the status of the RC.",
            "example": "19/01/2024"
          },
          "reg_authority": {
            "type": "string",
            "description": "It displays the name of the registration authority.",
            "example": "BENGALURU CENTRAL RTO, Karnataka"
          },
          "reg_date": {
            "type": "string",
            "description": "It displays the date of registration of the vehicle.",
            "example": "24/12/2021"
          },
          "vehicle_manufacturing_month_year": {
            "type": "string",
            "description": "It displays the month and year of the manufacturing of the vehicle.",
            "example": "12/2021"
          },
          "rc_expiry_date": {
            "type": "string",
            "description": "It displays the date until which the registration of the vehicle is valid.",
            "example": "23/12/2036"
          },
          "vehicle_tax_upto": {
            "type": "string",
            "description": "It displays the date until which the tax paid by the owner for the vehicle is valid.",
            "example": ""
          },
          "vehicle_insurance_company_name": {
            "type": "string",
            "description": "It displays the name of the insurance company associated with the vehicle.",
            "example": "TATA AIG GENERAL INSURANCE CO. LTD."
          },
          "vehicle_insurance_upto": {
            "type": "string",
            "description": "It displays the date until which the insurance paid by the owner for the vehicle is valid.",
            "example": "14/12/2024"
          },
          "vehicle_insurance_policy_number": {
            "type": "string",
            "description": "It displays the insurance policy number of the vehicle.",
            "example": "62000344820000"
          },
          "rc_financer": {
            "type": "string",
            "description": "It displays the name of the financial institution or lender that provided financing for the purchase of a vehicle.",
            "example": "BANDHAN BANK"
          },
          "present_address": {
            "type": "string",
            "description": "It displays the current address of the owner of the vehicle.",
            "example": "FLAT # 901 A BLOCK GOYAL ORCHID, LAKE VIEW APTS KARIAGRAHARA, BELLANDUR, Bangalore, Karnataka, 560103"
          },
          "split_present_address": {
            "$ref": "#/components/schemas/SplitAddress"
          },
          "permanent_address": {
            "type": "string",
            "description": "It displays the permanent address of the owner of the vehicle.",
            "example": "FLAT # 901 A BLOCK GOYAL ORCHID, LAKE VIEW APTS KARIAGRAHARA, BELLANDUR, Bangalore, Karnataka, 560103"
          },
          "split_permanent_address": {
            "$ref": "#/components/schemas/SplitAddress"
          },
          "vehicle_cubic_capacity": {
            "type": "string",
            "description": "It displays the cubic capacity of the vehicle's engine.",
            "example": "998"
          },
          "gross_vehicle_weight": {
            "type": "string",
            "description": "It displays the gross weight of the vehicle in kilograms.",
            "example": "1490"
          },
          "unladen_weight": {
            "type": "string",
            "description": "It displays the weight of the vehicle without carrying any load in kiolgrams.",
            "example": "1086"
          },
          "vehicle_category": {
            "type": "string",
            "description": "It displays the category of the vehicle.",
            "example": "LMV"
          },
          "rc_standard_cap": {
            "type": "string",
            "example": "0"
          },
          "vehicle_cylinders_no": {
            "type": "string",
            "description": "It displays the number of cylinders present in the vehicle.",
            "example": "3"
          },
          "vehicle_seat_capacity": {
            "type": "string",
            "description": "It displays the number of seats in the vehicle.",
            "example": "5"
          },
          "vehicle_sleeper_capacity": {
            "type": "string",
            "description": "It displays the number of beds available in the vehicle.",
            "example": "0"
          },
          "vehicle_standing_capacity": {
            "type": "string",
            "description": "It displays the number of people that can stand in the vehicle.",
            "example": "0"
          },
          "wheelbase": {
            "type": "string",
            "description": "It displays distance between the front and rear axles of a vehicle in mm.",
            "example": "2580"
          },
          "vehicle_number": {
            "type": "string",
            "description": "It displays the registration number of the vehicle.",
            "example": "KA01MW6127"
          },
          "pucc_number": {
            "type": "string",
            "description": "It displays the Pollution Under Control Certificate (PUCC) number associated with vehicle.",
            "example": "Newv4"
          },
          "pucc_upto": {
            "type": "string",
            "description": "It displays till when the PUCC number is valid.",
            "example": "23/12/2022"
          },
          "blacklist_status": {
            "type": "string",
            "description": "It displays whether the vehicle is blacklisted.",
            "example": "NA"
          },
          "blacklist_details": {
            "type": "object",
            "description": "It displays the reasons for blacklisting the vehicle."
          },
          "challan_details": {
            "description": "It displays traffic tickets or citations issued by traffic police or authorities for various traffic violations.",
            "type": "object"
          },
          "permit_issue_date": {
            "type": "string",
            "description": "It displays when the relevant authorities granted permission or authorisation for a specific type of permit associated with the vehicle.",
            "example": ""
          },
          "permit_number": {
            "type": "string",
            "description": "It displays the permit number of the vehicle.",
            "example": ""
          },
          "permit_type": {
            "type": "string",
            "description": "It displays the type of permit issued to the vehicle.",
            "example": ""
          },
          "permit_valid_from": {
            "type": "string",
            "description": "It displays the beginning date of the issuance of permit.",
            "example": ""
          },
          "permit_valid_upto": {
            "type": "string",
            "description": "It displays the end date of the permit.",
            "example": ""
          },
          "non_use_status": {
            "type": "string",
            "description": "It displays whether the vehicle owner or registrant declared that the vehicle is not in use for a certain period.",
            "example": ""
          },
          "non_use_from": {
            "type": "string",
            "description": "It displays the beginning date of the non use period.",
            "example": ""
          },
          "non_use_to": {
            "type": "string",
            "description": "It displays the end date of the non use period.",
            "example": ""
          },
          "national_permit_number": {
            "type": "string",
            "description": "It displays the permit issued to the vehicle to go outside the home state carrying goods.",
            "example": ""
          },
          "national_permit_upto": {
            "type": "string",
            "description": "It displays the end date of the permit issued to the vechicle to go outside the home state carrying goods.",
            "example": ""
          },
          "national_permit_issued_by": {
            "type": "string",
            "description": "It displays the national permit issuer's name.",
            "example": ""
          },
          "is_commercial": {
            "type": "boolean",
            "description": "It displays whether the vehicle is for commercial purpose.",
            "example": false
          },
          "noc_details": {
            "type": "string",
            "description": "It displays the details of the no objection certificate.",
            "example": ""
          }
        }
      },
      "VoterIdRequestSchema": {
        "description": "Find the request body parameters to verify the voter ID information.",
        "type": "object",
        "example": {
          "verification_id": "test123",
          "epic_number": "UAI4574761",
          "name": "John Doe"
        },
        "required": [
          "verification_id",
          "epic_number"
        ],
        "properties": {
          "verification_id": {
            "type": "string",
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "example": "test123"
          },
          "epic_number": {
            "type": "string",
            "description": "It is the unique identification number assigned to each voter ID",
            "default": "UAI4574761",
            "example": "UAI4574761"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the voter ID card holder.",
            "default": "John Doe",
            "example": "John Doe",
            "maxLength": 50
          }
        }
      },
      "RequestFiRequestSchema": {
        "description": "Find the request body parameters to request FI for AA.",
        "required": [
          "fi_verification_id",
          "consent_verification_id",
          "fi_from",
          "fi_to"
        ],
        "type": "object",
        "properties": {
          "fi_verification_id": {
            "type": "string",
            "example": "",
            "description": "It is the unique ID you create to identify the financial information request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed."
          },
          "consent_verification_id": {
            "type": "string",
            "example": "",
            "description": "It is the unique ID you created in the Request Consent API to identify the consent request."
          },
          "fi_from": {
            "type": "string",
            "format": "date-time",
            "description": "It is the beginning date and time of the financial information you require.",
            "example": "2023-01-01T00:00:00Z"
          },
          "fi_to": {
            "type": "string",
            "format": "date-time",
            "description": "It is the ending date and time of the financial information you require.",
            "example": "2023-12-31T23:59:59Z"
          }
        }
      },
      "ConsentRequestSchema": {
        "description": "Find the request body parameters to request consent for AA.",
        "required": [
          "consent_verification_id",
          "customer_identifiers",
          "consent_expiry",
          "fi_from",
          "fi_to",
          "redirect_url"
        ],
        "type": "object",
        "properties": {
          "consent_verification_id": {
            "type": "string",
            "example": "",
            "description": "It is the unique ID you create to identify the consent request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed."
          },
          "customer_identifiers": {
            "type": "array",
            "description": "It should contain the information related to the individual.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "MOBILE",
                  "description": "It is the unique piece of information to recognize and distinguish the individual.\nPossible values are\n- `MOBILE`"
                },
                "value": {
                  "type": "string",
                  "example": "",
                  "description": "It is the mobile number of the individual."
                }
              }
            }
          },
          "consent_expiry": {
            "type": "string",
            "format": "date-time",
            "example": "dateTime",
            "description": "It is the expiry date and time of the consent request."
          },
          "fi_from": {
            "type": "string",
            "format": "date-time",
            "example": "dateTime",
            "description": "It is the starting date and time of the financial information you require."
          },
          "fi_to": {
            "type": "string",
            "format": "date-time",
            "example": "dateTime",
            "description": "It is the ending date and time of the financial information you require."
          },
          "redirect_url": {
            "type": "string",
            "example": "string",
            "description": "It is the URL that you need to provide that takes the individual to after viewing the consent request."
          },
          "consent_mode": {
            "type": "string",
            "example": "STORE",
            "description": "It is the type of configuration for handling the financial information of the individual.\nPossible values are\n  - `VIEW`: It indicates that the information is for viewing purpose.\n  - `STORE`: It indicates that the information is for storing purpose.\n  - `QUERY`: It indicates that the information is for querying purposes, including performing searches, filtering results, or making data-driven decisions.\n  - `STREAM`: It indicates that the information is for streaming purposes."
          },
          "consent_type": {
            "type": "array",
            "description": "It displays the type of information you require from the individual.\n\n  Possible values are\n    - `PROFILE`: It contains the basic information of the individual.\n    - `SUMMARY`: It contains the summary of the financial information of the individual.\n    - `TRANSACTIONS`: It contains the transactional information of the individual.",
            "items": {
              "type": "string",
              "example": "PROFILE"
            }
          },
          "fi_types": {
            "type": "array",
            "description": "It displays the type of financial information you require from the individual.\n\n  Possible values are\n    - `DEPOSIT`",
            "items": {
              "type": "string",
              "example": "DEPOSIT"
            }
          },
          "consent_start": {
            "type": "string",
            "format": "date-time",
            "description": "It is the start date and time of the consent validity for the individual's financial information.",
            "example": "dateTime"
          },
          "data_life_expiry": {
            "type": "string",
            "format": "date",
            "example": "date",
            "description": "It displays the expiry date of the information fetched."
          },
          "filter": {
            "type": "array",
            "description": "It contains the filter options to sort the finanical information of the individual.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "TRANSACTION_AMOUNT",
                  "description": "It displays the type of detail in the financial information.\nPossible values are - `TRANSACTIONAMOUNT`"
                },
                "operator": {
                  "type": "string",
                  "example": "LESS_THAN",
                  "description": "It displays the filter criteria.\nPossible values are - `LESS_THAN` - `GREATER_THAN` - `EQUAL_TO` - `NOT_EQUAL_TO` - `GREATER_THAN_EQUAL_TO` - `LESS_THAN_EQUAL_TO`"
                },
                "value": {
                  "type": "string",
                  "example": "20000"
                }
              }
            }
          }
        }
      },
      "FIData": {
        "type": "object",
        "properties": {
          "fip_id": {
            "type": "string",
            "example": "FIP_1",
            "description": "It displays the unique ID to identify the financial provider."
          },
          "accounts": {
            "type": "array",
            "description": "It displays the bank account information of the individual.",
            "items": {
              "$ref": "#/components/schemas/FiAccount"
            }
          }
        }
      },
      "FiAccount": {
        "type": "object",
        "properties": {
          "link_ref_number": {
            "type": "string",
            "example": "b2328fa7-0dcd-2314-asb5-9ef7b4c1cz6b",
            "description": "It displays the unique identifier associated to specific transactions."
          },
          "masked_acc_number": {
            "type": "string",
            "example": "XXXXXX4363",
            "description": "It displays the masked bank account number of the individual."
          },
          "status": {
            "type": "string",
            "example": "DELIVERED",
            "description": "It displays the status of the financial information request.\n\n   Possible values are\n   - `READY`\n   - `DENIED`\n   - `PENDING`\n   - `DELIVERED`\n   - `TIMEOUT`"
          },
          "data": {
            "type": "object",
            "nullable": true,
            "properties": {
              "account": {
                "$ref": "#/components/schemas/FiAccountData"
              }
            }
          }
        }
      },
      "FiAccountData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "DEPOSIT"
          },
          "profile": {
            "type": "object",
            "properties": {
              "holders": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "SINGLE"
                  },
                  "holder": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "example": "729, 2nd main 2nd Cross, 8th Block, Kormangala, Bangalore - 560095"
                      },
                      "ckyc_compliance": {
                        "type": "string",
                        "example": "true"
                      },
                      "dob": {
                        "type": "string",
                        "example": "1960-08-15"
                      },
                      "email": {
                        "type": "string",
                        "example": "dummymail@mail.com"
                      },
                      "landline": {
                        "type": "string",
                        "example": ""
                      },
                      "mobile": {
                        "type": "string",
                        "example": "9876543219"
                      },
                      "name": {
                        "type": "string",
                        "example": "Vinay Kumar"
                      },
                      "nominee": {
                        "type": "string",
                        "example": "REGISTERED"
                      },
                      "pan": {
                        "type": "string",
                        "example": "DUMPY0000A"
                      }
                    }
                  }
                }
              }
            }
          },
          "summary": {
            "type": "object",
            "description": "It contains the summary of the financial information of the individual.",
            "properties": {
              "current_balance": {
                "type": "string",
                "example": "666.33"
              },
              "currency": {
                "type": "string",
                "example": "INR"
              },
              "branch": {
                "type": "string",
                "example": "Kormangala 8th Block"
              },
              "balance_date_time": {
                "type": "string",
                "format": "date-time",
                "example": "2020-06-22T07:50:00+00:00"
              },
              "current_od_limit": {
                "type": "string",
                "example": "0"
              },
              "drawing_limit": {
                "type": "string",
                "example": "0"
              },
              "exchange_rate": {
                "type": "string",
                "example": " "
              },
              "facility": {
                "type": "string",
                "example": "OD"
              },
              "ifsc_code": {
                "type": "string",
                "example": "ICIC0004444"
              },
              "micr_code": {
                "type": "string",
                "example": "5898240246"
              },
              "opening_date": {
                "type": "string",
                "example": "2002-07-06"
              },
              "status": {
                "type": "string",
                "example": "ACTIVE"
              },
              "type": {
                "type": "string",
                "example": "SAVINGS"
              },
              "pending": {
                "type": "object",
                "properties": {
                  "transaction_type": {
                    "type": "string",
                    "example": "DEBIT"
                  },
                  "amount": {
                    "type": "string",
                    "example": "0"
                  }
                }
              }
            }
          },
          "transactions": {
            "type": "object",
            "description": "It contains the transactional information of the individual.",
            "properties": {
              "start_date": {
                "type": "string",
                "example": "2022-04-01"
              },
              "end_date": {
                "type": "string",
                "example": "2022-08-30"
              },
              "transaction": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string",
                      "example": "129"
                    },
                    "current_balance": {
                      "type": "string",
                      "example": "567.25"
                    },
                    "mode": {
                      "type": "string",
                      "example": "UPI"
                    },
                    "narration": {
                      "type": "string",
                      "example": "UPI/9876543219/getsimpl/simpl@axisbank/Axis Bank"
                    },
                    "reference": {
                      "type": "string",
                      "example": "RFN00076583"
                    },
                    "transaction_timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-04-01T13:20:14+05:30"
                    },
                    "txn_id": {
                      "type": "string",
                      "example": "M3256752"
                    },
                    "type": {
                      "type": "string",
                      "example": "DEBIT"
                    },
                    "value_date": {
                      "type": "string",
                      "example": "2022-04-01"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FiResponseSchema": {
        "type": "object",
        "properties": {
          "fi_verification_id": {
            "type": "string",
            "example": "abc123",
            "description": "It is the unique ID you create to identify the financial information request. The maximum character limit is 50. Only alphaumeric, period (.), hyphen (-), and underscore ( _ ) are allowed."
          },
          "consent_verification_id": {
            "type": "string",
            "example": "def456",
            "description": "It is the unique ID you created in the Request Consent API to identify the consent request."
          },
          "fi_ref_id": {
            "type": "number",
            "example": 123456,
            "description": "It displays the unique ID created by Cashfree Payments for reference purpose."
          },
          "status": {
            "type": "string",
            "example": "ACTIVE",
            "description": "It displays the status of the financial information request.\n    Possible values are\n\n    - `SUCCESS`\n    - `ACTIVE`\n    - `FAILED`\n    - `EXPIRED`\n    - `PENDING`"
          },
          "fi_from": {
            "type": "string",
            "format": "date-time",
            "description": "It is the beginning date and time of the financial information you require.",
            "example": "2024-01-01T00:00:00Z"
          },
          "fi_to": {
            "type": "string",
            "format": "date-time",
            "description": "It is the ending date and time of the financial information you require.",
            "example": "2024-12-31T23:59:59Z"
          },
          "fi_data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIData"
            }
          }
        }
      },
      "ConsentResponseSchema": {
        "type": "object",
        "properties": {
          "consent_verification_id": {
            "type": "string",
            "example": "",
            "description": "It displays the unique ID you created to identify the consent request."
          },
          "consent_ref_id": {
            "type": "number",
            "example": 10,
            "description": "It displays the unique ID created by Cashfree Payments for reference purpose."
          },
          "consent_redirect_url": {
            "type": "string",
            "example": "string",
            "description": "It displays the URL that redirects the individual to the consent request page."
          },
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "description": "It displays the status of the consent request.\n Possible values are \n\n - `PENDING`\n - `PROCESSING`\n - `SUCCESS`\n - `PAUSED`\n - `EXPIRED`\n - `REVOKED`\n - `REJECTED`"
          },
          "customer_identifiers": {
            "type": "array",
            "description": "It should contain the information related to the individual.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "MOBILE",
                  "description": "It is the unique piece of information to recognize and distinguish the individual.\nPossible values are\n- `MOBILE`"
                },
                "value": {
                  "type": "string",
                  "example": "",
                  "description": "It is the mobile number of the individual."
                }
              }
            }
          },
          "consent_expiry": {
            "type": "string",
            "format": "date-time",
            "example": "dateTime",
            "description": "It is the expiry date and time of the consent request."
          },
          "fi_from": {
            "type": "string",
            "format": "date-time",
            "example": "dateTime",
            "description": "It is the starting date and time of the financial information you require."
          },
          "fi_to": {
            "type": "string",
            "format": "date-time",
            "example": "dateTime",
            "description": "It is the ending date and time of the financial information you require."
          },
          "redirect_url": {
            "type": "string",
            "example": "string",
            "description": "It is the URL that you need to provide that takes the individual to after viewing the consent request."
          },
          "consent_mode": {
            "type": "string",
            "example": "STORE",
            "description": "It is the type of configuration for handling the financial information of the individual.\nPossible values are\n  - `VIEW`: It indicates that the information is for viewing purpose.\n  - `STORE`: It indicates that the information is for storing purpose.\n  - `QUERY`: It indicates that the information is for querying purposes, including performing searches, filtering results, or making data-driven decisions.\n  - `STREAM`: It indicates that the information is for streaming purposes."
          },
          "consent_type": {
            "type": "array",
            "description": "It displays the type of information you require from the individual.\n\n  Possible values are\n    - `PROFILE`: It contains the basic information of the individual.\n    - `SUMMARY`: It contains the summary of the financial information of the individual.\n    - `TRANSACTIONS`: It contains the transactional information of the individual.",
            "items": {
              "type": "string",
              "example": "PROFILE"
            }
          },
          "fi_types": {
            "type": "array",
            "description": "It displays the type of financial information you require from the individual.\n\n  Possible values are\n    - `DEPOSIT`",
            "items": {
              "type": "string",
              "example": "DEPOSIT"
            }
          },
          "consent_start": {
            "type": "string",
            "format": "date-time",
            "description": "It is the start date and time of the consent validity for the individual's financial information.",
            "example": "dateTime"
          },
          "data_life_expiry": {
            "type": "string",
            "format": "date",
            "example": "date",
            "description": "It displays the expiry date of the information fetched."
          },
          "filter": {
            "type": "array",
            "description": "It contains the filter options to sort the finanical information of the individual.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "TRANSACTION_AMOUNT",
                  "description": "It displays the type of detail in the financial information.\nPossible values are - `TRANSACTIONAMOUNT`"
                },
                "operator": {
                  "type": "string",
                  "example": "LESS_THAN",
                  "description": "It displays the filter criteria.\nPossible values are\n- `LESS_THAN` - `GREATER_THAN` - `EQUAL_TO` - `NOT_EQUAL_TO` - `GREATER_THAN_EQUAL_TO` - `LESS_THAN_EQUAL_TO`"
                },
                "value": {
                  "type": "string",
                  "example": "20000"
                }
              }
            }
          }
        }
      },
      "VoterIdResponseSchema": {
        "description": "Verify Voter ID success response",
        "type": "object",
        "example": {
          "value": {
            "reference_id": 1358,
            "verification_id": "testverificationid",
            "status": "VALID",
            "epic_number": "UAI4574761",
            "name": "HARSHIT PRAJAPATI",
            "name_in_regional_lang": "हर्षित",
            "age": "23",
            "relation_type": "FTHR",
            "relation_name": "RAJ PRAJAPATI",
            "relation_name_in_regional_lang": "राज",
            "father_name": "RAJ PRAJAPATI",
            "dob": "2000-12-07",
            "gender": "Male",
            "address": "GOVT JUNIOR COLLEGE SIRWAR",
            "split_address": {
              "district": [
                "INDORE"
              ],
              "state": [
                "Madhya Pradesh"
              ],
              "city": [
                "SANER"
              ],
              "pincode": "560034",
              "country": [
                "IN",
                "IND",
                "INDIA"
              ],
              "address_line": "GOVT JUNIOR COLLEGE SIRWAR"
            },
            "state": "Madhya Pradesh",
            "assembly_constituency_number": "211",
            "assembly_constituency": "SANER",
            "parliamentary_constituency_number": "25",
            "parliamentary_constituency": "INDORE",
            "part_number": "27",
            "part_name": "SIRWAR",
            "serial_number": "713",
            "polling_station": "GOVT JUNIOR COLLEGE SIRWAR"
          }
        },
        "properties": {
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1358
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "testverificationid"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.\nPossible values are \n- `VALID`: The provided Epic Number is valid.\n- `INVALID`: The provided Epic Number is invalid.",
            "example": "VALID"
          },
          "name": {
            "type": "string",
            "description": "It displays the name of the individual as present in the voter ID card.",
            "example": "SUSHMITHA H"
          },
          "name_in_regional_lang": {
            "type": "string",
            "description": "It displays the name of the individual in the individualâ€™s regional language as present in the voter ID card.",
            "example": "हर्षित"
          },
          "age": {
            "type": "string",
            "description": "It displays the age of the voter ID holder as present in the voter ID card",
            "example": "25"
          },
          "relation_type": {
            "type": "string",
            "description": "It displays the type of the relationship with the parent/guardian as present in the voter ID card.",
            "example": "FTHR"
          },
          "relation_name": {
            "type": "string",
            "description": "It displays the name of the parent/guardian as present in the voter ID card.",
            "example": "SUNILAKUMAR"
          },
          "relation_name_in_regional_lang": {
            "type": "string",
            "description": "It displays the name of the parent/guardian in the individualâ€™s regional language as present in the voter ID card.",
            "example": "राज"
          },
          "father_name": {
            "type": "string",
            "description": "It displays the fatherâ€™s name of the individual as present in the voter ID card.",
            "example": "SUNILAKUMAR"
          },
          "dob": {
            "type": "string",
            "description": "It displays the date of birth of the individual as present in the voter ID card.",
            "example": ""
          },
          "gender": {
            "type": "string",
            "description": "It displays the gender of the individual as present in the voter ID card.",
            "example": "Female"
          },
          "address": {
            "type": "string",
            "description": "It displays the address information of the individual as present in the voter ID card.",
            "example": "GOVT JUNIOR COLLEGE SIRWAR"
          },
          "split_address": {
            "$ref": "#/components/schemas/SplitAddressSchema"
          },
          "epic_number": {
            "type": "string",
            "description": "It displays the EPIC number of the individual as present in the voter ID card.",
            "example": "XXX0000000"
          },
          "state": {
            "type": "string",
            "description": "It displays the name of the state as present in the voter ID card.",
            "example": "Karnataka"
          },
          "assembly_constituency_number": {
            "type": "string",
            "description": "It displays the number associated with the assembly constituency as present in the voter ID card.",
            "example": "55"
          },
          "assembly_constituency": {
            "type": "string",
            "description": "It displays the name of the assembly constituency as present in the voter ID card.",
            "example": "MANVI"
          },
          "parliamentary_constituency_number": {
            "type": "string",
            "description": "It displays the number associated with the parliamentary constituency as present in the voter ID card.",
            "example": "6"
          },
          "parliamentary_constituency": {
            "type": "string",
            "description": "It displays the name of the parliamentary constituency as present in the voter ID card.",
            "example": "Raichur"
          },
          "part_number": {
            "type": "string",
            "description": "It displays the part number in the electoral roll.",
            "example": "29"
          },
          "part_name": {
            "type": "string",
            "description": "It displays the part name in the electoral roll.",
            "example": "GOVERMENT JUNIOR COLLEGE 2nd Room (South Wing ) sirwar"
          },
          "serial_number": {
            "type": "string",
            "description": "It displays the serial number as present in the voter ID card.",
            "example": "892"
          },
          "polling_station": {
            "type": "string",
            "description": "It displays the place where the individual cast votes during elections.",
            "example": "GOVT JUNIOR COLLEGE SIRWAR"
          }
        }
      },
      "VpaFromPhone500Schema": {
        "description": "Internal error response",
        "type": "object",
        "example": {
          "value": {
            "status": "FAILURE",
            "verification_id": "test_verification_id",
            "message": "Unable to validate, please retry later",
            "reference_id": 1338,
            "account_status": "UNABLE_TO_VALIDATE",
            "mobile_number": "7777777777"
          }
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the API request.",
            "example": "FAILURE"
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the API request.",
            "example": "test_verification_id"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request",
            "example": "Unable to validate, please retry later"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.\nformat: `int64`",
            "example": 1338
          },
          "account_status": {
            "type": "string",
            "description": "It displays the status of the account.",
            "example": "UNABLE_TO_VALIDATE"
          },
          "mobile_number": {
            "type": "string",
            "description": "It displays the mobile number of the individual.",
            "example": "7777777777"
          }
        }
      },
      "aadhaarmaskingrequestschema": {
        "description": "Find the request parameters to mask aadhaar information",
        "type": "object",
        "example": {
          "value": {
            "image": "image",
            "verification_id": "testverificationid"
          }
        },
        "required": [
          "image",
          "verification_id"
        ],
        "properties": {
          "image": {
            "description": "It is the image file of the aadhaar card that needs masking. Accepted formats - short, long, and PVC. Allowed file type - JPEG/JPG/PNG. The maximum file size should be 10 MB.",
            "format": "binary",
            "type": "string",
            "example": "image"
          },
          "verification_id": {
            "description": "It is the unique ID you create to identify the verification request. The maximum character limit is 50. Only alphanumeric, period (.), hyphen (-), and underscore ( _ ) are allowed.",
            "type": "string",
            "example": "testverificationid",
            "default": "testverificationid"
          }
        }
      },
      "duplicate_verification_id": {
        "description": "400 response for duplicate verification_id",
        "type": "object",
        "example": {
          "value": {
            "type": "validation_error",
            "code": "duplicate_verification_id",
            "message": "verification_id already exists"
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "It displays the type of error.",
            "example": "validation_error"
          },
          "code": {
            "type": "string",
            "description": "It displays the outcome or status of the API request.",
            "example": "duplicate_verification_id"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the failure of the API request.",
            "example": "verification_id already exists"
          }
        }
      },
      "invalid_ip_address": {
        "description": "400 response for invalid IP address",
        "type": "object",
        "example": {
          "value": {
            "type": "validation_error",
            "code": "invalid_ip_address",
            "message": "please enter a valid IP address"
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "It displays the type of error.",
            "example": "validation_error"
          },
          "code": {
            "type": "string",
            "description": "It displays the outcome or status of the API request.",
            "example": "invalid_ip_address"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the failure of the API request.",
            "example": "please enter a valid IP address"
          }
        }
      },
      "invaliddoctypeschema": {
        "description": "Invalid document type response",
        "type": "object",
        "example": {
          "value": {
            "status": "INVALID",
            "reference_id": 35476,
            "verification_id": "testverificationid",
            "message": "Document type not supported"
          }
        },
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the document type.",
            "example": "INVALID"
          },
          "reference_id": {
            "type": "integer",
            "description": "It displays the unique ID created by Cashfree Payments for reference purposes.",
            "example": 35476
          },
          "verification_id": {
            "type": "string",
            "description": "It displays the unique ID you created to identify the verification request.",
            "example": "testverificationid"
          },
          "message": {
            "type": "string",
            "description": "It displays details about the success or failure of the API request",
            "example": "Document type not supported"
          }
        }
      },
      "v2ErrorResponse404SchemaIpVerification": {
        "description": "IP not found error response",
        "type": "object",
        "example": {
          "value": {
            "type": "not_found_error",
            "code": "not_found",
            "message": "unable to find IP details"
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "example": "not_found_error"
          },
          "code": {
            "type": "string",
            "example": "not_found"
          },
          "message": {
            "type": "string",
            "example": "unable to find IP details"
          }
        }
      },
      "x-client-id_missing": {
        "description": "400 response schema for missing x-client-id",
        "type": "object",
        "example": {
          "type": "validation_error",
          "code": "x-client-id missing",
          "message": "x-client-id is missing in the request."
        },
        "properties": {
          "type": {
            "type": "string",
            "example": "validation_error"
          },
          "code": {
            "type": "string",
            "example": "x-client-id missing"
          },
          "message": {
            "type": "string",
            "example": "x-client-id is missing in the request."
          }
        }
      }
    },
    "parameters": {
      "reference_id": {
        "description": "To search the identity via Cashfree generated id",
        "name": "reference_id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "321696"
      },
      "verification_id": {
        "description": "Find the identity via the merchant generated id",
        "name": "verification_id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "dksdjkqwjkf"
      },
      "x_api_version": {
        "description": "It is the API version. To receive the aadhaar seeding status in the response, use any date after 2022-09-12",
        "name": "x-api-version",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "2022-10-26"
      },
      "x_cf_signature": {
        "description": "Send the signature if IP is not whitelisted",
        "name": "x-cf-signature",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "global_x_api_version": {
        "description": "API version to be used. Format is in YYYY-MM-DD",
        "name": "x-api-version",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "example": "2024-12-17"
      }
    },
    "requestBodies": {
      "BharatOCRRequest": {
        "description": "Find the request parameters to perform BharatOCR verification.",
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/BharatOCRRequestSchema"
            }
          }
        }
      },
      "GenerateKYCLinkRequest": {
        "description": "Find the request parameters for Generate KYC Link.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GenerateKYCLinkRequestSchema"
            }
          }
        }
      },
      "StaticKYCLinkRequest": {
        "description": "Find the request parameters for Generate Static KYC Link.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StaticKYCLinkRequestSchema"
            }
          }
        }
      },
      "UVDataAvailabilityRequest": {
        "description": "Find the request parameters to retrieve the information of a user data availability",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UVDataAvailabilityRequestSchema"
            },
            "example": {
              "verification_id": "123456",
              "user": [
                {
                  "identifier_type": "MOBILE",
                  "identifier_value": "9988123456"
                }
              ]
            }
          }
        }
      },
      "AdvanceEmploymentRequest": {
        "description": "Find the request parameters to retrieve employment details",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdvanceEmploymentRequestSchema"
            },
            "examples": {
              "phone_number": {
                "$ref": "#/components/examples/phone_number"
              },
              "uan": {
                "$ref": "#/components/examples/uan"
              },
              "phone_and_pan": {
                "$ref": "#/components/examples/phone_and_pan"
              },
              "phone_dob_and_employer_name": {
                "$ref": "#/components/examples/phone_dob_and_employer_name"
              },
              "phone_employee_and_employer_name": {
                "$ref": "#/components/examples/phone_employee_and_employer_name"
              },
              "phone_dob_and_names": {
                "$ref": "#/components/examples/phone_dob_and_names"
              },
              "phone_pan_and_names": {
                "$ref": "#/components/examples/phone_pan_and_names"
              },
              "phone_pan_dob_and_names": {
                "$ref": "#/components/examples/phone_pan_dob_and_names"
              },
              "uan_and_names": {
                "$ref": "#/components/examples/uan_and_names"
              },
              "uan_and_employee": {
                "$ref": "#/components/examples/uan_and_employee"
              },
              "dob_and_employee": {
                "$ref": "#/components/examples/dob_and_employee"
              },
              "dob_and_names": {
                "$ref": "#/components/examples/dob_and_names"
              }
            }
          }
        }
      },
      "BankAccountVerificationAsyncRequestBody": {
        "description": "Find the request parameters to verify bank account information using the async method",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BankAccountVerificationAsyncRequestSchema"
            }
          }
        }
      },
      "BankAccountVerificationBulkRequestBody": {
        "description": "Find the request parameters to verify bank account information in bulk",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BankAccountVerificationBulkRequestSchema"
            }
          }
        }
      },
      "BankAccountVerificationSyncRequestBody": {
        "description": "Find the request parameters to verify the bank account information using the sync method",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BankAccountVerificationSyncRequestSchema"
            }
          }
        }
      },
      "BulkPanRequest": {
        "description": "Find the request parameters to verify a large number of PAN information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BulkPanRequestSchema"
            },
            "example": {
              "bulk_verification_id": 31123,
              "entries": [
                {
                  "pan": "ABCPV1234D",
                  "name": "JOHN DOE"
                },
                {
                  "pan": "ABCPV1234D",
                  "name": "JOHN"
                }
              ]
            }
          }
        }
      },
      "CinRequest": {
        "description": "Find the request parameters to retrieve your customer's CIN information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CinRequestSchema"
            }
          }
        }
      },
      "DigiLockerCreateUrlRequest": {
        "description": "Find the request parameters to create a DigiLocker URL to retrieve and verify aadhaar, pan, driving-license information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigiLockerVerificationCreateUrlRequestSchema"
            }
          }
        }
      },
      "DigiLockerVerifyAccountRequest": {
        "description": "Find the request parameters to verify a Digilocker account",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigiLockerVerifyAccountRequestSchema"
            },
            "examples": {
              "mobileNumber": {
                "$ref": "#/components/examples/mobile_number"
              },
              "aadhaarNumber": {
                "$ref": "#/components/examples/aadhaar_number"
              }
            }
          }
        }
      },
      "DrivingLicenseRequest": {
        "description": "Find the request paramenters to retrieve your customer's driving license information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DrivingLicenseRequestSchema"
            }
          }
        }
      },
      "ESignVerificationCreateSignatureRequest": {
        "description": "Find the request parameters to add the details of the document and signer",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ESignVerificationCreateSignatureRequestSchema"
            }
          }
        }
      },
      "GstinVerificationRequest": {
        "description": "Find the request parameters to retrieve GSTIN information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GstinRequestSchema"
            }
          }
        }
      },
      "IPVerificationRequest": {
        "description": "Find the request parameters to retrieve location information of an IP address",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IpVerificationRequestSchema"
            }
          }
        }
      },
      "Mobile360Request": {
        "description": "Find the request parameters to retrieve the list of Information associated with the mobile number",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mobile360RequestSchema"
            }
          }
        }
      },
      "Mobile360SendOtpRequest": {
        "description": "Find the request parameters to send the OTP to the mobile number",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mobile360SendOtpRequestSchema"
            }
          }
        }
      },
      "Mobile360VerifyOtpRequest": {
        "description": "Find the request parameters for Mobile 360 Verify OTP",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mobile360VerifyOtpRequestSchema"
            }
          }
        }
      },
      "NameMatchRequest": {
        "description": "Find the request parameters to verify names with variations",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NameMatchRequestSchema"
            }
          }
        }
      },
      "OfflineAadhaarSendOtpRequest": {
        "description": "Find the request parameters to generate OTP for a given aadhar number",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OfflineAadhaarSendOtpRequestSchema"
            }
          }
        }
      },
      "OfflineAadhaarVerifyOtpRequest": {
        "description": "Find the request parameters to submit the generated OTP",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OfflineAadhaarVerifyOtpRequestSchema"
            }
          }
        }
      },
      "PanAdvanceRequest": {
        "description": "Find the request parameters to retrieve the PAN information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanAdvanceRequestSchema"
            }
          }
        }
      },
      "PanLiteRequest": {
        "description": "Request body for PAN Lite",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanLiteRequestSchema"
            },
            "examples": {
              "Valid": {
                "$ref": "#/components/examples/PanLiteExisting"
              },
              "Invalid": {
                "$ref": "#/components/examples/PanLiteInvalidRequest"
              },
              "Fake": {
                "$ref": "#/components/examples/PanLiteFakeRequest"
              },
              "Deleted": {
                "$ref": "#/components/examples/PanLiteDeletedRequest"
              },
              "Deactivated": {
                "$ref": "#/components/examples/PanLiteDeactivatedRequest"
              }
            }
          }
        }
      },
      "PanToGstinRequest": {
        "description": "Find the request parameters to retrieve the list of GSTIN associated with a PAN",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanToGstinRequestSchema"
            }
          }
        }
      },
      "PanVerificationRequest": {
        "description": "Find the request parameters to verify PAN.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanRequestSchema"
            }
          }
        }
      },
      "PassportVerificationRequest": {
        "description": "Find the request parameter to retrieve your customer's passport information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PassportVerificationRequestSchema"
            }
          }
        }
      },
      "ReverseGeocodingRequest": {
        "description": "Find the request parameters to retrieve the physical address of a location",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReverseGeocodingRequestSchema"
            }
          }
        }
      },
      "ReversePennyDropCreateRequestRequest": {
        "description": "Find the request parameters to create a reverse penny drop request",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateRequestRequestSchema"
            }
          }
        }
      },
      "UPIv2RequestBody": {
        "description": "Find the request parameters to verify UPI VPA",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UPIv2RequestSchema"
            }
          }
        }
      },
      "UpiAdvanceRequest": {
        "description": "Find the request parameters to retrieve the UPI VPA information of your customer",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpiAdvanceRequestSchema"
            }
          }
        }
      },
      "UpiMobileRequest": {
        "description": "Find the request parameters to retrieve the list of UPI VPA associated with the mobile number",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpiMobileRequestSchema"
            }
          }
        }
      },
      "VehicleRcRequest": {
        "description": "Find the request parameters to retrieve the information of a vehicle's registration certificate",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/VehicleRcRequestSchema"
            }
          }
        }
      },
      "VoterIdRequest": {
        "description": "Find the request parameters to fetch voter ID details",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/VoterIdRequestSchema"
            }
          }
        }
      },
      "RequestFIRequest": {
        "description": "Find the request parameters to request FI for AA.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RequestFiRequestSchema"
            },
            "example": {
              "fi_verification_id": "Fi_12345",
              "consent_verification_id": "abc12345",
              "fi_from": "2023-01-01T00:00:00Z",
              "fi_to": "2023-12-31T23:59:59Z"
            }
          }
        }
      },
      "ConsentRequest": {
        "description": "Find the request parameters to request consent for AA.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsentRequestSchema"
            },
            "example": {
              "consent_verification_id": "abc12345",
              "customer_identifiers": [
                {
                  "type": "MOBILE",
                  "value": "9876543210"
                }
              ],
              "consent_start": "2024-01-01T00:00:00Z",
              "consent_expiry": "2024-12-31T23:59:59Z",
              "fi_from": "2024-01-01T00:00:00Z",
              "fi_to": "2024-12-31T23:59:59Z",
              "redirect_url": "https://example.com/redirect",
              "consent_mode": "STORE",
              "consent_type": [
                "PROFILE",
                "SUMMARY",
                "TRANSACTION"
              ],
              "fi_types": [
                "DEPOSIT"
              ],
              "data_life_expiry": "2024-01-07",
              "filter": [
                {
                  "type": "TRANSACTION_AMOUNT",
                  "operator": "LESS_THAN",
                  "value": "20000"
                }
              ],
              "fetch_type": "ONETIME"
            }
          }
        }
      },
      "IFSCv2RequestBody": {
        "description": "Find the request parameters to retrieve the IFSC information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IFSCv2RequestSchema"
            }
          }
        }
      },
      "InitiateOauthRequestBody": {
        "description": "Find the request parameters to initiate Oauth",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InitiateOauthRequestSchema"
            }
          }
        }
      },
      "AccessTokenGenerationRequestBody": {
        "description": "Find the request parameters to Access Token Generation",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AccessTokenGenerationRequestSchema"
            }
          }
        }
      }
    },
    "responses": {
      "202": {
        "description": "Validation in pending state",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Validation Pending": {
                "value": {
                  "type": "validation_error",
                  "code": "validation_pending",
                  "message": "Validation in process check after some time"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Authentication Error because IP not whitelisted.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "IP not whitelisted": {
                "value": {
                  "type": "authentication_error",
                  "code": "ip_validation_failed",
                  "message": "IP not whitelisted your current ip is 106.51.91.104.For IP whitelisting assistance, visit our guide at https://www.cashfree.com/docs/secure-id/get-started/integration/ip-whitelisting-verification"
                }
              }
            }
          }
        }
      },
      "BharatOCRResponse": {
        "description": "Success response for retrieving the list of information associated with the mobile number.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BharatOCRResponseSchema"
            },
            "examples": {
              "PAN_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "PAN",
                  "document_fields": {
                    "pan": "DUXPR7763F",
                    "dob": "2004-10-02",
                    "name": "John Doe",
                    "father": "Josh Doe"
                  },
                  "quality_checks": {
                    "blur": true,
                    "partially_present": false,
                    "black_and_white": false,
                    "face_present": true,
                    "face_clear": true,
                    "qr_present": false
                  },
                  "fraud_checks": {
                    "is_screenshot": true,
                    "is_photo_of_screen": false
                  },
                  "verification_details": {
                    "reference_id": 98237899,
                    "status": "VALID",
                    "pan": "DUXPR7763F",
                    "name": "John Doe",
                    "dob": "2004-10-02",
                    "name_match": "Y",
                    "dob_match": "Y",
                    "pan_status": "E",
                    "aadhaar_seeding_status": "Y",
                    "aadhaar_seeding_status_desc": "Aadhaar is linked to PAN"
                  },
                  "message": "PAN document is valid"
                }
              },
              "AADHAAR_FRONT_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "AADHAAR_FRONT",
                  "document_fields": {
                    "address": "S / O Josh Doe, 202-parivar daser complex , dal  bazar , Gird , Gwalior , Lashkar City , Madhya Pradesh , 474019",
                    "dob": "2004-10-02",
                    "father": "Josh Doe",
                    "gender": "Male",
                    "name": "John Doe",
                    "uid": "123456789012"
                  },
                  "quality_checks": {
                    "blur": true,
                    "partially_present": false,
                    "black_and_white": false,
                    "face_present": true,
                    "face_clear": true,
                    "qr_present": false
                  },
                  "fraud_checks": {
                    "is_screenshot": true,
                    "is_photo_of_screen": false
                  },
                  "message": "AADHAAR_FRONT document is valid"
                }
              },
              "AADHAAR_BACK_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "AADHAAR_BACK",
                  "document_fields": {
                    "address": "S / O Josh Doe, 202-parivar daser complex , dal  bazar , Gird , Gwalior , Lashkar City , Madhya Pradesh , 474019",
                    "pincode": "474019",
                    "uid": "123456789012"
                  },
                  "quality_checks": {
                    "blur": true,
                    "partially_present": false,
                    "black_and_white": false,
                    "face_present": false,
                    "face_clear": false,
                    "qr_present": false
                  },
                  "fraud_checks": {
                    "is_screenshot": true,
                    "is_photo_of_screen": false
                  },
                  "message": "AADHAAR_BACK document is valid"
                }
              },
              "DRIVING_LICENCE_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "DRIVING_LICENCE",
                  "document_fields": {
                    "blood_group": "B+",
                    "date_of_birth": "2004-10-02",
                    "full_name": "John Doe",
                    "guardian_name": "Josh Doe",
                    "issuing_authority": "Assam",
                    "license_issue_date": "2019-08-16",
                    "license_expiry_date": "2024-05-13",
                    "license_number": "AB1120040002378",
                    "pin": "247001",
                    "vehicle_class": [
                      {
                        "issue_date": "2004-05-14",
                        "vehicle_type": "MCWG"
                      },
                      {
                        "issue_date": "2004-05-14",
                        "vehicle_type": "LMV"
                      }
                    ]
                  },
                  "message": "DRIVING_LICENCE document is valid"
                }
              },
              "VOTER_ID_FRONT_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "VOTER_ID_FRONT",
                  "document_fields": {
                    "age_on_issue_date": "20",
                    "dob": "2004-06-10",
                    "epic_number": "ABC1234567",
                    "gender": "Male",
                    "issue_date": "2024-09-07",
                    "name": "John Doe",
                    "relative_name": "Josh Doe",
                    "type_voter_id": "New"
                  },
                  "message": "VOTER_ID_FRONT document is valid"
                }
              },
              "VOTER_ID_BACK_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "VOTER_ID_BACK",
                  "document_fields": {
                    "address": "S / O Josh Doe, 202-parivar daser complex , dal  bazar , Gird , Gwalior , Lashkar City , Madhya Pradesh , 474019",
                    "age_on_issue_date": "20",
                    "dob": "2004-06-10",
                    "epic_number": "ABC1234567",
                    "gender": "Male",
                    "issue_date": "2024-09-07",
                    "state": "Madhya Pradesh",
                    "type_voter_id": "New"
                  },
                  "message": "VOTER_ID_BACK document is valid"
                }
              },
              "PASSPORT_FRONT_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "PASSPORT_FRONT",
                  "document_fields": {
                    "birth_city": "Gwalior",
                    "country_code": "IND",
                    "dob": "1992-02-15",
                    "expiry_date": "2023-06-05",
                    "gender": "M",
                    "given_name": "John",
                    "issue_city": "Gwalior",
                    "issue_date": "2013-06-06",
                    "mrz": {
                      "line1": "P<INDDOE<<JOHN<JOSH<<<<<<<<<<<<<<<<<<<<",
                      "line2": "L1234567<0IND6402156M2306000<<<<<<<<<<<<<<<6"
                    },
                    "nationality": "INDIAN",
                    "passport_number": "L1234567",
                    "surname": "Doe"
                  },
                  "message": "PASSPORT_FRONT document is valid"
                }
              },
              "PASSPORT_BACK_OCR": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "PASSPORT_BACK",
                  "document_fields": {
                    "address": "S / O Josh Doe, 202-parivar daser complex , dal  bazar , Gird , Gwalior , Lashkar City , Madhya Pradesh , 474019",
                    "father_name": "Josh Doe",
                    "file_number": "AB1077777915526",
                    "mother_name": "Josh Doe",
                    "old_issue_city": "GHAZIABAD",
                    "old_issue_date": "2007-02-14",
                    "old_passport_number": "M1234567",
                    "passport_num": "L1234567",
                    "pin": "474019",
                    "spouse_name": "Doe"
                  },
                  "message": "PASSPORT_BACK document is valid"
                }
              },
              "VEHICLE_RC_OCR": {
                "value": {
                  "verification_id": "test_verification_id1",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "VEHICLE_RC",
                  "document_fields": {
                    "address": "S / O Josh Doe, 202-parivar daser complex , dal  bazar , Gird , Gwalior , Lashkar City , Madhya Pradesh , 474019",
                    "chassis_number": "AB2A36FX5RCA68564",
                    "engine_number": "ABCDEA82178",
                    "manufacturer_name": "BAJAJ AUTO LTD",
                    "manufacturing_date": "2024-04",
                    "owner_name": "John Doe",
                    "registration_date": "2024-05-22",
                    "registration_number": "UP12KD1234",
                    "registration_validity": "2039-05-21",
                    "relation_name": "Josh Doe",
                    "type": "ind_rc",
                    "vehicle_model": "PULSAR NS 200",
                    "vehicle_type": "M-Cycle/Scooter"
                  },
                  "message": "VEHICLE_RC document is valid"
                }
              },
              "CANCELLED_CHEQUE_OCR": {
                "value": {
                  "verification_id": "test_verification_id1",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "CANCELLED_CHEQUE",
                  "document_fields": {
                    "ifsc": "ABCD1234567",
                    "pincode": "522201",
                    "account_number": "123456789012",
                    "bank_name": "State Bank Of India",
                    "cheque_number": "123456",
                    "account_type": "Current",
                    "micr_code": "2123456789",
                    "contact": "8644225960",
                    "branch": "TENALI BAZAR",
                    "name": "John Doe",
                    "split_address": {
                      "district": "UNTUR DISTRICT",
                      "state": "ANDHRA PRADESH",
                      "city": "TENALI",
                      "pincode": "522201",
                      "country": "INDIA"
                    },
                    "address_line": "Floor 1, Vaishnavi summit, Koramanagala Block 3, Bengaraluru, Karnataka",
                    "issue_date": "2024-10-02",
                    "expiry_date": "2024-10-30"
                  },
                  "message": "CANCELLED_CHEQUE document is valid"
                }
              },
              "INVOICE_OCR": {
                "value": {
                  "verification_id": "test_verification_id1",
                  "reference_id": 1358,
                  "status": "VALID",
                  "document_type": "INVOICE",
                  "document_fields": {
                    "vendor": {
                      "name": "Tech Solutions Pvt Ltd",
                      "address": "1234, Business Park, MG Road, Bangalore, Karnataka, 560001, IN",
                      "contact": "9876543210",
                      "email": "contact@techsolutions.com",
                      "gstin": "29AALCT1234E1Z9",
                      "state": "Karnataka",
                      "state_code": "29",
                      "pan": "AALCT1234E"
                    },
                    "buyer": {
                      "name": "Global Enterprises",
                      "address": "5678, Industrial Complex, Sector 15, Noida, Uttar Pradesh, 201301, IN",
                      "contact_person": "Ravi Kumar",
                      "contact": "9123456789",
                      "gstin": "09AABCG1234C1Z5",
                      "state": "Uttar Pradesh",
                      "state_code": "09",
                      "place_of_supply": "Uttar Pradesh"
                    },
                    "invoice_details": {
                      "invoice_number": "INV-20250319-001",
                      "invoice_date": "2025-03-19",
                      "order_reference": {
                        "order_ref_no": "ORD-20250318-1234",
                        "order_ref_date": "2025-03-18"
                      },
                      "indent": {
                        "indent_no": "IND-20250317-5678",
                        "indent_date": "2025-03-17"
                      },
                      "dispatched_through": "XYZ Logistics",
                      "payment_terms": "Net 30 Days",
                      "sales_person": "John Doe",
                      "destination": "Noida, Uttar Pradesh"
                    },
                    "line_items": [
                      {
                        "item_no": 1,
                        "model_no": "PROD-001",
                        "description": "Wireless Mouse Model X, 2.4 GHz, Black, Ergonomic Design",
                        "total_amount": 1200,
                        "unit_rate": 200,
                        "quantity": 6,
                        "alternate_quantity": 6,
                        "hsn_sac": "84716040"
                      },
                      {
                        "item_no": 2,
                        "model_no": "PROD-002",
                        "description": "Mechanical Keyboard, RGB Backlit, USB-C, 104 Keys",
                        "total_amount": 3000,
                        "unit_rate": 750,
                        "quantity": 4,
                        "alternate_quantity": 4,
                        "hsn_sac": "84716090"
                      }
                    ],
                    "totals": {
                      "sub_total": 4200,
                      "igst": 0,
                      "cgst": 378,
                      "sgst": 378,
                      "round_off": 0,
                      "grand_total": 4956,
                      "amount_in_words": "Four Thousand Nine Hundred Fifty-Six Only"
                    },
                    "bank_details": {
                      "bank_name": "HDFC Bank",
                      "account_number": "123456789012",
                      "branch_ifs": "HDFC0000123",
                      "swift_code": "HDFCINBBXXX"
                    },
                    "declaration": "This is a computer-generated invoice and does not require a signature.",
                    "additional_info": {
                      "delivery_note": "DN-20250319-001",
                      "po_no": "PO-20250318-1234",
                      "po_date": "2025-03-18",
                      "order_form_no": "OF-20250318-5678",
                      "proforma_invoice_no": "PI-20250318-001",
                      "proforma_invoice_date": "2025-03-18"
                    }
                  },
                  "message": "INVOICE document is valid"
                }
              },
              "INVALID": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "INVALID",
                  "message": "Input document is INVALID"
                }
              }
            }
          }
        }
      },
      "Response400BharatOCR": {
        "description": "Validation errors for Get UPI VPA with Mobile Number API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Verification ID Character Limit Exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_length_exceeded",
                  "message": "verification_id can include a maximum of 50 characters."
                }
              },
              "Both File And File URL Provided": {
                "value": {
                  "type": "validation_error",
                  "code": "file_and_file_url_both_provided",
                  "message": "Provide only one of the file or file_url in the request"
                }
              },
              "Both File And File URL Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "file_and_file_url_missing",
                  "message": "The file and file_url both missing in the request"
                }
              },
              "Invalid File Type": {
                "value": {
                  "type": "validation_error",
                  "code": "file_type_invalid",
                  "message": "Provide a valid file or file_url"
                }
              },
              "Unsecure File URL": {
                "value": {
                  "type": "validation_error",
                  "code": "unsecure_file_downloaded",
                  "message": "Malware detected in the file downloaded"
                }
              },
              "File Name Length Exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "file_name_length_exceeded",
                  "message": "File name should not be more than 50 characters"
                }
              },
              "Invalid File Name": {
                "value": {
                  "type": "validation_error",
                  "code": "file_name_invalid",
                  "message": "File name is invalid"
                }
              },
              "File Size Exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "file_size_exceeded",
                  "message": "file size exceeded 10mb limit"
                }
              },
              "Invalid File Format": {
                "value": {
                  "type": "validation_error",
                  "code": "file_format_invalid",
                  "message": "file format should be jpeg/jpg/png"
                }
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "400AsyncBAVV2": {
        "description": "Validation error Async Bav v2.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Name exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "name_length_exceeded",
                  "message": "name can include a maximum of 100 characters."
                }
              },
              "Invalid name": {
                "value": {
                  "type": "validation_error",
                  "code": "name_value_invalid",
                  "message": "name should not include special characters."
                }
              },
              "Phone exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_length_exceeded",
                  "message": "phone can include a maximum of 13 characters."
                }
              },
              "Phone short": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_length_short",
                  "message": "phone should include a minimum of 8 characters."
                }
              },
              "Invalid phone": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_value_invalid",
                  "message": "phone should be numeric."
                }
              },
              "Missing bank account number": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_missing",
                  "message": "bank_account is missing in the request."
                }
              },
              "Bank account number exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_length_exceeded",
                  "message": "bank_account can include a maximum of 40 characters."
                }
              },
              "Bank account number short": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_length_short",
                  "message": "bank_account should include a minimum of 6 characters."
                }
              },
              "Invalid bank account number": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_value_invalid",
                  "message": "bank_account should be alphanumeric."
                }
              },
              "Missing IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_missing",
                  "message": "ifsc is missing in the request."
                }
              },
              "Invalid IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_value_invalid",
                  "message": "ifsc should be of 11 characters and 5th character should be 0."
                }
              },
              "User ID exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "user_id_length_exceeded",
                  "message": "user_id can include a maximum of 40 characters."
                }
              },
              "Invalid user ID": {
                "value": {
                  "type": "validation_error",
                  "code": "user_id_value_invalid",
                  "message": "user_id should contain only alphanumeric and underscore characters."
                }
              },
              "Duplicate user ID": {
                "value": {
                  "type": "validation_error",
                  "code": "user_id_already_exists",
                  "message": "user_id already exists."
                }
              },
              "Missing header": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Service not enabled": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "service not enabled for this account."
                }
              },
              "Using test credentials": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_value_invalid",
                  "message": "Client secret belongs to test environment"
                }
              }
            }
          }
        }
      },
      "400BulkBAVV2": {
        "description": "Validation error Bulk Bav v2.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Bulk Validation ID missing": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_verification_id_missing",
                  "message": "bulk_verification_id is missing in the request."
                }
              },
              "Bulk Validation ID exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_verification_id_length_exceeded",
                  "message": "bulk_verification_id can include a maximum of 50 characters."
                }
              },
              "Invalid Bulk Validation ID": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_verification_id_value_invalid",
                  "message": "bulk_verification_id can include only alphanum, dot, hyphen and underscores."
                }
              },
              "Name exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "name_length_exceeded",
                  "message": "name can include a maximum of 100 characters for entry at sequence 10."
                }
              },
              "Name invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "name_value_invalid",
                  "message": "name should not include special characters for entry at sequence 10."
                }
              },
              "Entries exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "entries_length_exceeded",
                  "message": "The maximum number of entries allowed per request is 1000"
                }
              },
              "Entries short": {
                "value": {
                  "type": "validation_error",
                  "code": "entries_length_short",
                  "message": "Please provide at least one bank account entry"
                }
              },
              "Phone exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_length_exceeded",
                  "message": "phone can include a maximum of 13 characters for entry at sequence 10."
                }
              },
              "Phone short": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_length_short",
                  "message": "phone should include a minimum of 8 characters for entry at sequence 10."
                }
              },
              "Invalid phone": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_value_invalid",
                  "message": "phone should be numeric for entry at sequence 10."
                }
              },
              "Missing bank account number": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_missing",
                  "message": "bank_account is missing in the request for entry at sequence 10."
                }
              },
              "Bank account number exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_length_exceeded",
                  "message": "bank_account can include a maximum of 40 characters for entry at sequence 10."
                }
              },
              "Bank account number short": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_length_short",
                  "message": "bank_account should include a minimum of 6 characters for entry at sequence 10."
                }
              },
              "Invalid bank account number": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_value_invalid",
                  "message": "bank_account should be alphanumeric for entry at sequence 10."
                }
              },
              "Missing IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_missing",
                  "message": "ifsc is missing in the request for entry at sequence 10."
                }
              },
              "Invalid IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_value_invalid",
                  "message": "ifsc should be of 11 characters and 5th character should be 0 for entry at sequence 10."
                }
              },
              "Missing header": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Service not enabled": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "service not enabled for this account."
                }
              },
              "Using test credentials": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_value_invalid",
                  "message": "Client secret belongs to test environment"
                }
              }
            }
          }
        }
      },
      "400GetStatusBAVV2": {
        "description": "Validation error GetStatus Bav v2.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Missing reference and user ID": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "Please provide reference_id or user_id"
                }
              },
              "Invalid user ID": {
                "value": {
                  "type": "validation_error",
                  "code": "user_id_value_invalid",
                  "message": "user_id should contain only alphanumeric and underscore characters."
                }
              },
              "User ID length exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "user_id_length_exceeded",
                  "message": "user_id can include a maximum of 40 characters."
                }
              },
              "Invalid reference ID": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_value_invalid",
                  "message": "reference_id should be a number."
                }
              },
              "Missing header": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Using test credentials": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_value_invalid",
                  "message": "Client secret belongs to test environment"
                }
              }
            }
          }
        }
      },
      "400GetStatusBulkBAVV2": {
        "description": "Validation error GetStatus Bav v2.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Missing Bulk Reference ID and Bulk Verification ID": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "Please provide bulk_reference_id or bulk_verification_id"
                }
              },
              "Invalid Bulk Verification ID": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_verification_id_value_invalid",
                  "message": "bulk_verification_id can include only alphanum, dot, hyphen and underscores."
                }
              },
              "Bulk Verification ID length exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_verification_id_length_exceeded",
                  "message": "bulk_verification_id can include a maximum of 50 characters."
                }
              },
              "Missing header": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Using test credentials": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_value_invalid",
                  "message": "Client secret belongs to test environment"
                }
              }
            }
          }
        }
      },
      "400GetStatusCommonIdentities": {
        "description": "Common Identities responses for 400",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Reference ID or Verification ID Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "Please provide reference_id or verification_id"
                }
              },
              "Reference ID Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_value_invalid",
                  "message": "reference_id should be a number."
                }
              },
              "Verification Id Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_value_invalid",
                  "message": "verification_id can include only alphanum, dot, hyphen and underscores."
                }
              },
              "Client ID in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Client Secret in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              }
            }
          }
        }
      },
      "400GetFormStatus": {
        "description": "Get Form Status responses for 400",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Reference ID or Verification ID Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "Provide verificationID or referenceID"
                }
              },
              "Client ID in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Client Secret in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              }
            }
          }
        }
      },
      "400PanLiteAPI": {
        "description": "Validation errors for PAN Lite API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Empty PAN Field": {
                "value": {
                  "type": "validation_error",
                  "code": "pan_missing",
                  "message": "pan is missing in the request."
                }
              },
              "Empty NAME Field": {
                "value": {
                  "type": "validation_error",
                  "code": "name_missing",
                  "message": "name is missing in the request."
                }
              },
              "Empty DOB Field": {
                "value": {
                  "type": "validation_error",
                  "code": "dob_missing",
                  "message": "dob is missing in the request."
                }
              },
              "Invalid DOB Field": {
                "value": {
                  "type": "validation_error",
                  "code": "dob_value_invalid",
                  "message": "dob should be of type YYYY-MM-DD."
                }
              },
              "Verification Id Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_missing",
                  "message": "verification_id is missing in the request."
                }
              },
              "Verification Id character limit exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_length_exceeded",
                  "message": "verification_id can include a maximum of 50 characters."
                }
              },
              "Invalid Verification ID": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_value_invalid",
                  "message": "verification_id can include only alphanum, dot, hyphen and underscores."
                }
              },
              "Client ID/Client Secret Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              }
            }
          }
        }
      },
      "400SyncBAVV2": {
        "description": "Validation error Sync Bav v2.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Name exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "name_length_exceeded",
                  "message": "name can include a maximum of 100 characters."
                }
              },
              "Invalid name": {
                "value": {
                  "type": "validation_error",
                  "code": "name_value_invalid",
                  "message": "name should not include special characters."
                }
              },
              "Phone exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_length_exceeded",
                  "message": "phone can include a maximum of 13 characters."
                }
              },
              "Phone short": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_length_short",
                  "message": "phone should include a minimum of 8 characters."
                }
              },
              "Invalid phone": {
                "value": {
                  "type": "validation_error",
                  "code": "phone_value_invalid",
                  "message": "phone should be numeric."
                }
              },
              "Missing bank account number": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_missing",
                  "message": "bank_account is missing in the request."
                }
              },
              "Bank account number exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_length_exceeded",
                  "message": "bank_account can include a maximum of 40 characters."
                }
              },
              "Bank account number short": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_length_short",
                  "message": "bank_account should include a minimum of 6 characters."
                }
              },
              "Invalid bank account number": {
                "value": {
                  "type": "validation_error",
                  "code": "bank_account_value_invalid",
                  "message": "bank_account should be alphanumeric."
                }
              },
              "Missing IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_missing",
                  "message": "ifsc is missing in the request."
                }
              },
              "Invalid IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_value_invalid",
                  "message": "ifsc should be of 11 characters and 5th character should be 0."
                }
              },
              "Missing header": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Using test credentials": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_value_invalid",
                  "message": "Client secret belongs to test environment"
                }
              },
              "Service not enabled": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "service not enabled for this account."
                }
              }
            }
          }
        }
      },
      "400UPIv2": {
        "description": "Validation Errors UPI V2 API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Verification Id character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "VPA Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "vpa_missing",
                  "message": "vpa is missing in the request."
                }
              },
              "VPA Unsupported": {
                "value": {
                  "type": "validation_error",
                  "code": "vpa_unsupported",
                  "message": "vpa is not supported."
                }
              },
              "Invalid VPA": {
                "value": {
                  "type": "validation_error",
                  "code": "vpa_value_invalid",
                  "message": "vpa should be valid."
                }
              },
              "Special characters in Name": {
                "value": {
                  "type": "validation_error",
                  "code": "name_value_invalid",
                  "message": "name should only contains alphanumeric, space, dot and hyphen."
                }
              },
              "Name Length Exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "name_length_exceeded",
                  "message": "Name can include a maximum of 100 characters."
                }
              },
              "Client ID in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Client Secret in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              }
            }
          }
        }
      },
      "400UPIv2GetStatus": {
        "description": "Validation Errors UPI V2 Get Status API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "verification_id and reference_id missing": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "provide verification_id or reference_id"
                }
              },
              "Invalid reference_id format": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_value_invalid",
                  "message": "Bad request, please check API documentation"
                }
              },
              "Invalid Verification ID Format": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Client Secret in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              }
            }
          }
        }
      },
      "400IFSCv2": {
        "description": "Validation Errors IFSC V2 API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Verification Id character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "IFSC Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_missing",
                  "message": "ifsc is missing in the request."
                }
              },
              "Invalid IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "ifsc_value_invalid",
                  "message": "ifsc should be valid."
                }
              },
              "Client ID in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Client Secret in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              }
            }
          }
        }
      },
      "400InitiateOAuth": {
        "description": "Validation Errors Initiate OAuth.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Verification Id character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "Identifier Type Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "identifier_type_missing",
                  "message": "identifier_type is missing in the request."
                }
              },
              "Identifier Value Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "identifier_value_missing",
                  "message": "identifier_value is missing in the request."
                }
              },
              "Invalid Identifier Type": {
                "value": {
                  "type": "validation_error",
                  "code": "identifier_type_value_invalid",
                  "message": "identifier_type should be valid."
                }
              },
              "Invalid Identifier Value": {
                "value": {
                  "type": "validation_error",
                  "code": "identifier_value_value_invalid",
                  "message": "identifier_value should be valid."
                }
              },
              "Client ID in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Client Secret in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              }
            }
          }
        }
      },
      "400AccessTokenGeneration": {
        "description": "Validation Errors Initiate OAuth.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Auth Code Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "auth_code_missing",
                  "message": "auth_code is missing in the request."
                }
              },
              "Invalid Auth Code": {
                "value": {
                  "type": "validation_error",
                  "code": "auth_code_value_invalid",
                  "message": "auth_code should be valid."
                }
              },
              "Client ID in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Client Secret in Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              }
            }
          }
        }
      },
      "400FetchDetails": {
        "description": "Validation Errors Initiate OAuth.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Access Token Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "access_token_missing",
                  "message": "access_token is missing in the request."
                }
              },
              "Invalid Access Token": {
                "value": {
                  "type": "validation_error",
                  "code": "access_token_value_invalid",
                  "message": "access_token should be valid."
                }
              }
            }
          }
        }
      },
      "404CommonIdentities": {
        "description": "404 response for common identities",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Reference ID not found": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_not_found",
                  "message": "reference_id does not exist."
                }
              },
              "Verification Id not found": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_not_found",
                  "message": "verification_id does not exist."
                }
              }
            }
          }
        }
      },
      "404GetStatusBAVV2": {
        "description": "Reference id and user id not found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "User ID not found": {
                "value": {
                  "type": "validation_error",
                  "code": "user_id_not_found",
                  "message": "user_id does not exist."
                }
              },
              "Reference ID not found": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_not_found",
                  "message": "reference_id does not exist."
                }
              }
            }
          }
        }
      },
      "404GetStatusBulkBAVV2": {
        "description": "Reference id and user id not found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Bulk Reference ID not found": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_reference_id_not_found",
                  "message": "bulk_reference_id does not exist."
                }
              },
              "Bulk Verification ID not found": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_verification_id_not_found",
                  "message": "bulk_verification_id does not exist."
                }
              },
              "Reference ID not found": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_not_found",
                  "message": "reference_id does not exist."
                }
              }
            }
          }
        }
      },
      "404UPIv2": {
        "description": "Not found error when reference id doesn't exists.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Reference Id not Found": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_not_found",
                  "message": "reference_id does not exist."
                }
              },
              "Verification Id not found": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_not_found",
                  "message": "verification_id does not exist."
                }
              }
            }
          }
        }
      },
      "422AsyncBav": {
        "description": "Error responses for bank side failures and invalid ifsc requests.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid IFSC": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_ifsc_fail",
                  "message": "invalid ifsc provided.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Fraud account": {
                "value": {
                  "type": "validation_error",
                  "code": "fraud_account",
                  "message": "Fraud activity detected for this account.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Insufficient balance": {
                "value": {
                  "type": "validation_error",
                  "code": "insufficient_balance",
                  "message": "Insufficient balance to process this request."
                }
              }
            }
          }
        }
      },
      "422SyncBav": {
        "description": "Error responses for bank side failures and invalid ifsc requests.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Fraud account provided": {
                "value": {
                  "type": "validation_error",
                  "code": "fraud_account",
                  "message": "Fraud activity detected for this account.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Insufficient balance": {
                "value": {
                  "type": "validation_error",
                  "code": "insufficient_balance",
                  "message": "Insufficient balance to process this request."
                }
              },
              "Concurrent request in progress": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_already_under_process",
                  "message": "verification already under process.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Failed at bank": {
                "value": {
                  "type": "validation_error",
                  "code": "failed_at_bank",
                  "message": "failed at bank.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "NPCI unavailable": {
                "value": {
                  "type": "validation_error",
                  "code": "npci_unavailable",
                  "message": "npci unavailable.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Connection timeout": {
                "value": {
                  "type": "validation_error",
                  "code": "connection_timeout",
                  "message": "connection timeout from bank.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Source bank declined": {
                "value": {
                  "type": "validation_error",
                  "code": "source_bank_declined",
                  "message": "source bank declined.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Beneficiary bank declined": {
                "value": {
                  "type": "validation_error",
                  "code": "bene_bank_declined",
                  "message": "bene bank declined.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "IMPS mode fail": {
                "value": {
                  "type": "validation_error",
                  "code": "imps_mode_fail",
                  "message": "imps mode fail.",
                  "error": {
                    "reference_id": 102
                  }
                }
              },
              "Benficiary bank offline": {
                "value": {
                  "type": "validation_error",
                  "code": "benficiary_bank_offline",
                  "message": "benficiary bank offline.",
                  "error": {
                    "reference_id": 102
                  }
                }
              }
            }
          }
        }
      },
      "AadhaarMaskingResponse": {
        "description": "Success response for masking aadhaar number",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AadhaarMaskingResponseSchema"
            },
            "examples": {
              "VALID": {
                "value": {
                  "image_link": "https://image.url.link",
                  "reference_id": 354768,
                  "verification_id": "testverificationid",
                  "status": "VALID"
                }
              },
              "INVALID": {
                "value": {
                  "status": "INVALID_DOCUMENT",
                  "reference_id": 354768,
                  "verification_id": "testverificationid"
                }
              }
            }
          }
        }
      },
      "AadhaarOcrSuccessResponse": {
        "description": "Success response for verifying aadhaar information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AadhaarOcrResponseSchema"
            },
            "examples": {
              "Valid Aadhaar": {
                "value": {
                  "uid": "XXXX-XXXX-3717",
                  "name": "Varun Bhupati",
                  "yob": "1997",
                  "pincode": "474009",
                  "address": "S / O : Mahesh Bhupati, 202-parivar daser complex , dal  bazar , Gird , Gwalior , Lashkar City , Madhya Pradesh , 474019",
                  "state": " Madhya Pradesh",
                  "gender": "Male",
                  "father": "Mahesh Bhupati",
                  "valid": true,
                  "status": "VALID",
                  "verification_id": "19bf45c0-8149-4d3f-8d98-c004c4037eba",
                  "reference_id": "2345",
                  "confidence_score": "",
                  "message": "Aadhaar card is valid"
                }
              },
              "Invalid Aadhaar": {
                "value": {
                  "valid": false,
                  "status": "INVALID",
                  "verification_id": "19bf45c0-8149-4d3f-8d98-c004c4037eba",
                  "reference_id": "2345",
                  "message": "Aadhaar card is invalid"
                }
              }
            }
          }
        }
      },
      "AdvanceEmploymentResponse": {
        "description": "Success response for retreiving employment information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdvanceEmploymentResponse"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "SUCCESS",
                  "input": {
                    "phone": "9988776655",
                    "pan": null,
                    "uan": null,
                    "dob": null,
                    "employee_name": null,
                    "employer_name": null
                  },
                  "uan_details": [
                    {
                      "uan": "101340612345",
                      "source": "dob and name",
                      "source_score": 0,
                      "basic_details": {
                        "gender": "MALE",
                        "dob": "1996-10-02",
                        "employee_confidence_score": 0,
                        "employee_name": "John Doe",
                        "phone": "9988776655",
                        "aadhaar_verified": true
                      },
                      "employment_details": {
                        "member_id": "MHBAN12342200000012345",
                        "establishment_id": "MHBAN1234220000",
                        "exit_date": null,
                        "joining_date": "2020-02-21",
                        "leave_reason": null,
                        "establishment_name": "Cashfree India Private Ltd",
                        "employer_confidence_score": 0.1
                      },
                      "additional_details": {
                        "aadhaar": "XXXXXXXX7561",
                        "email": "johndoe@gmail.com",
                        "pan": "ABCDE5930G",
                        "ifsc": "SBIN0012345",
                        "bank_account": "20329012345",
                        "bank_address": "STATE BANK OF INDIA,KATANGA  BENGALURU",
                        "relation": "F",
                        "relative_name": "Alice Doe"
                      }
                    }
                  ],
                  "recent_employment_details": {
                    "employee_details": {
                      "member_id": "UPLKO22417520000010171",
                      "exit_date": null,
                      "joining_date": "2023-09-01",
                      "uan": "101379636551",
                      "epfo": {
                        "recent": true,
                        "name_unique": true,
                        "pf_filings_details": true
                      },
                      "employed": false,
                      "employee_name_match": false,
                      "exit_date_marked": false
                    },
                    "employer_details": {
                      "establishment_id": "MHBAN1234220000",
                      "establishment_name": "Cashfree India Private Ltd",
                      "setup_date": "2020-11-19",
                      "ownership_type": "Private Limited Company",
                      "employer_confidence_score": 0.3,
                      "employer_name_match": false,
                      "pf_filing_details": [
                        {
                          "total_amount": 37524,
                          "employees_count": 17,
                          "wage_month": "NOV-23"
                        },
                        {
                          "total_amount": 41249,
                          "employees_count": 19,
                          "wage_month": "OCT-23"
                        },
                        {
                          "total_amount": 37295,
                          "employees_count": 16,
                          "wage_month": "SEP-23"
                        }
                      ]
                    }
                  }
                }
              },
              "EMPLOYMENT_DETAILS_NOT_FOUND": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "EMPLOYMENT_DETAILS_NOT_FOUND",
                  "input": {
                    "phone": "9988776655",
                    "pan": null,
                    "uan": null,
                    "dob": null,
                    "employee_name": null,
                    "employer_name": null
                  },
                  "uan_details": [],
                  "recent_employment_details": null
                }
              }
            }
          }
        }
      },
      "BavAsyncV2Response": {
        "description": "Success response for Bank Account Verification Async V2",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BAVAsyncV2ResponseSchema"
            },
            "examples": {
              "Request accepted with user ID": {
                "value": {
                  "reference_id": 123,
                  "user_id": "test",
                  "account_status": "RECEIVED",
                  "account_status_code": "VALIDATION_IN_PROGRESS"
                }
              },
              "Request accepted without user ID": {
                "value": {
                  "reference_id": 123,
                  "account_status": "RECEIVED",
                  "account_status_code": "VALIDATION_IN_PROGRESS"
                }
              }
            }
          }
        }
      },
      "BulkBavV2Response": {
        "description": "Success response for Bulk Bank Account Verification V2",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BulkBAVV2ResponseSchema"
            },
            "examples": {
              "Request accepted successfully": {
                "value": {
                  "bulk_reference_id": 123,
                  "bulk_verification_id": "bulk-test-123",
                  "status": "RECEIVED"
                }
              }
            }
          }
        }
      },
      "BavSyncV2Response": {
        "description": "Success response for Bank Account Verification Sync V2",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BAVV2ValidationSuccessfulSchema"
            },
            "examples": {
              "Valid account": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": "BHARATHTEST GKUMARUT",
                  "bank_name": "YES BANK",
                  "city": "MUMBAI",
                  "branch": "SANTACRUZ, MUMBAI",
                  "micr": 400532038,
                  "name_match_score": "90.00",
                  "name_match_result": "GOOD_PARTIAL_MATCH",
                  "account_status": "VALID",
                  "account_status_code": "ACCOUNT_IS_VALID",
                  "utr": "404223241811"
                }
              },
              "Invalid account": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "INVALID_ACCOUNT_FAIL",
                  "utr": null
                }
              },
              "Account blocked": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "ACCOUNT_BLOCKED",
                  "utr": null
                }
              },
              "Invalid IFSC fail": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "INVALID_IFSC_FAIL",
                  "utr": null
                }
              },
              "NRE account fail": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "NRE_ACCOUNT_FAIL",
                  "utr": null
                }
              }
            }
          }
        }
      },
      "BavV2GetStatusResponseSchema": {
        "description": "Success response for Get Details V2",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BAVV2GETValidationSuccessfulSchema"
            },
            "examples": {
              "Valid account": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": "BHARATHTEST GKUMARUT",
                  "bank_name": "YES BANK",
                  "city": "MUMBAI",
                  "branch": "SANTACRUZ, MUMBAI",
                  "micr": 400532038,
                  "name_match_score": "90.00",
                  "name_match_result": "GOOD_PARTIAL_MATCH",
                  "account_status": "VALID",
                  "account_status_code": "ACCOUNT_IS_VALID",
                  "utr": "404223241811"
                }
              },
              "Invalid account": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "INVALID_ACCOUNT_FAIL",
                  "utr": null
                }
              },
              "NRE account": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "NRE_ACCOUNT_FAIL",
                  "utr": null
                }
              },
              "Account blocked": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "ACCOUNT_BLOCKED",
                  "utr": null
                }
              },
              "Invalid IFSC": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "INVALID",
                  "account_status_code": "INVALID_IFSC_FAIL",
                  "utr": null
                }
              },
              "Insufficient balance": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "REJECTED",
                  "account_status_code": "INSUFFICIENT_BALANCE",
                  "utr": null
                }
              },
              "Fraud account": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "REJECTED",
                  "account_status_code": "FRAUD_ACCOUNT",
                  "utr": null
                }
              },
              "Verification blocked": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "REJECTED",
                  "account_status_code": "BAV_BLOCKED",
                  "utr": null
                }
              },
              "Concurrent request in progress": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "REJECTED",
                  "account_status_code": "VERIFICATION_ALREADY_UNDER_PROCESS",
                  "utr": null
                }
              },
              "Failed at bank": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "FAILED",
                  "account_status_code": "FAILED_AT_BANK",
                  "utr": null
                }
              },
              "IMPS mode fail": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "FAILED",
                  "account_status_code": "IMPS_MODE_FAIL",
                  "utr": null
                }
              },
              "Benerificary bank declined": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "FAILED",
                  "account_status_code": "BENE_BANK_DECLINED",
                  "utr": null
                }
              },
              "Connection timeout": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "FAILED",
                  "account_status_code": "CONNECTION_TIMEOUT",
                  "utr": null
                }
              },
              "NPCI unavailable": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "FAILED",
                  "account_status_code": "NPCI_UNAVAILABLE",
                  "utr": null
                }
              },
              "Source bank declined": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "FAILED",
                  "account_status_code": "SOURCE_BANK_DECLINED",
                  "utr": null
                }
              },
              "Beneficiary bank offline": {
                "value": {
                  "reference_id": 34,
                  "name_at_bank": null,
                  "bank_name": null,
                  "city": null,
                  "branch": null,
                  "micr": null,
                  "name_match_score": null,
                  "name_match_result": null,
                  "account_status": "FAILED",
                  "account_status_code": "BENEFICIARY_BANK_OFFLINE",
                  "utr": null
                }
              }
            }
          }
        }
      },
      "BulkBavV2GetStatusResponseSchema": {
        "description": "Success response for Get Bulk BAV Status V2",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BulkBAVV2ValidationSuccessfulSchema"
            },
            "examples": {
              "Fetch for single reference_id": {
                "value": {
                  "bulk_verification_id": "test-bulk-123",
                  "bulk_reference_id": 1234,
                  "entries": [
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": "John Doe",
                      "account_status": "VALID",
                      "account_status_code": "ACCOUNT_IS_VALID",
                      "utr": "404223241811",
                      "name_match_score": "100",
                      "name_match_result": "DIRECT_MATCH"
                    }
                  ]
                }
              },
              "Fetch all entries from bulkValidationId or bulk_reference_id": {
                "value": {
                  "bulk_verification_id": "test-bulk-123",
                  "bulk_reference_id": 1234,
                  "entries": [
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": "John Doe",
                      "account_status": "VALID",
                      "account_status_code": "ACCOUNT_IS_VALID",
                      "utr": "404223241811",
                      "name_match_score": "100",
                      "name_match_result": "DIRECT_MATCH"
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "INVALID",
                      "account_status_code": "INVALID_ACCOUNT_FAIL",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "INVALID",
                      "account_status_code": "NRE_ACCOUNT_FAIL",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "INVALID",
                      "account_status_code": "ACCOUNT_BLOCKED",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "INVALID",
                      "account_status_code": "INVALID_IFSC_FAIL",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "REJECTED",
                      "account_status_code": "FRAUD_ACCOUNT",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "REJECTED",
                      "account_status_code": "BAV_BLOCKED",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "REJECTED",
                      "account_status_code": "VERIFICATION_ALREADY_UNDER_PROCESS",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "FAILED_AT_BANK",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "IMPS_MODE_FAIL",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "IMPS_MODE_FAIL",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "BENE_BANK_DECLINED",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "CONNECTION_TIMEOUT",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "NPCI_UNAVAILABLE",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "SOURCE_BANK_DECLINED",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "FAILED",
                      "account_status_code": "BENEFICIARY_BANK_OFFLINE",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    },
                    {
                      "bank_account": 11020001772,
                      "ifsc": "HDFC0000001",
                      "name": "John Doe",
                      "phone": 7709736537,
                      "reference_id": 1097293,
                      "name_at_bank": null,
                      "account_status": "REJECTED",
                      "account_status_code": "INSUFFICIENT_BALANCE",
                      "utr": null,
                      "name_match_score": null,
                      "name_match_result": null
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "CinResponse": {
        "description": "Success response for retrieving the CIN information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CinResponseSchema"
            },
            "examples": {
              "VALID": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "status": "VALID",
                  "cin": "U72900KA2015PTC082988",
                  "company_name": "COMPANY NAME",
                  "registration_number": 82987,
                  "incorporation_date": "2015-09-23",
                  "cin_status": "ACTIVE",
                  "email": "abc@xyz.com",
                  "incorporation_country": "INDIA",
                  "director_details": [
                    {
                      "din": "07168822",
                      "name": "Frank Kelvin",
                      "dob": "1997-07-21",
                      "designation": "DIRECTOR",
                      "address": "ST BED KORAMANGALA, BANGALORE, KARNATAKA, INDIA, 566634"
                    },
                    {
                      "din": "07168826",
                      "name": "John Doe",
                      "dob": "1997-02-07",
                      "designation": "DIRECTOR",
                      "address": " GAUTAM NAGAR, NOIDA, UTTAR PRADESH, INDIA, 211361"
                    }
                  ]
                }
              },
              "INVALID": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "status": "INVALID",
                  "cin": "U72900KA2015PTC082981",
                  "company_name": null,
                  "registration_number": null,
                  "incorporation_date": null,
                  "cin_status": null,
                  "email": null,
                  "incorporation_country": null,
                  "director_details": []
                }
              }
            }
          }
        }
      },
      "CreateRequestResponse": {
        "description": "Success response for creating a reverse penny drop request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateRequestResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "verification_id": "90909710",
                  "ref_id": 3905,
                  "valid_upto": "2024-02-13T13:01:44.000Z",
                  "upi_link": "upi://pay?pa=success@upi&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=3905",
                  "gpay": "tez://upi/pay?pa=success@upi&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=3905",
                  "bhim": "bhim://upi://pay?pa=success@upi&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=3905",
                  "paytm": "paytmmp://pay?pa=success@upi&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=3905",
                  "phonepe": "phonepe://pay?pa=success@upi&pn=Cashfree&tn=BAV&am=1.00&cu=INR&tr=3905",
                  "qr_code": "iVBORw0KGgoAAAANSUhEUgAAAQAAAAEAAQMAAABmvDolAAAABlBMVEX///8AAABVwtN+AAACWUlEQVR42uyYy3E7LRDEe4sDR0IglM1sH+XECIUQOHKg1F/1sHrYCkDw/cXBZePfQSNmenoG3/M9/+RZSPKGtYUbVmApdrvqNk0EVAAb0MKBlXkLZN6EIkwFRJbNkzxJl5eyIh5YPduIQNmwNigKPc2cQCJZLY9YsZT5AGWU/lZxqC4U8lvKfRiw4vWphbOuLm8h1XiWt+oeHOjHJwiw64q9vMnp4IAyil1DqwmpKP1oAwHw+tUnVxYml3cm1QGkQ1MBWWq/urKTiGeB1B6Au2fUHAARDlX0zgRFWONJPqt7CmCpcKruXuLxCIm06m4DAUBEOJmcGpe7KkRp9aiLGYCFGdgrenFkSEitcbmH0k4BkGpkamr91B788WKbhwAURTh8clJ7z5tM5f4axegAEJ1alPm160JC+tK4ZgB8t2fy9vJDPaPSLyH9OLAwOx4Sy/PqvIi3kBB/ZgJ0wk0mhxUqZHjNKv4lo6YAokas1Lr1pLXfP0r7cWAhrWRN7ZuS3eddD9Ke3n58ALCAVnVem2sTYEbheH4PEwA+2xzoymWblVaBLxPKAIC9xXnNUtcYZf+76+QcgE0oNkaRLfa6LavPDyGdBHAFMpzyazYMRpuzjucgNgOAFlTdtDDNP+jt8vOxPg88JkLrvNE2Tafp0O/twdjAtWXFNdLedyCzAfd9VF8vyDZH89E/QwHXZq9sgOuffVdkb6u/GQB5e1o7qPFQO/h5EdJZAJpVswW97UDq21r+s0C/Rt9P2shtLeyYCriabp8IYXP37Y9/GB/4nu/5n53/AgAA///QrXLm5G9kaAAAAABJRU5ErkJggg=="
                }
              }
            }
          }
        }
      },
      "DigiLockerVerifyAccountResponse": {
        "description": "Success response for digilocker account detail.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigiLockerVerifyAccountResponseSchema"
            },
            "examples": {
              "AccountExistsWithMobile": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "mobile_number": 1234567899,
                  "status": "ACCOUNT_EXISTS",
                  "digilocker_id": "8aa626bf-34aa-5ffc-a123-f69207e129a7"
                }
              },
              "AccountExistsWithAadhaar": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "aadhaar_number": "XXXXXXXX3712",
                  "status": "ACCOUNT_EXISTS",
                  "digilocker_id": "8aa626bf-34aa-5ffc-a123-f69207e129a7"
                }
              },
              "AccountNotFound": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "mobile_number": 123456789,
                  "status": "ACCOUNT_NOT_FOUND"
                }
              }
            }
          }
        }
      },
      "DigiLockerVerificationCreateUrlResponse": {
        "description": "Success response for creating a DigiLocker URL for document verification",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigiLockerVerificationCreateUrlResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "url": "https://verification-test.cashfree.com/dgl/h7562ci7us0",
                  "status": "PENDING",
                  "document_requested": [
                    "AADHAAR",
                    "PAN",
                    "DRIVING_LICENSE"
                  ],
                  "redirect_url": "https://www.cashfree.com"
                }
              }
            }
          }
        }
      },
      "DigiLockerVerificationGetDocumentResponse": {
        "description": "Success response for retrieving the document from DigiLocker",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DigiLockerVerificationGetAadhaarDocumentResponseSchema"
                },
                {
                  "$ref": "#/components/schemas/DigiLockerVerificationGetPanDocumentResponseSchema"
                },
                {
                  "$ref": "#/components/schemas/DigiLockerVerificationGetDLDocumentResponseSchema"
                }
              ]
            },
            "examples": {
              "Aadhaar": {
                "value": {
                  "reference_id": 408,
                  "verification_id": "test001",
                  "status": "SUCCESS",
                  "uid": "xxxxxxxx5647",
                  "care_of": "S/O: Fakkirappa Dollin",
                  "dob": "02-02-1995",
                  "gender": "M",
                  "name": "Mallesh Fakkirappa Dollin",
                  "photo_link": "/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHB",
                  "split_address": {
                    "country": "India",
                    "dist": "Haveri",
                    "house": "Shri Kanaka Nilaya",
                    "landmark": "",
                    "pincode": "581115",
                    "po": "Ranebennur",
                    "state": "Karnataka",
                    "street": "Umashankar Nagar 1st Main 5th Cross",
                    "subdist": "Ranibennur",
                    "vtc": "Ranibennur"
                  },
                  "xml_file": "<xml file link with 48hrs expiry>"
                }
              },
              "Aadhaar Not Linked": {
                "value": {
                  "reference_id": 408,
                  "verification_id": "test001",
                  "status": "AADHAAR_NOT_LINKED",
                  "care_of": null,
                  "dob": null,
                  "gender": null,
                  "name": null,
                  "photo_link": null,
                  "split_address": {
                    "country": null,
                    "dist": null,
                    "house": null,
                    "landmark": null,
                    "pincode": null,
                    "po": null,
                    "state": null,
                    "street": null,
                    "subdist": null,
                    "vtc": null
                  },
                  "uid": null
                }
              },
              "Pan": {
                "value": {
                  "reference_id": 408,
                  "verification_id": "test001",
                  "status": "SUCCESS",
                  "pan": "ABCPV1234D",
                  "type": "Individual",
                  "dob": "02-02-1995",
                  "name_pan_card": "JOHN SNOW",
                  "gender": "Male",
                  "xml_file": "<xml file link with 48hrs expiry>"
                }
              },
              "Driving License": {
                "value": {
                  "reference_id": 408,
                  "verification_id": "test001",
                  "status": "SUCCESS",
                  "dl_number": "KA51201900089895",
                  "issued_at": "RTO,RAIPUR RTO",
                  "categories": [
                    {
                      "class_of_vehicle": "MCWG",
                      "description": "Motor Cycle with Gear(Non Transport)",
                      "issue_date": "03-11-2022"
                    }
                  ],
                  "issue_date": "03-11-2022",
                  "expiry_date": "16-09-2039",
                  "name": "JOHN DOE",
                  "dob": "02-02-1994",
                  "care_of": "JOHN SNOW",
                  "present_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                  "permanent_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                  "gender": "Male",
                  "photo_link": "/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHB",
                  "xml_file": "<xml file link with 48hrs expiry>"
                }
              }
            }
          }
        }
      },
      "DigiLockerVerificationGetStatusResponse": {
        "description": "Success response for retrieving the status of the DigiLocker document. verification request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigiLockerVerificationGetStatusResponseSchema"
            },
            "examples": {
              "Pending": {
                "value": {
                  "user_details": {},
                  "status": "PENDING",
                  "document_requested": [
                    "AADHAAR",
                    "PAN",
                    "DRIVING_LICENSE"
                  ],
                  "document_consent": [],
                  "verification_id": "ABC00123",
                  "reference_id": 12345
                }
              },
              "Authenticated": {
                "value": {
                  "user_details": {
                    "name": "John Doe",
                    "dob": "02-02-1995",
                    "gender": "M",
                    "eaadhaar": "Y",
                    "mobile": "9999999999"
                  },
                  "status": "AUTHENTICATED",
                  "document_requested": [
                    "AADHAAR",
                    "PAN",
                    "DRIVING_LICENSE"
                  ],
                  "document_consent": [
                    "AADHAAR",
                    "PAN"
                  ],
                  "verification_id": "ABC00123",
                  "reference_id": 12345
                }
              },
              "Expired": {
                "value": {
                  "user_details": {
                    "name": "John Doe",
                    "dob": "02-02-1995",
                    "gender": "M",
                    "eaadhaar": "Y",
                    "mobile": "9999999999"
                  },
                  "status": "EXPIRED",
                  "document_requested": [
                    "AADHAAR",
                    "PAN",
                    "DRIVING_LICENSE"
                  ],
                  "document_consent": [
                    "AADHAAR",
                    "PAN"
                  ],
                  "verification_id": "ABC00123",
                  "reference_id": 12345
                }
              },
              "eaadhaar is N": {
                "value": {
                  "user_details": {
                    "name": "John Doe",
                    "dob": "02-02-1995",
                    "gender": "M",
                    "eaadhaar": "N",
                    "mobile": "9999999999"
                  },
                  "status": "AUTHENTICATED",
                  "document_requested": [
                    "AADHAAR",
                    "PAN",
                    "DRIVING_LICENSE"
                  ],
                  "document_consent": null,
                  "verification_id": "ABC00123",
                  "reference_id": 12345
                }
              }
            }
          }
        }
      },
      "DrivingLicenseSuccessResponse": {
        "description": "Success response for retrieving the driving licence information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DrivingLicenseResponseSchema"
            },
            "examples": {
              "VALID": {
                "value": {
                  "verification_id": "69c5077c-d95a-48cb-b428-4ced025db671",
                  "reference_id": 76,
                  "dl_number": "KA51201900089895",
                  "dob": "1994-08-05",
                  "status": "VALID",
                  "badge_details": [
                    {
                      "badge_issue_date": null,
                      "badge_no": null,
                      "class_of_vehicle": [
                        "LMV"
                      ]
                    }
                  ],
                  "dl_validity": {
                    "non_transport": {
                      "to": "09/05/2039",
                      "from": "10/05/2019"
                    },
                    "hazardous_valid_till": null,
                    "transport": {
                      "to": null,
                      "from": null
                    },
                    "hill_valid_till": null
                  },
                  "details_of_driving_licence": {
                    "date_of_issue": "10/05/2019",
                    "date_of_last_transaction": null,
                    "status": null,
                    "last_transacted_at": null,
                    "name": "JOHN DOE",
                    "father_or_husband_name": "JOHN DOE",
                    "address_list": [
                      {
                        "complete_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                        "type": "permanent",
                        "split_address": {
                          "district": [
                            "BANGALORE"
                          ],
                          "state": [
                            [
                              "KARNATAKA",
                              "KA"
                            ]
                          ],
                          "city": [
                            "BELLANDUR"
                          ],
                          "pincode": "560103",
                          "country": [
                            "IN",
                            "IND",
                            "INDIA"
                          ],
                          "address_line": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103"
                        }
                      },
                      {
                        "complete_address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                        "type": "temporary",
                        "split_address": {
                          "district": [
                            "BANGALORE"
                          ],
                          "state": [
                            [
                              "KARNATAKA",
                              "KA"
                            ]
                          ],
                          "city": [
                            "BELLANDUR"
                          ],
                          "pincode": "560103",
                          "country": [
                            "IN",
                            "IND",
                            "INDIA"
                          ],
                          "address_line": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103"
                        }
                      }
                    ],
                    "address": "FLAT NO D-901 SUN,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103",
                    "split_address": {
                      "district": [
                        "BANGALORE"
                      ],
                      "state": [
                        ""
                      ],
                      "city": [
                        "BELLANDUR"
                      ],
                      "pincode": "560103",
                      "country": [
                        "IN",
                        "IND",
                        "INDIA"
                      ],
                      "address_line": "FLAT NO D-901 SUNCITY,BELLANDUR, BANGALORE SOUTH,BANGALORE,KA 560103"
                    },
                    "cov_details": []
                  }
                }
              },
              "INVALID": {
                "value": {
                  "verification_id": "69c5077c-d95a-48cb-b428-4ced025db676",
                  "reference_id": 78,
                  "dl_number": null,
                  "dob": null,
                  "status": "INVALID",
                  "badge_details": null,
                  "dl_validity": {
                    "non_transport": {
                      "to": null,
                      "from": null
                    },
                    "hazardous_valid_till": null,
                    "transport": {
                      "to": null,
                      "from": null
                    },
                    "hill_valid_till": null
                  },
                  "details_of_driving_licence": {
                    "date_of_issue": null,
                    "date_of_last_transaction": null,
                    "status": null,
                    "last_transacted_at": null,
                    "name": null,
                    "father_or_husband_name": null,
                    "address_list": null,
                    "address": null,
                    "split_address": {
                      "district": null,
                      "state": null,
                      "city": null,
                      "pincode": null,
                      "country": null,
                      "address_line": null
                    },
                    "cov_details": null
                  }
                }
              }
            }
          }
        }
      },
      "ESignVerificationCreateSignatureResponse": {
        "description": "Success response for creating an e-signature request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ESignVerificationCreateSignatureResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "status": "SUCCESS",
                  "verification_id": "ABC00123",
                  "reference_id": 33,
                  "document_id": 36,
                  "signing_link": "SIGNING_LINK"
                }
              }
            }
          }
        }
      },
      "ESignVerificationGetStatusResponse": {
        "description": "Success response for retrieving the status of an e-signature request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ESignVerificationGetStatusResponseSchema"
            },
            "examples": {
              "IN_PROGRESS": {
                "value": {
                  "status": "IN_PROGRESS",
                  "reference_id": 32,
                  "verification_id": "ESTestVERID34",
                  "document_id": 36,
                  "signers": [
                    {
                      "name": "John Doe",
                      "status": "SUCCESS",
                      "is_notified": true
                    },
                    {
                      "name": "Frank Kelvin",
                      "status": "SIGN_IN_PROGRESS",
                      "is_notified": true
                    }
                  ],
                  "signed_doc_url": "SIGNED_DOC_URL"
                }
              },
              "SUCCESS": {
                "value": {
                  "status": "SUCCESS",
                  "reference_id": 32,
                  "verification_id": "ABC00123",
                  "document_id": 36,
                  "signers": [
                    {
                      "name": "John Doe",
                      "status": "SUCCESS",
                      "is_notified": true
                    },
                    {
                      "name": "Frank Kelvin",
                      "status": "SUCCESS",
                      "is_notified": true
                    }
                  ],
                  "signed_doc_url": "SIGNED_DOC_URL"
                }
              },
              "EXPIRED": {
                "value": {
                  "status": "EXPIRED",
                  "reference_id": 32,
                  "verification_id": "ABC00123",
                  "document_id": 36,
                  "signers": [
                    {
                      "name": "John Doe",
                      "status": "EXPIRED",
                      "is_notified": true
                    },
                    {
                      "name": "Frank Kelvin",
                      "status": "RECEIVED",
                      "is_notified": false
                    }
                  ],
                  "signed_doc_url": ""
                }
              },
              "FAILURE": {
                "value": {
                  "status": "FAILURE",
                  "reference_id": 32,
                  "verification_id": "ABC00123",
                  "document_id": 36,
                  "signers": [
                    {
                      "name": "John Doe",
                      "status": "SUCCESS",
                      "is_notified": true
                    },
                    {
                      "name": "Frank Kelvin",
                      "status": "FAILURE",
                      "is_notified": false
                    }
                  ],
                  "signed_doc_url": "SIGNED_DOC_URL"
                }
              }
            }
          }
        }
      },
      "ESignVerificationUploadDocumentResponse": {
        "description": "Success response for uploading the document for e-signature",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ESignVerificationUploadDocumentResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "status": "SUCCESS",
                  "document_id": 21637861
                }
              }
            }
          }
        }
      },
      "FaceMatchSuccessResponse": {
        "description": "Success response for verifying facial features of your customer in two images",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FaceMatchResponseSchema"
            },
            "examples": {
              "Positive face match": {
                "value": {
                  "status": "SUCCESS",
                  "ref_id": 21637861,
                  "verification_id": "21637861",
                  "face_match_result": "YES",
                  "face_match_score": 0.95
                }
              },
              "Negative face match": {
                "value": {
                  "status": "SUCCESS",
                  "ref_id": 21637861,
                  "verification_id": "21637861",
                  "face_match_result": "NO",
                  "face_match_score": 0.1
                }
              },
              "Multiple face detected": {
                "value": {
                  "status": "MULTIPLE_FACE_DETECTED",
                  "ref_id": 21637861,
                  "verification_id": "21637861",
                  "face_match_result": "NO",
                  "face_match_score": 0
                }
              }
            }
          }
        }
      },
      "GetAadhaarOcrSuccessResponse": {
        "description": "Success response for verifying aadhaar information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AadhaarOcrResponseSchema"
            },
            "examples": {
              "Valid Aadhaar": {
                "value": {
                  "name": "JOHN DOE",
                  "father": "JOSH DOE",
                  "yob": "1997",
                  "gender": "Male",
                  "uid": "XXXX-XXXX-3717",
                  "pincode": "474009",
                  "address": "S / O : JOSH DOE, 202-parivar daser complex , dal  bazar , Gird , Gwalior , Lashkar City , Madhya Pradesh , 474019",
                  "state": " Madhya Pradesh",
                  "valid": true,
                  "status": "VALID",
                  "verification_id": "testverificationid",
                  "reference_id": "2345",
                  "message": "Aadhaar card is valid"
                }
              },
              "Invalid Aadhaar": {
                "value": {
                  "valid": false,
                  "status": "INVALID",
                  "verification_id": "testverificationid",
                  "reference_id": "2345",
                  "message": "Aadhaar card is invalid"
                }
              },
              "Rejected": {
                "value": {
                  "valid": false,
                  "status": "REJECTED",
                  "verification_id": "testverificationid",
                  "reference_id": "2345",
                  "message": "Insufficient balance"
                }
              },
              "Verification Failed": {
                "value": {
                  "valid": false,
                  "status": "VERIFICATION_FAILED",
                  "verification_id": "testverificationid",
                  "reference_id": "2345",
                  "message": "verification attempt failed"
                }
              }
            }
          }
        }
      },
      "GetPanBulkResponse": {
        "description": "Success response for verifying a large number of PAN information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetPanBulkResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "bulk_verification_id": 1123456,
                  "reference_id": 615,
                  "count": 2,
                  "entries": [
                    {
                      "pan": "ABCPV1234D",
                      "type": "Individual",
                      "reference_id": 1320143,
                      "name_provided": "John",
                      "registered_name": "John Snow",
                      "father_name": "",
                      "valid": true,
                      "message": "PAN verified successfully",
                      "name_match_score": 85,
                      "name_match_result": "GOOD_PARTIAL_MATCH",
                      "aadhaar_seeding_status": "Y",
                      "last_updated_at": "26/05/2017",
                      "name_pan_card": "JOHN SNOW",
                      "pan_status": "VALID",
                      "aadhaar_seeding_status_desc": "Aadhaar is linked to PAN"
                    },
                    {
                      "pan": "ABCPV1239K",
                      "type": "Individual",
                      "reference_id": 132014,
                      "name_provided": "Jone",
                      "registered_name": "Jone Doe",
                      "father_name": "",
                      "valid": true,
                      "message": "PAN verified successfully",
                      "name_match_score": 85,
                      "name_match_result": "GOOD_PARTIAL_MATCH",
                      "aadhaar_seeding_status": "Y",
                      "last_updated_at": "26/05/2019",
                      "name_pan_card": "JONE DOE",
                      "pan_status": "VALID",
                      "aadhaar_seeding_status_desc": "Aadhaar is linked to PAN"
                    }
                  ]
                }
              },
              "File not processed": {
                "value": {
                  "message": "File is being processed. Try again after some time.",
                  "bulk_verification_id": "31123",
                  "reference_id": 612,
                  "count": "0,",
                  "entries": []
                }
              }
            }
          }
        }
      },
      "GetPanOcrResponse": {
        "description": "Success response for getting the PAN OCR information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanOcrResponseSchema"
            },
            "examples": {
              "Valid PAN card": {
                "value": {
                  "name": "JOHN DOE",
                  "dob": "03/06/1993",
                  "father": "JOSH DOE",
                  "pan_type": "Individual",
                  "pan": "AUHPJ0671P",
                  "valid": true,
                  "age": "29",
                  "status": "VALID",
                  "reference_id": "106",
                  "verification_id": "76",
                  "message": "PAN card is valid"
                }
              },
              "Invalid PAN card": {
                "value": {
                  "valid": false,
                  "status": "INVALID",
                  "reference_id": "106",
                  "verification_id": "76",
                  "message": "PAN card is invalid"
                }
              },
              "Rejected": {
                "value": {
                  "valid": false,
                  "status": "REJECTED",
                  "reference_id": "106",
                  "verification_id": "76",
                  "message": "Insufficient balance"
                }
              },
              "Verification Failed": {
                "value": {
                  "valid": false,
                  "status": "VERIFICATION_FAILED",
                  "reference_id": "106",
                  "verification_id": "76",
                  "message": "verification attempt failed"
                }
              }
            }
          }
        }
      },
      "GetStatusRpdResponse": {
        "description": "Success response for retreiving the status of RPD request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetStatusRpdResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "bank_account": "026291800001191",
                  "ifsc": "YESB0000262",
                  "upi": "success@upi",
                  "name_at_bank": "BHARATHTEST GKUMARUT",
                  "verification_id": "3890AAB000",
                  "ref_id": "123",
                  "utr": "33",
                  "status": "SUCCESS",
                  "name_match_score": "10",
                  "name_match_result": "POOR_PARTIAL_MATCH",
                  "added_on": "2023-06-27T12:34:47+05:30",
                  "processed_on": "2023-06-27T18:15:02+05:30",
                  "penny_collected_on": "2022-10-27T12:40:10+05:30",
                  "reversal_status": "PENDING",
                  "account_type": "SAVINGS"
                }
              },
              "CREATED": {
                "value": {
                  "verification_id": "3890AAB000",
                  "ref_id": "213265",
                  "status": "CREATED",
                  "added_on": "2024-06-19T10:56:38+05:30",
                  "processed_on": "2024-06-19T10:56:38+05:30",
                  "account_type": ""
                }
              },
              "EXPIRED": {
                "value": {
                  "verification_id": "3890AAB000",
                  "ref_id": "100",
                  "status": "EXPIRED",
                  "name_match_score": "0",
                  "added_on": "2023-11-09T08:21:06+05:30",
                  "processed_on": "2023-11-09T14:01:06+05:3"
                }
              },
              "FAILURE": {
                "value": {
                  "verification_id": "3890AAB000",
                  "ref_id": "100",
                  "status": "FAILURE",
                  "name_match_score": "0",
                  "added_on": "2023-11-09T08:21:06+05:30",
                  "processed_on": "2023-11-09T14:01:06+05:30"
                }
              }
            }
          }
        }
      },
      "GetVerifyPanResponse": {
        "description": "Success response for verifiying PAN information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetVerifyPanResponseSchema"
            },
            "examples": {
              "Valid PAN Individual": {
                "value": {
                  "pan": "ABCPV1234D",
                  "type": "Individual",
                  "reference_id": 161,
                  "name_provided": "JOHN DOE",
                  "registered_name": "JOHN DOE",
                  "valid": true,
                  "message": "PAN verified successfully",
                  "name_match_score": 100,
                  "name_match_result": "DIRECT_MATCH",
                  "aadhaar_seeding_status": "Y",
                  "last_updated_at": "01/01/2019",
                  "name_pan_card": "JOHN DOE",
                  "pan_status": "VALID",
                  "aadhaar_seeding_status_desc": "Aadhaar is linked to PAN"
                }
              },
              "Valid PAN Business": {
                "value": {
                  "pan": "AAOCS4553K",
                  "type": "Company",
                  "reference_id": 1318808,
                  "name_provided": "saanchi",
                  "registered_nam": "SAANCHI ENERGY PRIVATE LIMITED",
                  "valid": true,
                  "message": "PAN verified successfully",
                  "name_match_score": 60,
                  "name_match_result": "MODERATE_PARTIAL_MATCH",
                  "aadhaar_seeding_status": "NA",
                  "last_updated_at": "25/05/2017",
                  "name_pan_card": null,
                  "pan_status": "VALID",
                  "aadhaar_seeding_status_desc": "Aadhar Seeding is not Applicable"
                }
              },
              "Invalid PAN": {
                "value": {
                  "pan": "ABCPV1234D",
                  "reference_id": 17974435,
                  "name_provided": null,
                  "valid": false,
                  "message": "Invalid PAN",
                  "name_match_score": 0,
                  "name_match_result": "-"
                }
              }
            }
          }
        }
      },
      "GstinSuccessResponse": {
        "description": "Success response for retrieving GSTIN information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GstinResponseSchema"
            },
            "examples": {
              "GSTIN Exists": {
                "value": {
                  "reference_id": 19,
                  "GSTIN": "29AAICP2912R1ZR",
                  "legal_name_of_business": "UJJIVAN SMALL FINANCE BANK LIMITED",
                  "trade_name_of_business": "UJJIVAN SMALL FINANCE BANK",
                  "center_jurisdiction": "I-A RANGE",
                  "state_jurisdiction": "GUWAHATI - A - 1",
                  "date_of_registration": "2017-09-30",
                  "constitution_of_business": "Public Limited Company",
                  "taxpayer_type": "Regular",
                  "gst_in_status": "Active",
                  "last_update_date": "2022-03-01",
                  "nature_of_business_activities": [
                    "Retail Business",
                    "Supplier of Services",
                    "Recipient of Goods or Services",
                    "Office / Sale Office",
                    "Others"
                  ],
                  "principal_place_address": "First Floor 3512-DISPUR Prithivi Mansion opp. KFC building G.S. Road, Lachit Nagar Assam 781007",
                  "principal_place_split_address": {
                    "building_name": "Prithivi Mansion",
                    "street": "G.S. Road",
                    "location": "Lachit Nagar",
                    "building_number": "3512-DISPUR",
                    "district": "Guwahati",
                    "state": "Assam",
                    "city": "Dispur",
                    "flat_number": "First Floor",
                    "latitude": "26.1445",
                    "longitude": "91.7362",
                    "pincode": "781007"
                  },
                  "additional_address_array": [
                    {
                      "address": "Mirza Santipur NH-37 Dist-Kamrup Rural PS-Palashbari, PO  Mirza Kamrup Assam 781125",
                      "split_address": {
                        "building_name": "",
                        "street": "NH-37",
                        "location": "Santipur, Mirza",
                        "building_number": "",
                        "district": "Kamrup Rural",
                        "state": "Assam",
                        "city": "Palashbari",
                        "flat_number": "",
                        "latitude": "26.0926",
                        "longitude": "91.5069",
                        "pincode": "781125"
                      }
                    },
                    {
                      "address": "N.A.C.C.I. Foundation 3559-Tezpur CHAMBER BHAWAN Binjraj Road, P. o. and P.S. - Tezpur, Dist. Binjraj Road, P. o. and P.S. - Tezpur, Dist. Sonitpur Assam 784154",
                      "split_address": {
                        "building_name": "CHAMBER BHAWAN",
                        "street": "Binjraj Road",
                        "location": "Tezpur",
                        "building_number": "3559-Tezpur",
                        "district": "Sonitpur",
                        "state": "Assam",
                        "city": "Tezpur",
                        "flat_number": "",
                        "latitude": "26.6338",
                        "longitude": "92.8006",
                        "pincode": "784154"
                      }
                    }
                  ],
                  "valid": true,
                  "message": "GSTIN Exists"
                }
              },
              "GSTIN Doesn't Exist": {
                "value": {
                  "reference_id": 20,
                  "GSTIN": "22ABCDE1234F1Z5",
                  "message": "GSTIN Doesn't Exist"
                }
              }
            }
          }
        }
      },
      "IpVerification404Response": {
        "description": "IP not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v2ErrorResponse404SchemaIpVerification"
            }
          }
        }
      },
      "IpVerificationResponse": {
        "description": "IP verified successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IpVerificationResponseSchema"
            }
          }
        }
      },
      "Liveliness200Response": {
        "description": "Success response for checking the liveliness of your customer",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Liveliness200ResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "reference_id": 1357,
                  "verification_id": "123456",
                  "status": "SUCCESS",
                  "liveliness": true,
                  "score": 0.95
                }
              },
              "FACE_NOT_DETECTED": {
                "value": {
                  "reference_id": 1357,
                  "verification_id": "123456",
                  "status": "FACE_NOT_DETECTED",
                  "liveliness": false,
                  "score": 0
                }
              },
              "MULTIPLE_FACE_DETECTED": {
                "value": {
                  "reference_id": 1357,
                  "verification_id": "123456",
                  "status": "MULTIPLE_FACE_DETECTED",
                  "liveliness": false,
                  "score": 0
                }
              }
            }
          }
        }
      },
      "Mobile360Response": {
        "description": "Success response for retrieving the list of information associated with the mobile number",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mobile360ResponseSchema"
            },
            "examples": {
              "Success": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "VALID",
                  "name": "John Doe",
                  "vpa": "6666666666@upi",
                  "ifsc": "ICIC0006567",
                  "ifsc_details": {
                    "bank": "Bank Name",
                    "neft": "Live",
                    "imps": "Live",
                    "rtgs": "Live",
                    "upi": "Live",
                    "address": "GROUND FLOOR, 123, ABC CIRCLE, XYZ MAIN ROAD, BANGALORE - 560098",
                    "city": "BANGALORE",
                    "state": "KARNATAKA",
                    "branch": "BANGALORE - RAJA RAJESHWARI NAGAR BRANCH",
                    "category": "SUB_MEMBER",
                    "swift_code": "ABCDINBBDCL",
                    "micr": 560751026,
                    "nbin": 1234
                  }
                }
              },
              "No Data Found": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 1358,
                  "status": "INVALID",
                  "name": null,
                  "vpa": null,
                  "ifsc": null,
                  "ifsc_details": {
                    "bank": null,
                    "neft": null,
                    "imps": null,
                    "rtgs": null,
                    "upi": null,
                    "address": null,
                    "city": null,
                    "state": null,
                    "branch": null,
                    "category": null,
                    "swift_code": null,
                    "micr": null,
                    "nbin": null
                  }
                }
              }
            }
          }
        }
      },
      "Mobile360VerifyOtpResponse": {
        "description": "Response for Mobile360 Verify OTP.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mobile360VerifyOtpResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "verification_id": "test_verification_id_99",
                  "reference_id": 1234567,
                  "status": "SUCCESS",
                  "personal_details": {
                    "full_name": "JOHN SNOW",
                    "gender": "MALE",
                    "total_income": 1000000,
                    "occupation": "Software Engineer",
                    "age": 30,
                    "dob": "1996-10-02",
                    "relatives_details": [
                      {
                        "relation": "FATHER",
                        "relative_name": "Alice Doe"
                      }
                    ]
                  },
                  "phone_numbers": [
                    {
                      "type": "HOME",
                      "phone": "9999996655",
                      "linked_to": "CREDIT"
                    },
                    {
                      "type": "MOBILE",
                      "phone": "9999999999",
                      "linked_to": "PAN"
                    },
                    {
                      "type": "MOBILE",
                      "phone": "9988775566",
                      "linked_to": "UAN"
                    }
                  ],
                  "emails": [
                    {
                      "email": "johnsnow@example.com",
                      "linked_to": "CREDIT"
                    },
                    {
                      "email": "abc@gmail.com",
                      "linked_to": "PAN"
                    },
                    {
                      "email": "johndoe@gmail.com",
                      "linked_to": "UAN"
                    }
                  ],
                  "passport_details": [
                    {
                      "passport_number": "PA123456",
                      "linked_to": "CREDIT"
                    }
                  ],
                  "ration_card_details": [
                    {
                      "ration_card_number": "TN1234567890",
                      "linked_to": "CREDIT"
                    }
                  ],
                  "voter_details": [
                    {
                      "voter_id": "UAI4574761",
                      "linked_to": "CREDIT"
                    }
                  ],
                  "pan_details": [
                    {
                      "pan_number": "ABCPV1234D",
                      "metadata": {
                        "registered_name": "JOHN SNOW",
                        "name_pan_card": "JOHN SNOW",
                        "type": "Individual or Person",
                        "aadhaar_linked": true
                      }
                    }
                  ],
                  "driving_license_details": [
                    {
                      "driving_license_number": "KA0120198900984",
                      "linked_to": "CREDIT"
                    }
                  ],
                  "aadhaar_details": [
                    {
                      "masked_aadhaar_number": "XXXXXXXX8848",
                      "linked_to": "PAN"
                    }
                  ],
                  "addresses": [
                    {
                      "address": "Flat 404, Green Towers, MG Road, Mumbai 400001",
                      "type": "Primary",
                      "state": "MAHARASTHRA",
                      "pincode": "400001",
                      "city": "Mumbai",
                      "street": " MG Road",
                      "country": "India",
                      "linked_to": "PAN"
                    }
                  ],
                  "bank_account_details": [
                    {
                      "bank_account": "20329012345",
                      "ifsc": "SBIN0012345",
                      "bank_address": "STATE BANK OF INDIA,KATANGA BENGALURU",
                      "linked_to": "CREDIT"
                    }
                  ],
                  "employment_details": {
                    "uan": [
                      {
                        "uan": "200123456789",
                        "member_id": "XYZAB00123450000005678",
                        "establishment_id": "XYZAB0012345000",
                        "exit_date": null,
                        "joining_date": "2018-05-10",
                        "leave_reason": null,
                        "establishment_name": "ABC TECHNOLOGIES PVT LTD",
                        "uan_linked_aadhaar": true
                      }
                    ],
                    "recent_employment_details": {
                      "employee_details": {
                        "member_id": "XYZAB00123450000005678",
                        "exit_date": null,
                        "joining_date": "2018-05-10",
                        "uan": "200123456789",
                        "epfo": {
                          "recent": true,
                          "name_unique": true,
                          "pf_filings_details": true
                        },
                        "employed": true,
                        "employee_name_match": true,
                        "exit_date_marked": false
                      },
                      "employer_details": {
                        "establishment_id": "XYZAB0012345000",
                        "establishment_name": "ABC TECHNOLOGIES PVT LTD",
                        "setup_date": "2012-03-15",
                        "ownership_type": "Private Limited Company",
                        "employer_confidence_score": 85,
                        "employer_name_match": true,
                        "pf_filing_details": [
                          {
                            "total_amount": 32145678,
                            "employees_count": 5678,
                            "wage_month": "JAN-25"
                          },
                          {
                            "total_amount": 31456789,
                            "employees_count": 5600,
                            "wage_month": "DEC-24"
                          },
                          {
                            "total_amount": 30987654,
                            "employees_count": 5500,
                            "wage_month": "NOV-24"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "No Data Found": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 123456,
                  "status": "DETAILS_NOT_FOUND",
                  "personal_details": null,
                  "phone_numbers": [],
                  "emails": [],
                  "passport_details": [],
                  "bank_account_details": [],
                  "aadhaar_details": [],
                  "ration_card_details": [],
                  "driving_license_details": [],
                  "voter_details": [],
                  "pan_details": [],
                  "addresses": [],
                  "employment_details": {}
                }
              }
            }
          }
        }
      },
      "Mobile360SendOtpResponse": {
        "description": "Response for Mobile360 Send OTP",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mobile360SendOtpResponseSchema"
            },
            "examples": {
              "Success": {
                "value": {
                  "verification_id": "ABC00122",
                  "mobile_number": "9999999999",
                  "status": "OTP_GENERATED",
                  "reference_id": 123454,
                  "name": "John Doe",
                  "notification_modes": [
                    "SMS",
                    "WHATSAPP"
                  ]
                }
              }
            }
          }
        }
      },
      "NameMatchResponse": {
        "description": "Success response for verifing name variations",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NameMatchResponseSchema"
            },
            "examples": {
              "Direct Match": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "name_1": "JOHN DOE",
                  "name_2": "JOHN DOE",
                  "status": "SUCCESS",
                  "score": 1,
                  "reason": "The given names are identical"
                }
              },
              "Good Partial Match": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "name_1": "JOHN DOE",
                  "name_2": "JOHN",
                  "status": "SUCCESS",
                  "score": 0.85,
                  "reason": "Word missing"
                }
              },
              "Moderate Partial Match": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "name_1": "JOHN DOE",
                  "name_2": "J DO",
                  "status": "SUCCESS",
                  "score": 0.7,
                  "reason": "Initials penalty, Word missing"
                }
              },
              "Poor Partial Match": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "name_1": "JOHN DOE",
                  "name_2": "DO",
                  "status": "SUCCESS",
                  "score": 0.38,
                  "reason": "Word missing"
                }
              },
              "No Match": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 12345,
                  "name_1": "JOHN DOE",
                  "name_2": "TOM",
                  "status": "SUCCESS",
                  "score": 0.14,
                  "reason": "The given names are different"
                }
              }
            }
          }
        }
      },
      "OfflineAadhaarSendOtpResponse": {
        "description": "Success response for generating the OTP for offline aadhaar verification",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OfflineAadhaarSendOtpResponseSchema"
            },
            "examples": {
              "OTP Generated": {
                "value": {
                  "status": "SUCCESS",
                  "message": "OTP sent successfully",
                  "ref_id": 21637861
                }
              },
              "Mobile Not Linked": {
                "value": {
                  "status": "SUCCESS",
                  "message": "Aadhaar not linked to mobile number",
                  "ref_id": 21637861
                }
              },
              "Invalid Aadhaar": {
                "value": {
                  "ref_id": 208,
                  "status": "INVALID",
                  "message": "Invalid Aadhaar Card"
                }
              }
            }
          }
        }
      },
      "OfflineAadhaarVerifyOtpResponse": {
        "description": "Success response for submitting the generated OTP for offline aadhaar verification",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OfflineAadhaarVerifyOtpResponseSchema"
            },
            "examples": {
              "VALID": {
                "value": {
                  "ref_id": "70471",
                  "status": "VALID",
                  "message": "Aadhaar Card Exists",
                  "care_of": "S/O: Fakkirappa Dollin",
                  "address": "Shri Kanaka Nilaya,,Umashankar Nagar 1st Main 5th Cross,Ranebennur,Haveri-Karnataka,India",
                  "dob": "02-02-1995",
                  "email": "",
                  "gender": "M",
                  "name": "Mallesh Fakkirappa Dollin",
                  "split_address": {
                    "country": "India",
                    "dist": "Haveri",
                    "house": "Shri Kanaka Nilaya",
                    "landmark": "",
                    "pincode": 581115,
                    "po": "Ranebennur",
                    "state": "Karnataka",
                    "street": "Umashankar Nagar 1st Main 5th Cross",
                    "subdist": "Ranibennur",
                    "vtc": "Ranibennur",
                    "locality": "Pritam Pura"
                  },
                  "year_of_birth": 1995,
                  "mobile_hash": "ed189eb73247cb90b769e7e8d7dfd2efa4cd6a5ec27602f5d2721c035266568c",
                  "photo_link": "<base64 encoded image>",
                  "share_code": "1234",
                  "xml_file": "<xml file link with 48hrs expiry>"
                }
              }
            }
          }
        }
      },
      "PanAdvanceResponse": {
        "description": "Success response for retrieving the PAN information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanAdvanceResponseSchema"
            },
            "examples": {
              "Valid PAN": {
                "value": {
                  "status": "VALID",
                  "message": "PAN verified successfully",
                  "reference_id": 21637861,
                  "verification_id": "testverificationId",
                  "name_provided": "JOHN SNOW",
                  "pan": "LMNCD8010T",
                  "registered_name": "JOHN SNOW",
                  "name_pan_card": "JOHN SNOW",
                  "first_name": "JOHN",
                  "last_name": "SNOW",
                  "type": "Individual or Person",
                  "gender": "Male",
                  "date_of_birth": "27-10-2004",
                  "masked_aadhaar_number": "XXXXXXXX8848",
                  "email": "abc@gmail.com",
                  "mobile_number": "99999999999",
                  "aadhaar_linked": true,
                  "address": {
                    "full_address": "Quarter - A, Block - B Sample Area, ABC Street 700011 KOLKATA WEST BENGAL INDIA",
                    "street": "ABC Street",
                    "city": "KOLKATA",
                    "state": "WEST BENGAL",
                    "pincode": 700011,
                    "country": "India"
                  }
                }
              },
              "Invalid PAN": {
                "value": {
                  "status": "INVALID",
                  "message": "Invalid PAN",
                  "reference_id": 21637861,
                  "verification_id": "testverificationId",
                  "name_provided": "JOHN SNOW",
                  "pan": "LMNCD8010T"
                }
              }
            }
          }
        }
      },
      "PanBulkResponse": {
        "description": "Success response for verifying a large number of PAN information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PostPanBulkResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "reference_id": 612,
                  "message": "Request accepted. You can check the status after some time."
                }
              }
            }
          }
        }
      },
      "PanLiteResponse": {
        "description": "Success response for retrieving PAN Lite information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanLiteResponseSchema"
            },
            "examples": {
              "Valid": {
                "value": {
                  "verification_id": "test001",
                  "reference_id": 21637861,
                  "pan": "ABCTY1234D",
                  "name": "John Doe",
                  "dob": "1993-06-30",
                  "name_match": "Y",
                  "dob_match": "Y",
                  "pan_status": "E",
                  "status": "VALID",
                  "aadhaar_seeding_status": "Y",
                  "aadhaar_seeding_status_desc": "Aadhaar is linked to PAN"
                }
              },
              "Invalid Pan": {
                "value": {
                  "verification_id": "test001",
                  "reference_id": 21637861,
                  "pan": "DEFPV0126D",
                  "name": "John Doe",
                  "dob": "1993-06-30",
                  "name_match": null,
                  "dob_match": null,
                  "pan_status": "N",
                  "status": "INVALID",
                  "aadhaar_seeding_status": null,
                  "aadhaar_seeding_status_desc": null
                }
              },
              "Deactivated Pan": {
                "value": {
                  "verification_id": "test001",
                  "reference_id": "21637861",
                  "pan": "ABCDX1234F",
                  "name": "John Doe",
                  "dob": "1993-06-30",
                  "name_match": null,
                  "dob_match": null,
                  "pan_status": "X",
                  "status": "INVALID",
                  "aadhaar_seeding_status": null,
                  "aadhaar_seeding_status_desc": null
                }
              },
              "Fake Pan": {
                "value": {
                  "verification_id": "test001",
                  "reference_id": "21637861",
                  "pan": "ABCDF1234F",
                  "name": "John Doe",
                  "dob": "1993-06-30",
                  "name_match": null,
                  "dob_match": null,
                  "pan_status": "F",
                  "status": "INVALID",
                  "aadhaar_seeding_status": null,
                  "aadhaar_seeding_status_desc": null
                }
              },
              "Deleted Pan": {
                "value": {
                  "verification_id": "test001",
                  "reference_id": "21637861",
                  "pan": "ABCDD1234F",
                  "name": "John Doe",
                  "dob": "1993-06-30",
                  "name_match": null,
                  "dob_match": null,
                  "pan_status": "D",
                  "status": "INVALID",
                  "aadhaar_seeding_status": null,
                  "aadhaar_seeding_status_desc": null
                }
              }
            }
          }
        }
      },
      "PanOcrResponse": {
        "description": "Success response for verifiying the PAN information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanOcrResponseSchema"
            },
            "examples": {
              "Valid PAN card": {
                "value": {
                  "name": "JOHN DOE",
                  "dob": "03/06/1993",
                  "father": "JOSH DOE",
                  "pan_type": "Individual",
                  "pan": "AUHPJ0671P",
                  "valid": true,
                  "age": "29",
                  "status": "VALID",
                  "reference_id": "106",
                  "verification_id": "76",
                  "message": "PAN card is valid"
                }
              },
              "Invalid PAN card": {
                "value": {
                  "status": "INVALID",
                  "reference_id": "106",
                  "verification_id": "76",
                  "message": "PAN card is Invalid"
                }
              }
            }
          }
        }
      },
      "PanToGstinResponse": {
        "description": "Success response for retrieving the list of GSTIN associated with the entered PAN",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PanToGstinResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "reference_id": 1358,
                  "verification_id": "testverificationid",
                  "status": "SUCCESS",
                  "pan": "AZJPG7110R",
                  "gstin_list": [
                    {
                      "gstin": "29AAFCD5862R1ZR",
                      "status": "ACTIVE",
                      "state": "KARNATAKA"
                    },
                    {
                      "gstin": "27AAFCD5862R1ZV",
                      "status": "ACTIVE",
                      "state": "MAHARASHTRA"
                    }
                  ]
                }
              },
              "FAILURE": {
                "value": {
                  "reference_id": 1358,
                  "verification_id": "testverificationid",
                  "status": "GSTIN_NOT_FOUND",
                  "pan": "AZJPG7110R",
                  "gstinList": []
                }
              }
            }
          }
        }
      },
      "PassportVerificationResponse": {
        "description": "Success response for retrieveing passport information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PassportVerificationResponseSchema"
            },
            "examples": {
              "Valid Passport": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 1358,
                  "status": "VALID",
                  "file_number": "PA1079341954215",
                  "name": "John doe",
                  "dob": "1998-12-31",
                  "application_type": "NORMAL",
                  "application_received_date": "2003-12-31"
                }
              },
              "Invalid Passport": {
                "value": {
                  "verification_id": "ABC00123",
                  "reference_id": 1358,
                  "status": "INVALID",
                  "file_number": "PA0379341954215",
                  "name": null,
                  "dob": null,
                  "application_type": null,
                  "application_received_date": null
                }
              }
            }
          }
        }
      },
      "Response400": {
        "description": "Validation error because x-client-id is missing in the request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Credentials Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "Test Credentials in Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400AadhaarMaskingresponse": {
        "description": "Bad request for Aadhaar Masking API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/x-client-id_missing"
            },
            "examples": {
              "X-ClientId-Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Image-missing-in-the-request": {
                "$ref": "#/components/examples/ImageMissingInRequest"
              },
              "Invalid-Verification-ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Mobile360SendOtp": {
        "description": "Validation errors for Mobile360",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Invalid Mobile Number": {
                "value": {
                  "type": "validation_error",
                  "code": "mobile_number_value_invalid",
                  "message": "Mobile number entered is invalid."
                }
              },
              "Mobile Number Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "mobile_number_missing",
                  "message": "mobile_number is missing in the request."
                }
              },
              "Notification Modes Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "notification_modes_missing",
                  "message": "notification_modes is missing in the request."
                }
              },
              "Special Character in Name": {
                "value": {
                  "type": "validation_error",
                  "code": "name_value_invalid",
                  "message": "name should only contains alphanumeric, space, dot and hyphen."
                }
              },
              "Name length exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "name_length_exceeded",
                  "message": "Name can include a maximum of 100 characters."
                }
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Mobile360VerifyOtp": {
        "description": "Validation errors for Mobile360",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "OTP Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "otp_empty",
                  "message": "otp is missing in the request."
                }
              },
              "OTP Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "otp_value_invalid",
                  "message": "provided otp is not valid."
                }
              },
              "OTP Expired": {
                "value": {
                  "type": "validation_error",
                  "code": "otp_expired",
                  "message": "provided otp is expired"
                }
              },
              "Max Attempt Expired": {
                "value": {
                  "type": "validation_error",
                  "code": "otp_retry_limit_exhaust",
                  "message": "verify otp retry limit is exhausted"
                }
              }
            }
          }
        }
      },
      "Response400AdvanceEmployment": {
        "description": "Validation errors for Advanced Employment API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid input combination": {
                "$ref": "#/components/examples/InvalidInputCombination"
              },
              "Invalid Verification ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400BulkPan": {
        "description": "Validation errors for Verify Bulk PAN API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "No entries to validate": {
                "$ref": "#/components/examples/NoEntriesToValidate"
              },
              "Bulk verification id not present": {
                "$ref": "#/components/examples/BulkVerificationIdNotPresent"
              },
              "Bulk verification id InvalidRefId": {
                "$ref": "#/components/examples/BulkVerificationIdInvalidRefId"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Cin": {
        "description": "Validation errors for Verify Cin API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Cin Missing": {
                "$ref": "#/components/examples/CinMissing"
              },
              "Invalid Cin": {
                "$ref": "#/components/examples/InvalidCin"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400CreateRequest": {
        "description": "Validation errors for Create Request API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid Verification ID": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_verification_id",
                  "message": "verification_id already exists"
                }
              },
              "Verification Id Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400DigiLockerVerifyAccount": {
        "description": "Validation errors for Digilocker Verify Account API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Verification Id character limit exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_length_exceeded",
                  "message": "verification_id can include a maximum of 50 characters."
                }
              },
              "Invalid Mobile Number": {
                "value": {
                  "type": "validation_error",
                  "code": "mobile_number_value_invalid",
                  "message": "Mobile number entered is invalid."
                }
              },
              "Invalid Aadhaar Format": {
                "value": {
                  "type": "validation_error",
                  "code": "aadhaar_invalid",
                  "message": "Please enter aadhaar number in numeric format"
                }
              },
              "Parameter Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "provide mobile_number or aadhaar_number."
                }
              }
            }
          }
        }
      },
      "Response400DigiLockerVerificationCreateUrl": {
        "description": "Validation errors for Create DigiLocker URL API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Document Requested Missing": {
                "$ref": "#/components/examples/DocumentRequestedMissing"
              },
              "Document Requested Empty": {
                "$ref": "#/components/examples/DocumentRequestedEmpty"
              },
              "Invalid Document Requested": {
                "$ref": "#/components/examples/InvalidDocumentRequested"
              },
              "Duplicate Document Requested": {
                "$ref": "#/components/examples/DuplicateDocumentRequested"
              },
              "Invalid Redirection Url without https prefix": {
                "$ref": "#/components/examples/InvalidRedirectionUrlWithoutHttpsPrefix"
              },
              "Invalid Redirection Url with https prefix": {
                "$ref": "#/components/examples/InvalidRedirectionUrlWithHttpsPrefix"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400DigiLockerVerificationGetDocument": {
        "description": "Validation errors for Get DigiLocker Document API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Request Params Missing": {
                "$ref": "#/components/examples/RequestParamsMissing"
              },
              "Invalid Document_Type field": {
                "$ref": "#/components/examples/InvalidDocument_TypeField"
              },
              "DigiLocker Url Expired": {
                "$ref": "#/components/examples/DigiLockerUrlExpired"
              },
              "DigiLocker Session Expired": {
                "$ref": "#/components/examples/DigiLockerSessionExpired"
              },
              "DigiLocker Consent Not Granted": {
                "$ref": "#/components/examples/DigiLockerConsentNotGranted"
              },
              "User Detail Mismatch": {
                "$ref": "#/components/examples/UserDetailMismatch"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400DigiLockerVerificationGetStatus": {
        "description": "Validation errors for Get DigiLocker Verification Status API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Request Params Missing": {
                "$ref": "#/components/examples/RequestParamsMissing"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400DrivingLicense": {
        "description": "Validation errors for Verify Driving Licence API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid Driving license": {
                "$ref": "#/components/examples/InvalidDrivingLicense"
              },
              "Invalid Dob": {
                "$ref": "#/components/examples/InvalidDob"
              },
              "Dob missing": {
                "$ref": "#/components/examples/DobMissing"
              },
              "Verification Id Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verifcation Id character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "Invalid Verification ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400ESignVerificationCreateSign": {
        "description": "Validation errors for Create E-Sign Request API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Document ID Missing": {
                "$ref": "#/components/examples/DocumentIDMissing"
              },
              "Invalid Document ID": {
                "$ref": "#/components/examples/InvalidDocumentID"
              },
              "Sign Position Small": {
                "$ref": "#/components/examples/SignPositionSmall"
              },
              "Sign Position Large": {
                "$ref": "#/components/examples/SignPositionLarge"
              },
              "Document ID Expired": {
                "$ref": "#/components/examples/DocumentIDExpired"
              },
              "Notification Modes Missing": {
                "$ref": "#/components/examples/NotificationModesMissing"
              },
              "Invalid Notification Modes": {
                "$ref": "#/components/examples/InvalidNotificationModes"
              },
              "Invalid Aadhaar Details Length": {
                "$ref": "#/components/examples/InvalidAadhaarDetailsLength"
              },
              "Invalid Aadhaar Details Type": {
                "$ref": "#/components/examples/InvalidAadhaarDetailsType"
              },
              "Number Of Signers Exceeded Limit": {
                "$ref": "#/components/examples/NumberOfSignersExceededLimit"
              },
              "AuthType Missing": {
                "$ref": "#/components/examples/AuthTypeMissing"
              },
              "Expiry In Days Missing": {
                "$ref": "#/components/examples/ExpiryInDaysMissing"
              },
              "Signers Missing": {
                "$ref": "#/components/examples/SignersMissing"
              },
              "Duplicate Signers Sequence": {
                "$ref": "#/components/examples/DuplicateSignersSequence"
              },
              "Invalid Signers Sequence": {
                "$ref": "#/components/examples/InvalidSignersSequence"
              },
              "Multiple Signer Not Allowed without Email Notification Mode": {
                "$ref": "#/components/examples/MultipleSignerNotAllowedWithoutEmailNotificationMode"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400ESignVerificationGetStatus": {
        "description": "Validation errors for Get E-Sign Status API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Request Params Missing": {
                "$ref": "#/components/examples/RequestParamsMissing"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400ESignVerificationUploadDoc": {
        "description": "Validation errors for Upload Document For E-Sign API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid File Format": {
                "$ref": "#/components/examples/InvalidFileFormatPDF"
              },
              "Empty Document field": {
                "$ref": "#/components/examples/EmptyDocumentField"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400FaceMatch": {
        "description": "Validation errors for Face Match API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "File size exceeded": {
                "$ref": "#/components/examples/FileSizeExceeded"
              },
              "Invalid file format": {
                "$ref": "#/components/examples/InvalidFileFormatImage"
              },
              "First image is not uploaded": {
                "$ref": "#/components/examples/FirstImageIsNotUploaded"
              },
              "Second image is not uploaded": {
                "$ref": "#/components/examples/SecondImageIsNotUploaded"
              },
              "Verifcation Id character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "Invalid Verification ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400GetBulkPan": {
        "description": "Validation errors for Get Bulk PAN Status API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Reference Id Missing": {
                "$ref": "#/components/examples/ReferenceIdMissing"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400GetOCRStatus": {
        "description": "Validation errors for GetStatus API of Aadhaar OCR",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "X-Client-Id Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "X-Client-Secret Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              },
              "verification_id and reference_id missing": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "provide verification_id or reference_id"
                }
              },
              "Invalid reference_id format": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_value_invalid",
                  "message": "Bad request, please check API documentation"
                }
              }
            }
          }
        }
      },
      "Response400GetStatusRpd": {
        "description": "Validation errors for Get Details API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification and Reference ID Missing": {
                "$ref": "#/components/examples/VerificationAndReferenceIDMissingRpd"
              },
              "Invalid Verification ID": {
                "$ref": "#/components/examples/InvalidVerificationIDRpd"
              },
              "Invalid Reference ID": {
                "$ref": "#/components/examples/InvalidReferenceIDRpd"
              },
              "Header Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Gstin": {
        "description": "Validation errors for Verify GSTIN API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "GSTIN Invalid Format": {
                "$ref": "#/components/examples/WrongFormatOfGstin"
              },
              "GSTIN Missing": {
                "$ref": "#/components/examples/GstinMissingInRequest"
              },
              "Business Name Length Exceeded": {
                "$ref": "#/components/examples/BusinessNameLengthError"
              },
              "Business Name Invalid Format": {
                "$ref": "#/components/examples/BusinessNameFormatError"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using Test Credentials In Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400IpVerification": {
        "description": "Validation errors for Ip Verification",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Duplicate Verification Id": {
                "$ref": "#/components/examples/DuplicateVerificationId"
              },
              "Invalid Ip Address": {
                "$ref": "#/components/examples/InvalidIpAddress"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Liveliness": {
        "description": "Validation errors for Liveliness Check API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Image missing in the request": {
                "$ref": "#/components/examples/ImageMissingInTheRequest"
              },
              "File size exceeded": {
                "$ref": "#/components/examples/FileSizeExceeded"
              },
              "Invalid Verification ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Mobile360": {
        "description": "Validation errors for Get UPI VPA with Mobile Number API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Invalid Mobile Number": {
                "value": {
                  "type": "validation_error",
                  "code": "mobile_number_value_invalid",
                  "message": "Mobile number entered is invalid."
                }
              },
              "Mobile Number Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "mobile_number_missing",
                  "message": "mobile_number is missing in the request."
                }
              },
              "Invalid type": {
                "value": {
                  "type": "validation_error",
                  "code": "type_value_invalid",
                  "message": "type should be lite/advance."
                }
              },
              "Type Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "type_missing",
                  "message": "type is missing in the request."
                }
              },
              "Consent description Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "consent_desc_missing",
                  "message": "consent_desc is missing in the request."
                }
              },
              "Consent description short": {
                "value": {
                  "type": "validation_error",
                  "code": "consent_desc_length_short",
                  "message": "consent_desc should include a minimum of 20 characters."
                }
              },
              "Consent description exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "consent_desc_length_exceeded",
                  "message": "consent_desc can include a maximum of 50 characters."
                }
              },
              "Special Character in Name": {
                "value": {
                  "type": "validation_error",
                  "code": "name_value_invalid",
                  "message": "name should only contains alphanumeric, space, dot and hyphen."
                }
              },
              "Name length exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "name_length_exceeded",
                  "message": "Name can include a maximum of 100 characters."
                }
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400NameMatch": {
        "description": "Validation errors for Name Match API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Name 1 Missing": {
                "$ref": "#/components/examples/Name1Missing"
              },
              "Name 2 Missing": {
                "$ref": "#/components/examples/Name2Missing"
              },
              "Name 1 Empty": {
                "$ref": "#/components/examples/Name1Empty"
              },
              "Name 2 Empty": {
                "$ref": "#/components/examples/Name2Empty"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Ocr": {
        "description": "Validation errors for OCR APIs",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "File size exceeded": {
                "$ref": "#/components/examples/FileSizeExceeded"
              },
              "Invalid file format": {
                "$ref": "#/components/examples/InvalidFileFormatImage"
              },
              "Verification Id Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Front image is not uploaded": {
                "$ref": "#/components/examples/FrontImageNotUploadedError"
              },
              "Verifcation Id character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "Invalid Verification ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Pan": {
        "description": "Validation errors for Verify PAN Sync API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid PAN Format": {
                "$ref": "#/components/examples/InvalidPanFormat"
              },
              "Empty PAN field": {
                "$ref": "#/components/examples/EmptyPanField"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400PanAdvance": {
        "description": "Validation errors for PAN 360 API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid PAN Format": {
                "$ref": "#/components/examples/InvalidPanFormat"
              },
              "Empty PAN field": {
                "$ref": "#/components/examples/EmptyPanField"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400PantoGstin": {
        "description": "Validation errors for PAN to GSTIN API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid PAN Format": {
                "$ref": "#/components/examples/InvalidPanFormat"
              },
              "Empty PAN field": {
                "$ref": "#/components/examples/EmptyPanField"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Passport": {
        "description": "Validation errors for Verify Passport API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "fileNumber Missing": {
                "$ref": "#/components/examples/FileNumberMissing"
              },
              "DOB Missing": {
                "$ref": "#/components/examples/DOBMissing"
              },
              "Invalid DOB": {
                "$ref": "#/components/examples/InvalidDOB"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400ReverseGeocoding": {
        "description": "Validation errors for Reverse Geocoding API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid Latitude": {
                "$ref": "#/components/examples/InvalidLatitude"
              },
              "Invalid Longitude": {
                "$ref": "#/components/examples/InvalidLongitude"
              },
              "Verification Id Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verifcation Id character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "Invalid Verification ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400SendOtp": {
        "description": "Validation errors for Generate OTP to Verify Aadhaar API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Aadhaar Number Length Invalid": {
                "$ref": "#/components/examples/AadhaarNumberLengthIsNotCorrect"
              },
              "Aadhaar Number Invalid": {
                "$ref": "#/components/examples/InvalidAadhaarFormat"
              },
              "Aadhaar Number Empty": {
                "$ref": "#/components/examples/AadhaarNumberFieldIsEmpty"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using Test Credentials In Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400UpiAdvance": {
        "description": "Validation errors for UPI 360 API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid vpa": {
                "$ref": "#/components/examples/InvalidVpa"
              },
              "Vpa Missing": {
                "$ref": "#/components/examples/VpaMissing"
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400VehicleRc": {
        "description": "Validation errors for Verify RC API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid RC": {
                "$ref": "#/components/examples/InvalidRc"
              },
              "Missing verification ID": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verifcation ID character limit exceeded": {
                "$ref": "#/components/examples/VerificationIDCharacterLimitExceeded"
              },
              "Invalid verification ID": {
                "$ref": "#/components/examples/InvalidVerificationId"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400VerifyOtp": {
        "description": "Validation errors for Submit OTP for Aadhaar Verification API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Session Expired": {
                "$ref": "#/components/examples/WhenSessionEXPIRED"
              },
              "Invalid Aadhaar": {
                "$ref": "#/components/examples/WhenInvalidAadhaar"
              },
              "Aadhaar Not Linked To Mobile Number": {
                "$ref": "#/components/examples/WhenAadhaarNotLinkedToMobileNumber"
              },
              "OTP Expired": {
                "$ref": "#/components/examples/WhenOtpExpired"
              },
              "OTP Format Invalid": {
                "$ref": "#/components/examples/WhenOtpEnteredIsOfInvalidFormat"
              },
              "OTP Empty": {
                "$ref": "#/components/examples/WhenOtpIsNotEntered"
              },
              "OTP Invalid": {
                "$ref": "#/components/examples/WhenEnteredOtpIsInvalid"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using Test Credentials In Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400VoterId": {
        "description": "Validation errors for Verify Voter ID API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID has special characters": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400RequestFi": {
        "description": "Validation errors for Request FI API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID missing": {
                "$ref": "#/components/examples/RequestFiVerificationIdMissing"
              },
              "Verification ID has special characters": {
                "$ref": "#/components/examples/RequestFiVerificationIdWithSpecialCharacter"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400Consent": {
        "description": "Validation errors for Consent Request API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID missing": {
                "$ref": "#/components/examples/ConsentVerificationIdMissing"
              },
              "Verification ID has special characters": {
                "$ref": "#/components/examples/ConsentVerificationIdWithSpecialCharacter"
              },
              "Client ID/Client Secret Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400GetConsent": {
        "description": "Validation errors for GetStatus API of Consent",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "X-Client-Id Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "X-Client-Secret Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              },
              "verification_id and reference_id missing": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "provide consent_verification_id or consent_ref_id"
                }
              },
              "Invalid reference_id format": {
                "value": {
                  "type": "validation_error",
                  "code": "consent_ref_id_value_invalid",
                  "message": "Bad request, please check API documentation"
                }
              }
            }
          }
        }
      },
      "Response400FetchFiData": {
        "description": "Validation errors for Fetch Data API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "X-Client-Id Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-id_missing",
                  "message": "x-client-id is missing in the request."
                }
              },
              "X-Client-Secret Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "x-client-secret_missing",
                  "message": "x-client-secret is missing in the request."
                }
              },
              "verification_id and reference_id missing": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_request",
                  "message": "provide fi_verification_id or fi_ref_id"
                }
              },
              "Invalid reference_id format": {
                "value": {
                  "type": "validation_error",
                  "code": "fi_ref_id_value_invalid",
                  "message": "Bad request, please check API documentation"
                }
              }
            }
          }
        }
      },
      "Response400VpaFromPhone": {
        "description": "Validation errors for Get UPI VPA with Mobile Number API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid Mobile Number": {
                "value": {
                  "type": "validation_error",
                  "code": "mobile_number_value_invalid",
                  "message": "Mobile number entered is invalid."
                }
              },
              "Mobile Number Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "mobile_number_missing",
                  "message": "mobile_number is missing in the request."
                }
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response400UserIdentifier": {
        "description": "Validation error in data availability",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Identifier Type Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "identifier_type_value_invalid",
                  "message": "Please enter a valid identifier_type"
                }
              },
              "Identifier Value Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "identifier_value_value_invalid",
                  "message": "Please enter a valid identifier_value"
                }
              }
            }
          }
        }
      },
      "Response400StaticKYCLink": {
        "description": "Validation error in Static KYC Link",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Template Name Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "template_name_missing",
                  "message": "template_name is missing in the request."
                }
              },
              "Template Name Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "template_name_value_invalid",
                  "message": "template_name should only contains alphanumeric, dot, underscore and hyphen."
                }
              }
            }
          }
        }
      },
      "Response400DeactivateStaticKYCLink": {
        "description": "Validation error in deactivate Static KYC Link",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Template Name Missing": {
                "value": {
                  "type": "validation_error",
                  "code": "template_name_missing",
                  "message": "template_name is missing in the request."
                }
              },
              "Template Name Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "template_name_value_invalid",
                  "message": "template_name should only contains alphanumeric, dot, underscore and hyphen."
                }
              },
              "No Static Link Linked To Template": {
                "value": {
                  "type": "validation_error",
                  "code": "static_link_not_linked",
                  "message": "no active static link linked to provided template."
                }
              }
            }
          }
        }
      },
      "Response400KYCLinkGeneration": {
        "description": "Validation errors for Generate KYC Link API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Verification ID Missing": {
                "$ref": "#/components/examples/VerificationIdMissing"
              },
              "Verification ID With Special Chars": {
                "$ref": "#/components/examples/VerificationIdWithSpecialCharacter"
              },
              "Verification_id Character Limit Exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_length_exceeded",
                  "message": "verification_id can include a maximum of 50 characters."
                }
              },
              "Name Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "name_value_invalid",
                  "message": "name should only contains alphanumeric, space, dot and hyphen."
                }
              },
              "Template Name Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "Bad request, please check API documentation",
                  "message": "template name should be valid"
                }
              },
              "Expiry Date Invalid": {
                "value": {
                  "type": "validation_error",
                  "code": "REQUEST_INVALID",
                  "message": "Please enter valid expiry date"
                }
              },
              "Client ID/Client Secret in Missing": {
                "$ref": "#/components/examples/XClientIdMissing"
              },
              "Using-Test-Credentials-in-Prod": {
                "$ref": "#/components/examples/UsingTestCredentialsInProd"
              }
            }
          }
        }
      },
      "Response401": {
        "description": "Invalid client ID and client secret combination",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid client ID and client secret combination": {
                "value": {
                  "type": "authentication_error",
                  "code": "authentication_failed",
                  "message": "Invalid clientId and clientSecret combination"
                }
              }
            }
          }
        }
      },
      "Response403": {
        "description": "Authentication error (IP not whitelisted)",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "IP not whitelisted": {
                "value": {
                  "type": "authentication_error",
                  "code": "ip_validation_failed",
                  "message": "IP not whitelisted your current ip is 106.51.91.104.For IP whitelisting assistance, visit our guide at https://www.cashfree.com/docs/secure-id/get-started/integration/ip-whitelisting-verification"
                }
              }
            }
          }
        }
      },
      "Response404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "example": {
              "type": "not_found_error",
              "code": "referenceId_not_found",
              "message": "Incorrect referenceId"
            }
          }
        }
      },
      "Response404GetFormStatus": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "example": {
              "type": "not_found_error",
              "code": "Resource not found",
              "message": "No data found"
            }
          }
        }
      },
      "Response400TerminalStatus": {
        "description": "Validation errors for OTPLess verification",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Invalid Session Id": {
                "value": {
                  "type": "validation_error",
                  "code": "session_invalid",
                  "message": "Session Invalid"
                }
              },
              "Invalid Verification Id": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_missing",
                  "message": "verification_id is missing in the request."
                }
              }
            }
          }
        }
      },
      "Response404DigiLockerResponse": {
        "description": "Not found errors when IDs don't exist",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Validation Id not Found": {
                "value": {
                  "type": "not_found_error",
                  "code": "verification_id_value_invalid",
                  "message": "Please enter a valid verification_id"
                }
              },
              "Reference Id not Found": {
                "value": {
                  "type": "not_found_error",
                  "code": "reference_id_value_invalid",
                  "message": "Please enter a valid reference_id"
                }
              }
            }
          }
        }
      },
      "Response404StaticKYCLink": {
        "description": "Not found errors in Static KYC Link",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Template Name not Found": {
                "value": {
                  "type": "validation_error",
                  "code": "template_name_not_found",
                  "message": "template_name does not exist"
                }
              }
            }
          }
        }
      },
      "Response404GetOCRStatus": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Incorrect reference_id": {
                "value": {
                  "type": "validation_error",
                  "code": "reference_id_not_found",
                  "message": "reference_id does not exist."
                }
              },
              "Incorrect verification_id": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_not_found",
                  "message": "verification_id does not exist."
                }
              }
            }
          }
        }
      },
      "IfscVerification404Response": {
        "description": "404 response for ifsc verification",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Ifsc not Found": {
                "value": {
                  "type": "not_found_error",
                  "code": "ifsc_not_found",
                  "message": "IFSC not found. Please try again with valid IFSC"
                }
              }
            }
          }
        }
      },
      "Response409": {
        "description": "Conflict error for requesting another OTP for the same aadhaar within 30 seconds",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Request for same aadhaar within 30s": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_pending",
                  "message": "Otp generated for this aadhaar, please try after some time"
                }
              }
            }
          }
        }
      },
      "Response409Conflict": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Duplicate Verification ID": {
                "value": {
                  "type": "validation_error",
                  "code": "invalid_verification_id",
                  "message": "This Verification ID already exists. Provide a different ID."
                }
              }
            }
          }
        }
      },
      "Response409DigiLockerResponse": {
        "description": "Conflict error because of an existing verification id for DigiLocker request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Request with same verification id": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_value_invalid",
                  "message": "verification_id already exists, please provide new verification_id"
                }
              }
            }
          }
        }
      },
      "Response409BulkBAVResponse": {
        "description": "Conflict error because of an existing bulk validation id for BAV request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Request with same bulk validation id": {
                "value": {
                  "type": "validation_error",
                  "code": "bulk_verification_id_value_invalid",
                  "message": "bulk_verification_id already exists"
                }
              }
            }
          }
        }
      },
      "Response409DuplicateId": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Conflict Error": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_id_already_exists",
                  "message": "verification id already exists"
                }
              }
            }
          }
        }
      },
      "Response409SubmitOtp": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Conflict Error": {
                "value": {
                  "type": "validation_error",
                  "code": "verification_pending",
                  "message": "Processing request, please try after 30 sec"
                }
              }
            }
          }
        }
      },
      "Response409DuplicateIdConsent": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Conflict Error": {
                "value": {
                  "type": "validation_error",
                  "code": "consent_verification_id_already_exists",
                  "message": "consent verification id already exists"
                }
              }
            }
          }
        }
      },
      "Response409DuplicateIdRequestFi": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Conflict Error": {
                "value": {
                  "type": "validation_error",
                  "code": "fi_verification_id_already_exists",
                  "message": "fi verification id already exists"
                }
              }
            }
          }
        }
      },
      "Response413": {
        "description": "File size exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "File size exceeded": {
                "value": {
                  "type": "validation_error",
                  "code": "file_size_exceeded",
                  "message": "file size exceeded"
                }
              }
            }
          }
        }
      },
      "Response422": {
        "description": "Validation error because of insufficient balance to process this request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Insufficient balance": {
                "value": {
                  "type": "validation_error",
                  "code": "insufficient_balance",
                  "message": "Insufficient balance to process this request"
                }
              }
            }
          }
        }
      },
      "Response429": {
        "description": "Rate limit exceed error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Rate limit error per operation": {
                "value": {
                  "type": "rate_limit_error",
                  "code": "too_many_requests_per_operation",
                  "message": "Too many requests for this operation, rate limit reached"
                }
              },
              "Rate limit error per IP": {
                "value": {
                  "type": "rate_limit_error",
                  "code": "too_many_requests_per_ip",
                  "message": "Too many requests from the IP, rate limit reached"
                }
              }
            }
          }
        }
      },
      "Response500": {
        "description": "Internal error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Internal Server Error": {
                "value": {
                  "type": "internal_error",
                  "code": "request_failed",
                  "message": "Unable to process your request. Try again after some time"
                }
              }
            }
          }
        }
      },
      "Response500AllCases": {
        "description": "Internal errors",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Internal Server Error": {
                "value": {
                  "type": "internal_error",
                  "code": "verification_failed",
                  "message": "Unable to validate, please retry later",
                  "error": {
                    "refId": 209
                  }
                }
              },
              "Unknown Error Occured": {
                "value": {
                  "type": "internal_error",
                  "code": "api_error",
                  "message": "something went wrong, please try after some time"
                }
              }
            }
          }
        }
      },
      "Response500V2": {
        "description": "Internal error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Internal Server Error": {
                "value": {
                  "type": "internal_error",
                  "code": "verification_failed",
                  "message": "something went wrong"
                }
              }
            }
          }
        }
      },
      "Response502": {
        "description": "Gateway error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "example": {
              "type": "internal_error",
              "code": "request_failed",
              "message": "Unable to process your request. Try again after some time."
            }
          }
        }
      },
      "Response502V2": {
        "description": "Gateway error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Bad Gateway": {
                "value": {
                  "type": "internal_error",
                  "code": "verification_failed",
                  "message": "verification attempt failed"
                }
              }
            }
          }
        }
      },
      "GenerateFormLinkResponse": {
        "description": "Response Body for Generate KYC Link API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GenerateFormLinkResponseSchema"
            }
          }
        }
      },
      "StaticKYCLinkResponse": {
        "description": "Response Body for Generate Static KYC Link API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GenerateFormLinkQRCodeResponseSchema"
            },
            "examples": {
              "Success": {
                "value": {
                  "static_link": "https://verification.cashfree.com/forms?shortCode=m2bjk9uakkcg",
                  "qr_code": "iVBORw0KGgoAAAANSUhEUgAAAQAAAAEAAQMAAABmvDolAAAABlBMVEX///8AAABVwtN+AAACuklEQVR42uyYwa3jMAxEx/CBR5WgTqzGgtiBG5M7UQk66mB4FkP/3WR/A5aB8PZ/3sGUqOGQ+MY3bhhGklsd6sAdiAASJgz6b70RUADLQQgiuaMBqQ0VGHsCSMvhwFBHrvqDDRjqzLUzYCPrwLWM1FG3qU+g6sMfXg9G5hsCgG3MmOtMFoAZiduviroaOJ/eFF71EdeyR8tt0uX8epuXAh4DDzzDSnKknXX9f1wMWEFSCYRXncsjjjpstkTW911cDkCqNbk+PACMhZ5DOMJ6K8Cy5ZDxDIv/bLTsijJ2BbBNyiOsBbqLZAcSX3XuB1CxSBJ+pHiH0bY2cPnQh8sBxJY8hwOIe1T3NfIIR+CNAKmFNwhZhkck9TaZw8c5XA/o6bUpSHnnMlMFw8MEPNANIOV1uzhz5YIdlpUF0BVQSOiYn3p6UL9QA6nP8OEfrgZ01N55l7DEJarj8nDpHW8EWDGe0wIXzBzZ5Hm2t3voAUC0TDkx9Yu5AC21gVKHv1rdBUAi1UnA+6hVMOwHkKfl4W7Mq7qoxxk/GsodALfiQFJeRR3D/aS63r+4HjC2ZOphS2AZqYvhxkPTRO0JgGcx/9jFlixDDWRHP0Bxu+ifzSVSyjxhAjDXjgCkJh+2BHJxu3iOtPVOgDvzzQVkLQ95MbgQz+9h8nrAXBAAPKGa3tFghx2B7+3B9YB78wMTZHJW3x7YaXLmroDsWQxyYjrqJOH99LQ3AHx6POcFf5nlZy1yfBjOy4FzB1JT9Q+nC8ggO/FO83rg3CaRGnLd9CLJiX244h6Ac5nMOlRNvLsPwaYs/o0PPQC+4ZzwlCkre6QvONzW3AzIYeNpedWaW2pTeNXugHPHxbVQ/mFrCK//F/tXA14wWQ2CexyLTxM+BHcE/F0mL2HHI+5AsmzS2h33Ab7xja7iTwAAAP//HxNnsaD8lqMAAAAASUVORK5CYII=",
                  "status": "ACTIVE",
                  "template_name": "Aadhaar_verification"
                }
              }
            }
          }
        }
      },
      "DeactivateStaticKYCLinkResponse": {
        "description": "Response Body for Generate Static KYC Link API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DeactivateStaticKYCLinkResponseSchema"
            },
            "examples": {
              "Success": {
                "value": {
                  "message": "Successfully Deactivated",
                  "template_name": "Aadhaar_verification",
                  "static_link": "https://verification.cashfree.com/forms?shortCode=m2bjk9uakkcg",
                  "status": "INACTIVE"
                }
              }
            }
          }
        }
      },
      "getFormStatusResponse": {
        "description": "Response Body of VRS GetFormStatus API",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/getFormStatusResponseSchema"
            }
          }
        }
      },
      "Response502V2AuthorizedSourceDown": {
        "description": "Gateway error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "examples": {
              "Bad Gateway": {
                "value": {
                  "type": "internal_error",
                  "code": "verification_failed",
                  "message": "Authorised source is temporarily unavailable, please try again shortly"
                }
              }
            }
          }
        }
      },
      "ReverseGeocodingSuccessResponse": {
        "description": "Success response for retrieving physical address of a location",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReverseGeocodingResponseSchema"
            },
            "examples": {
              "Valid": {
                "value": {
                  "verification_id": "test001",
                  "reference_id": 21637861,
                  "latitude": "12.9274477",
                  "longitude": "77.6326542",
                  "address": "JSS Institutions Campus, First Floor, CA Site No.1, HAL 3rd Stage, HAL 3rd Stage, KodihalliBehind Hotel Leela Palace, HAL 2nd Stage, Kodihalli, Bengaluru, Karnataka 560008, India",
                  "city": "bangalore",
                  "state": "Karnataka",
                  "statecode": "KA",
                  "countrycode": "In",
                  "pincode": "560008",
                  "score": "1",
                  "status": "VALID"
                }
              }
            }
          }
        }
      },
      "UPIv2GetStatusResponseBody": {
        "description": "UPI V2 Get Status Response Body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UPIv2ResponseSchema"
            },
            "examples": {
              "Valid": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "VALID",
                  "name_at_bank": "JOHN DOE",
                  "vpa": "success@upi"
                }
              },
              "Invalid": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "INVALID",
                  "name_at_bank": null,
                  "vpa": "invalid@upi"
                }
              },
              "Expired": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "EXPIRED",
                  "name_at_bank": null,
                  "vpa": "expired@upi"
                }
              },
              "Wrong Name At Bank": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "NPCI_NAME_INCORRECT",
                  "name_at_bank": null,
                  "vpa": "invalidname@upi"
                }
              }
            }
          }
        }
      },
      "UPIv2ResponseBody": {
        "description": "UPI V2 Response Body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UPIv2ResponseSchema"
            },
            "examples": {
              "Valid": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "VALID",
                  "name_at_bank": "JOHN DOE",
                  "vpa": "success@upi"
                }
              },
              "Invalid": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "INVALID",
                  "name_at_bank": null,
                  "vpa": "invalid@upi"
                }
              },
              "Expired": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "EXPIRED",
                  "name_at_bank": null,
                  "vpa": "expired@upi"
                }
              },
              "Wrong Name At Bank": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "NPCI_NAME_INCORRECT",
                  "name_at_bank": null,
                  "vpa": "invalidname@upi"
                }
              }
            }
          }
        }
      },
      "IFSCv2ResponseBody": {
        "description": "Success response for IFSC Verification V2",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IFSCv2ResponseSchema"
            },
            "examples": {
              "VALID": {
                "value": {
                  "verification_id": "test_verification_id",
                  "reference_id": 12345,
                  "status": "VALID",
                  "bank": "Bank Name",
                  "ifsc": "HDFC0000001",
                  "neft": "Live",
                  "imps": "Live",
                  "rtgs": "Live",
                  "upi": "Live",
                  "ft": "Live",
                  "card": "Live",
                  "micr": 560751026,
                  "nbin": 1234,
                  "address": "GROUND FLOOR, 123, ABC CIRCLE, XYZ MAIN ROAD, BANGALORE - 560098",
                  "city": "BANGALORE",
                  "state": "KARNATAKA",
                  "branch": "BANGALORE - RAJA RAJESHWARI NAGAR BRANCH",
                  "ifsc_subcode": "HDFC0",
                  "category": "DIRECT_MEMBER",
                  "swift_code": "HDFCINBB"
                }
              }
            }
          }
        }
      },
      "InitiateOauthResponse": {
        "description": "Initiate Oauth Response Body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InitiateOauthResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "reference_id": 3123123,
                  "verification_id": "123456",
                  "user": [
                    {
                      "identifier_type": "MOBILE",
                      "identifier_value": "9988123456"
                    }
                  ],
                  "expiry": "2024-12-31T23:59:59Z",
                  "session_id": "session_id_value"
                }
              }
            }
          }
        }
      },
      "AccessTokenGenerationResponse": {
        "description": "Access Token Generation Response Body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AccessTokenGenerationResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "reference_id": 123456,
                  "verification_id": "test_verification_id",
                  "expiry": "2024-12-31T23:59:59Z",
                  "access_token": "access_token_value"
                }
              }
            }
          }
        }
      },
      "FetchDetailsResponse": {
        "description": "Fetch User Details from access token Response Body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FetchDetailsResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "reference_id": 123456,
                  "verification_id": "test_verification_id",
                  "scopes": [
                    {
                      "scope": "MOBILE",
                      "records": [
                        {
                          "confidence_score": null,
                          "metadata": {
                            "mobile": "9988123456"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "EMAIL",
                      "records": [
                        {
                          "confidence_score": null,
                          "metadata": {
                            "email": "example@example.com"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "ADDRESS",
                      "records": [
                        {
                          "confidence_score": null,
                          "metadata": {
                            "complete_address": "123 Main St, Bangalore",
                            "state": "KARNATAKA",
                            "type": "Permanent",
                            "pincode": "123456"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "GENDER",
                      "records": [
                        {
                          "confidence_score": null,
                          "metadata": {
                            "gender": "MALE"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "DOB",
                      "records": [
                        {
                          "confidence_score": null,
                          "metadata": {
                            "dob": "1990-01-01"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "AADHAAR",
                      "records": [
                        {
                          "confidence_score": 0.85,
                          "metadata": {
                            "aadhaar": "xxxxxxxx9012",
                            "care_of": "S/O: Fakkirappa Dollin",
                            "address": "Shri Kanaka Nilaya,,Umashankar Nagar 1st Main 5th Cross,Ranebennur,Haveri-Karnataka,India",
                            "dob": "02-02-1995",
                            "email": "example@example.com",
                            "gender": "M",
                            "name": "Mallesh Fakkirappa Dollin",
                            "split_address": {
                              "country": "India",
                              "dist": "Haveri",
                              "house": "Shri Kanaka Nilaya",
                              "landmark": "Shell petrol pump",
                              "pincode": "123456",
                              "po": "Ranebennur",
                              "state": "Karnataka",
                              "street": "Umashankar Nagar 1st Main 5th Cross",
                              "subdist": "Ranibennur",
                              "vtc": "Ranibennur"
                            },
                            "year_of_birth": "1995",
                            "mobile_hash": "abc123hash",
                            "photo_link": "<base64 encoded image>"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "PAN",
                      "records": [
                        {
                          "confidence_score": 0.85,
                          "metadata": {
                            "pan": "ABCDE1234F",
                            "type": "Individual",
                            "registered_name": "John Doe",
                            "aadhaar_seeding_status": "Y",
                            "last_updated_at": "2023-09-01",
                            "name_pan_card": "John Doe",
                            "aadhaar_seeding_status_desc": "Aadhaar is linked to PAN"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "BANK_ACCOUNT",
                      "records": [
                        {
                          "confidence_score": 0.85,
                          "metadata": {
                            "bank_account": "1234567890",
                            "name_at_bank": "John Doe",
                            "bank_name": "YES BANK",
                            "city": "BANGALORE",
                            "branch": "BANGALORE",
                            "micr": "123456789"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "NAME",
                      "records": [
                        {
                          "confidence_score": 0.85,
                          "metadata": {
                            "name": "John Doe"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "OCCUPATION",
                      "records": [
                        {
                          "confidence_score": null,
                          "metadata": {
                            "occupation": "Salaried"
                          }
                        }
                      ]
                    },
                    {
                      "scope": "INCOME",
                      "records": [
                        {
                          "confidence_score": null,
                          "metadata": {
                            "income": "BELOW_ONE_LAKH"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "UVDataAvailabilityResponse": {
        "description": "Response for user data availability request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UVDataAvailabilityResponseSchema"
            },
            "examples": {
              "SUCCESS": {
                "value": {
                  "reference_id": 3123123,
                  "verification_id": "123456",
                  "user": [
                    {
                      "identifier_type": "MOBILE",
                      "identifier_value": "9988123456"
                    }
                  ],
                  "available_scopes": [
                    {
                      "scope": "AADHAAR"
                    },
                    {
                      "scope": "PAN"
                    },
                    {
                      "scope": "DOB"
                    },
                    {
                      "scope": "EMAIL"
                    },
                    {
                      "scope": "GENDER"
                    },
                    {
                      "scope": "MOBILE"
                    },
                    {
                      "scope": "NAME"
                    },
                    {
                      "scope": "OCCUPATION"
                    },
                    {
                      "scope": "ADDRESS"
                    },
                    {
                      "scope": "INCOME"
                    },
                    {
                      "scope": "BANK_ACCOUNT"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "UpiAdvanceResponse": {
        "description": "Success response for verifying UPI VPA information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpiAdvanceResponseSchema"
            },
            "examples": {
              "Valid VPA": {
                "value": {
                  "reference_id": 1358,
                  "status": "VALID",
                  "message": "Vpa verified successfully.",
                  "ifsc": "ICIC0006567",
                  "vpa": "valid@upi",
                  "name_at_bank": "John doe",
                  "ifsc_details": {
                    "bank": "Bank Name",
                    "neft": "Live",
                    "imps": "Live",
                    "rtgs": "Live",
                    "upi": "Live",
                    "address": "GROUND FLOOR, 123, ABC CIRCLE, XYZ MAIN ROAD, BANGALORE - 560098",
                    "city": "BANGALORE",
                    "state": "KARNATAKA",
                    "branch": "BANGALORE - RAJA RAJESHWARI NAGAR BRANCH",
                    "category": "SUB_MEMBER",
                    "swift_code": "ABCDINBBDCL",
                    "micr": 560751026,
                    "nbin": 1234
                  }
                }
              },
              "Invalid VPA": {
                "value": {
                  "reference_id": 1358,
                  "status": "INVALID",
                  "message": "Vpa entered is invalid.",
                  "ifsc": null,
                  "vpa": "invalid@upi",
                  "name_at_bank": null,
                  "ifsc_details": {
                    "bank": null,
                    "neft": null,
                    "imps": null,
                    "rtgs": null,
                    "upi": null,
                    "address": null,
                    "city": null,
                    "state": null,
                    "branch": null,
                    "category": null,
                    "swift_code": null,
                    "micr": null,
                    "nbin": null
                  }
                }
              },
              "Expired VPA": {
                "value": {
                  "reference_id": 1358,
                  "status": "EXPIRED",
                  "message": "Vpa has expired.",
                  "ifsc": null,
                  "vpa": "expired@upi",
                  "name_at_bank": null,
                  "ifsc_details": {
                    "bank": null,
                    "neft": null,
                    "imps": null,
                    "rtgs": null,
                    "upi": null,
                    "address": null,
                    "city": null,
                    "state": null,
                    "branch": null,
                    "category": null,
                    "swift_code": null,
                    "micr": null,
                    "nbin": null
                  }
                }
              }
            }
          }
        }
      },
      "UpiMobileResponse": {
        "description": "Success response for retrieveing the list of UPI VPA associated with the mobile number",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpiMobileResponseSchema"
            },
            "examples": {
              "Vpa Found": {
                "value": {
                  "status": "SUCCESS",
                  "verification_id": "test_verification_id",
                  "reference_id": 1338,
                  "account_status": "VALID",
                  "mobile_number": "6666666666",
                  "vpa": "6666666666@upi",
                  "name_at_bank": "John doe",
                  "additional_vpas": [
                    "6666666666@paytm",
                    "6666666666@ybl"
                  ]
                }
              },
              "Vpa Not Found": {
                "value": {
                  "status": "SUCCESS",
                  "verification_id": "test_verification_id",
                  "message": "No UPI ID found linked to the Mobile Number",
                  "reference_id": 1338,
                  "account_status": "INVALID",
                  "mobile_number": "6666666666",
                  "vpa": null,
                  "name_at_bank": null,
                  "additional_vpas": []
                }
              },
              "Unable to Validate": {
                "value": {
                  "status": "FAILURE",
                  "verification_id": "test_verification_id",
                  "message": "Unable to validate, please retry later",
                  "reference_id": 1338,
                  "account_status": "UNABLE_TO_VALIDATE",
                  "mobile_number": "6666666666",
                  "vpa": null,
                  "name_at_bank": null,
                  "additional_vpas": []
                }
              }
            }
          }
        }
      },
      "VehicleRcSuccessResponse": {
        "description": "Success response for retrieving vehicle's registration certification information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/VehicleRcResponseSchema"
            },
            "examples": {
              "VALID": {
                "value": {
                  "verification_id": "6c617137-6d50-4c59-9302-c453ca42aa8589",
                  "reference_id": 88,
                  "status": "VALID",
                  "reg_no": "PY01MW8675",
                  "class": "Motor Car",
                  "chassis": "XDLKHK511VKL59924",
                  "engine": "L5LCFF4579076",
                  "vehicle_manufacturer_name": "HYUNDAI MOTOR INDIA LTD",
                  "model": "PORCHE GDI DCT",
                  "vehicle_colour": "TITAN GREY",
                  "type": "PETROL",
                  "norms_type": "BHARAT STAGE VI",
                  "body_type": "HATCHBACK",
                  "owner_count": "1",
                  "owner": "JOHN DOE",
                  "owner_father_name": "JOHN DOE",
                  "mobile_number": null,
                  "rc_status": "ACTIVE",
                  "status_as_on": "19/01/2024",
                  "reg_authority": "BENGALURU CENTRAL RTO, Karnataka",
                  "reg_date": "24/12/2021",
                  "vehicle_manufacturing_month_year": "12/2021",
                  "rc_expiry_date": "23/12/2036",
                  "vehicle_tax_upto": null,
                  "vehicle_insurance_company_name": "BAJAJ INSURANCE CO. LTD.",
                  "vehicle_insurance_upto": "14/12/2024",
                  "vehicle_insurance_policy_number": "62000344820000",
                  "rc_financer": "BAJAJ FINANCE",
                  "present_address": "D-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103",
                  "split_present_address": {
                    "district": [
                      "BANGALORE"
                    ],
                    "state": [
                      [
                        "KARNATAKA",
                        "KA"
                      ]
                    ],
                    "city": [
                      "BELLANDUR"
                    ],
                    "pincode": "560103",
                    "country": [
                      "IN",
                      "IND",
                      "INDIA"
                    ],
                    "address_line": "D-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103"
                  },
                  "permanent_address": "D-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103",
                  "split_permanent_address": {
                    "district": [
                      "BANGALORE"
                    ],
                    "state": [
                      "KARNATAKA",
                      "KA"
                    ],
                    "city": [
                      "BELLANDUR"
                    ],
                    "pincode": "560103",
                    "country": [
                      "IN",
                      "IND",
                      "INDIA"
                    ],
                    "address_line": "FD-901 Sun APARTMENTS, SARJAPUR, Bangalore, Karnataka, 560103"
                  },
                  "vehicle_cubic_capacity": "998",
                  "gross_vehicle_weight": "1490",
                  "unladen_weight": "1086",
                  "vehicle_category": "LMV",
                  "rc_standard_cap": "0",
                  "vehicle_cylinders_no": "3",
                  "vehicle_seat_capacity": "5",
                  "vehicle_sleeper_capacity": "0",
                  "vehicle_standing_capacity": "0",
                  "wheelbase": "2580",
                  "vehicle_number": "PY01MW5890",
                  "pucc_number": "Newv4",
                  "pucc_upto": "23/12/2022",
                  "blacklist_status": "NA",
                  "blacklist_details": null,
                  "challan_details": null,
                  "permit_issue_date": null,
                  "permit_number": null,
                  "permit_type": null,
                  "permit_valid_from": null,
                  "permit_valid_upto": null,
                  "non_use_status": null,
                  "non_use_from": null,
                  "non_use_to": null,
                  "national_permit_number": null,
                  "national_permit_upto": null,
                  "national_permit_issued_by": null,
                  "is_commercial": false,
                  "noc_details": null
                }
              },
              "INVALID": {
                "value": {
                  "verification_id": "6c6171fddddgg",
                  "reference_id": 128,
                  "status": "INVALID",
                  "reg_no": null,
                  "class": null,
                  "chassis": null,
                  "engine": null,
                  "vehicle_manufacturer_name": null,
                  "model": null,
                  "vehicle_colour": null,
                  "type": null,
                  "norms_type": null,
                  "body_type": null,
                  "owner_count": null,
                  "owner": null,
                  "owner_father_name": null,
                  "mobile_number": null,
                  "rc_status": null,
                  "status_as_on": null,
                  "reg_authority": null,
                  "reg_date": null,
                  "vehicle_manufacturing_month_year": null,
                  "rc_expiry_date": null,
                  "vehicle_tax_upto": null,
                  "vehicle_insurance_company_name": null,
                  "vehicle_insurance_upto": null,
                  "vehicle_insurance_policy_number": null,
                  "rc_financer": null,
                  "present_address": null,
                  "split_present_address": {
                    "district": null,
                    "state": null,
                    "city": null,
                    "pincode": null,
                    "country": null,
                    "address_line": null
                  },
                  "permanent_address": null,
                  "split_permanent_address": {
                    "district": null,
                    "state": null,
                    "city": null,
                    "pincode": null,
                    "country": null,
                    "address_line": null
                  },
                  "vehicle_cubic_capacity": null,
                  "gross_vehicle_weight": null,
                  "unladen_weight": null,
                  "vehicle_category": null,
                  "rc_standard_cap": null,
                  "vehicle_cylinders_no": null,
                  "vehicle_seat_capacity": null,
                  "vehicle_sleeper_capacity": null,
                  "vehicle_standing_capacity": null,
                  "wheelbase": null,
                  "vehicle_number": null,
                  "pucc_number": null,
                  "pucc_upto": null,
                  "blacklist_status": null,
                  "blacklist_details": null,
                  "challan_details": null,
                  "permit_issue_date": null,
                  "permit_number": null,
                  "permit_type": null,
                  "permit_valid_from": null,
                  "permit_valid_upto": null,
                  "non_use_status": null,
                  "non_use_from": null,
                  "non_use_to": null,
                  "national_permit_number": null,
                  "national_permit_upto": null,
                  "national_permit_issued_by": null,
                  "is_commercial": false,
                  "noc_details": null
                }
              }
            }
          }
        }
      },
      "RequestFiResponse": {
        "description": "Consent created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FiResponseSchema"
            },
            "example": {
              "fi_verification_id": "Fi_12345",
              "consent_verification_id": "abc12345",
              "fi_ref_id": 12462,
              "fi_from": "2023-01-01T00:00:00Z",
              "fi_to": "2023-12-31T23:59:59Z",
              "status": "PENDING",
              "fi_data": []
            }
          }
        }
      },
      "FetchFiDataResponse": {
        "description": "Consent created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FiResponseSchema"
            },
            "example": {
              "fi_verification_id": "Fi_12345",
              "consent_verification_id": "abc12345",
              "fi_ref_id": 12462,
              "fi_from": "2023-01-01T00:00:00Z",
              "fi_to": "2023-12-31T23:59:59Z",
              "status": "ACTIVE",
              "fi_data": [
                {
                  "fip_id": "FIP_1",
                  "accounts": [
                    {
                      "link_ref_number": "b2328fa7-0dcd-2314-asb5-9ef7b4c1cz6b",
                      "masked_acc_number": "XXXXXX4363",
                      "status": "DELIVERED",
                      "data": {
                        "account": {
                          "type": "DEPOSIT",
                          "profile": {
                            "holders": {
                              "type": "SINGLE",
                              "holder": {
                                "address": "729, 2nd main 2nd Cross, 8th Block, Kormangala, Bangalore - 560095",
                                "ckyc_compliance": "true",
                                "dob": "1960-08-15",
                                "email": "dummymail@mail.com",
                                "landline": "",
                                "mobile": "9876543219",
                                "name": "Vinay Kumar",
                                "nominee": "REGISTERED",
                                "pan": "DUMPY0000A"
                              }
                            }
                          },
                          "summary": {
                            "current_balance": "666.33",
                            "currency": "INR",
                            "branch": "Kormangala 8th Block",
                            "balance_date_time": "2020-06-22T07:50:00+00:00",
                            "current_od_limit": "0",
                            "drawing_limit": "0",
                            "exchange_rate": " ",
                            "facility": "OD",
                            "ifsc_code": "ICIC0004444",
                            "micr_code": "5898240246",
                            "opening_date": "2002-07-06",
                            "status": "ACTIVE",
                            "type": "SAVINGS",
                            "pending": {
                              "transaction_type": "DEBIT",
                              "amount": "0"
                            }
                          },
                          "transactions": {
                            "start_date": "2022-04-01",
                            "end_date": "2022-08-30",
                            "transaction": [
                              {
                                "amount": "129",
                                "current_balance": "567.25",
                                "mode": "UPI",
                                "narration": "UPI/9876543219/getsimpl/simpl@axisbank/Axis Bank",
                                "reference": "RFN00076583",
                                "transaction_timestamp": "2021-04-01T13:20:14+05:30",
                                "txn_id": "M3256752",
                                "type": "DEBIT",
                                "value_date": "2022-04-01"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "fip_id": "FIP_2",
                  "accounts": [
                    {
                      "link_ref_number": "b2329f47-0dcd-2314-asb5-9ef7b4c1cz6b",
                      "masked_acc_number": "XXXXXX4372",
                      "status": "PENDING",
                      "data": null
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "RequestConsentResponse": {
        "description": "Consent created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsentResponseSchema"
            },
            "example": {
              "consent_verification_id": "abc12345",
              "consent_ref_id": 67890,
              "consent_redirect_url": "https://example.com/redirect",
              "status": "PENDING",
              "customer_identifiers": [
                {
                  "type": "MOBILE",
                  "value": "9876543210"
                }
              ],
              "consent_start": "2024-01-01T00:00:00Z",
              "consent_expiry": "2024-12-31T23:59:59Z",
              "fi_from": "2024-01-01T00:00:00Z",
              "fi_to": "2024-12-31T23:59:59Z",
              "redirect_url": "https://example.com/redirect",
              "consent_mode": "STORE",
              "consent_type": [
                "PROFILE",
                "SUMMARY",
                "TRANSACTION"
              ],
              "fi_types": [
                "DEPOSIT"
              ],
              "data_life_expiry": "2024-01-07",
              "filter": [
                {
                  "type": "TRANSACTION_AMOUNT",
                  "operator": "LESS_THAN",
                  "value": "20000"
                }
              ]
            }
          }
        }
      },
      "GetConsentResponse": {
        "description": "Consent created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsentResponseSchema"
            },
            "example": {
              "consent_verification_id": "abc12345",
              "consent_ref_id": 67890,
              "consent_redirect_url": "https://example.com/redirect",
              "status": "SUCCESS",
              "customer_identifiers": [
                {
                  "type": "MOBILE",
                  "value": "9876543210"
                }
              ],
              "consent_start": "2024-01-01T00:00:00Z",
              "consent_expiry": "2024-12-31T23:59:59Z",
              "fi_from": "2024-01-01T00:00:00Z",
              "fi_to": "2024-12-31T23:59:59Z",
              "redirect_url": "https://example.com/redirect",
              "consent_mode": "STORE",
              "consent_type": [
                "PROFILE",
                "SUMMARY",
                "TRANSACTION"
              ],
              "fi_types": [
                "DEPOSIT"
              ],
              "data_life_expiry": "2024-01-07",
              "filter": [
                {
                  "type": "TRANSACTION_AMOUNT",
                  "operator": "LESS_THAN",
                  "value": "20000"
                }
              ]
            }
          }
        }
      },
      "VoterIdResponse": {
        "description": "Success response for retreiving voter ID information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/VoterIdResponseSchema"
            },
            "examples": {
              "Valid voter ID": {
                "value": {
                  "reference_id": 1358,
                  "verification_id": "testverificationid",
                  "status": "VALID",
                  "epic_number": "UAI4574761",
                  "name": "HARSHIT PRAJAPATI",
                  "name_in_regional_lang": "हर्षित",
                  "age": "23",
                  "relation_type": "FTHR",
                  "relation_name": "RAJ PRAJAPATI",
                  "relation_name_in_regional_lang": "राज",
                  "father_name": "RAJ PRAJAPATI",
                  "dob": "2000-12-07",
                  "gender": "Male",
                  "address": "GOVT JUNIOR COLLEGE SIRWAR",
                  "photo": "PHOTO_LINK.jpeg",
                  "split_address": {
                    "district": [
                      "INDORE"
                    ],
                    "state": [
                      [
                        "Madhya Pradesh"
                      ]
                    ],
                    "city": [
                      "SANER"
                    ],
                    "pincode": "560034",
                    "country": [
                      "IN",
                      "IND",
                      "INDIA"
                    ],
                    "address_line": "GOVT JUNIOR COLLEGE SIRWAR"
                  },
                  "state": "Madhya Pradesh",
                  "assembly_constituency_number": "211",
                  "assembly_constituency": "SANER",
                  "parliamentary_constituency_number": "25",
                  "parliamentary_constituency": "INDORE",
                  "part_number": "27",
                  "part_name": "SIRWAR",
                  "serial_number": "713",
                  "polling_station": "GOVT JUNIOR COLLEGE SIRWAR"
                }
              },
              "Invalid voter ID": {
                "value": {
                  "reference_id": 1358,
                  "verification_id": "testverificationid",
                  "status": "INVALID",
                  "epic_number": "UAI4574762",
                  "name": null,
                  "name_in_regional_lang": null,
                  "age": null,
                  "relation_type": null,
                  "relation_name": null,
                  "relation_name_in_regional_lang": null,
                  "father_name": null,
                  "dob": null,
                  "gender": null,
                  "address": null,
                  "photo": null,
                  "split_address": {
                    "district": null,
                    "state": null,
                    "city": null,
                    "pincode": null,
                    "country": null,
                    "address_line": null
                  },
                  "state": null,
                  "assembly_constituency_number": null,
                  "assembly_constituency": null,
                  "parliamentary_constituency_number": null,
                  "parliamentary_constituency": null,
                  "part_number": null,
                  "part_name": null,
                  "serial_number": null,
                  "polling_station": null
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "AadhaarNumberFieldIsEmpty": {
        "value": {
          "type": "validation_error",
          "code": "aadhaar_empty",
          "message": "Please enter aadhaar number in the request"
        }
      },
      "AadhaarNumberLengthIsNotCorrect": {
        "value": {
          "type": "validation_error",
          "code": "aadhaar_invalid",
          "message": "aadhaar Number should contain 12 characters."
        }
      },
      "AuthTypeMissing": {
        "value": {
          "type": "validation_error",
          "code": "auth_type_missing",
          "message": "auth_type is missing in the request."
        }
      },
      "BulkVerificationIdInvalidRefId": {
        "value": {
          "type": "validation_error",
          "code": "bulk_verification_id_value_invalid",
          "message": "bulk_verification_id should contain only alphanumeric and underscore characters."
        }
      },
      "BulkVerificationIdNotPresent": {
        "value": {
          "type": "validation_error",
          "code": "bulk_verification_id_missing",
          "message": "bulk_verification_id is missing in the request."
        }
      },
      "BusinessNameFormatError": {
        "value": {
          "type": "validation_error",
          "code": "business_name_value_invalid",
          "message": "business_name should be alphanumeric."
        }
      },
      "BusinessNameLengthError": {
        "value": {
          "type": "validation_error",
          "code": "business_name_length_exceeded",
          "message": "business_name can include a maximum of 200 characters."
        }
      },
      "CinMissing": {
        "value": {
          "type": "validation_error",
          "code": "cin_missing",
          "message": "cin is missing in the request."
        }
      },
      "DOBMissing": {
        "value": {
          "type": "validation_error",
          "code": "dob_missing",
          "message": "dob is missing in the request."
        }
      },
      "DigiLockerSessionExpired": {
        "value": {
          "type": "validation_error",
          "code": "session_expired",
          "message": "Digilocker consent session expired"
        }
      },
      "DigiLockerUrlExpired": {
        "value": {
          "type": "validation_error",
          "code": "url_expired",
          "message": "Digilocker request URL is expired"
        }
      },
      "DigiLockerConsentNotGranted": {
        "value": {
          "type": "validation_error",
          "code": "consent_not_granted",
          "message": "Consent not provided for document"
        }
      },
      "UserDetailMismatch": {
        "value": {
          "type": "validation_error",
          "code": "user_detail_mismatch",
          "message": "PAN card name of the user doesn't match with that in Aadhaar card"
        }
      },
      "DobMissing": {
        "value": {
          "type": "validation_error",
          "code": "dob_missing",
          "message": "dob is missing in the request."
        }
      },
      "DocumentIDExpired": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Document id provided is expired."
        }
      },
      "DocumentIDMissing": {
        "value": {
          "type": "validation_error",
          "code": "document_id_missing",
          "message": "document_id is missing in the request."
        }
      },
      "DocumentRequestedEmpty": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Requested Document Type can't be empty"
        }
      },
      "DocumentRequestedMissing": {
        "value": {
          "type": "validation_error",
          "code": "document_requested_missing",
          "message": "document_requested is missing in the request."
        }
      },
      "DuplicateDocumentRequested": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Duplicate Document Type Submitted"
        }
      },
      "DuplicateSignersSequence": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Duplicate sequence passed for signers"
        }
      },
      "DuplicateVerificationId": {
        "value": {
          "type": "validation_error",
          "code": "duplicate_verification_id",
          "message": "verification_id already exists"
        }
      },
      "EmptyDocumentField": {
        "value": {
          "type": "validation_error",
          "code": "document_missing",
          "message": "document is missing in the request."
        }
      },
      "EmptyPanField": {
        "value": {
          "type": "validation_error",
          "code": "pan_missing",
          "message": "pan is missing in the request."
        }
      },
      "ExpiryInDaysMissing": {
        "value": {
          "type": "validation_error",
          "code": "expiry_in_days_missing",
          "message": "expiry_in_days is missing in the request."
        }
      },
      "FileNumberMissing": {
        "value": {
          "type": "validation_error",
          "code": "file_number_missing",
          "message": "file_number is missing in the request."
        }
      },
      "FileSizeExceeded": {
        "value": {
          "type": "validation_error",
          "code": "file_size_exceeded",
          "message": "File size exceeded 10MB limit"
        }
      },
      "FirstImageIsNotUploaded": {
        "value": {
          "type": "validation_error",
          "code": "first_image_missing",
          "message": "First image is missing in the request"
        }
      },
      "FrontImageNotUploadedError": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Front Image File is missing"
        }
      },
      "GetEmploymentRequestExamples": {
        "description": "Request examples for Get Employment Details API"
      },
      "GstinMissingInRequest": {
        "value": {
          "type": "validation_error",
          "code": "GSTIN_missing",
          "message": "GSTIN is missing in the request."
        }
      },
      "GstinServiceIsNotEnabled": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "GstIn Verification is not enabled for this account"
        }
      },
      "ImageMissingInRequest": {
        "value": {
          "type": "validation_error",
          "code": "image_missing",
          "message": "image is missing in the request"
        }
      },
      "ImageMissingInTheRequest": {
        "value": {
          "type": "validation_error",
          "code": "image_field_missing",
          "message": "image is missing in the request."
        }
      },
      "Invalid-Verification-ID": {
        "value": {
          "type": "validation_error",
          "code": "verification_id_value_invalid",
          "message": "verification_id can include only alphanum, dot, hyphen and underscores"
        }
      },
      "InvalidAadhaarDetailsLength": {
        "value": {
          "type": "validation_error",
          "code": "aadhaar_last_four_digit_value_invalid",
          "message": "aadhaar_last_four_digit should be 4 characters."
        }
      },
      "InvalidAadhaarDetailsType": {
        "value": {
          "type": "validation_error",
          "code": "aadhaar_last_four_digit_value_invalid",
          "message": "aadhaar_last_four_digit should be numeric."
        }
      },
      "InvalidAadhaarFormat": {
        "value": {
          "type": "validation_error",
          "code": "aadhaar_invalid",
          "message": "Please enter aadhaar number in numeric format"
        }
      },
      "InvalidCin": {
        "value": {
          "type": "validation_error",
          "code": "cin_value_invalid",
          "message": "cin should be of 21 character alphanumeric string of format (X00000XX0000XXX000000)."
        }
      },
      "InvalidDOB": {
        "value": {
          "type": "validation_error",
          "code": "dob_value_invalid",
          "message": "dob should be of type YYYY-MM-DD."
        }
      },
      "InvalidDob": {
        "value": {
          "type": "validation_error",
          "code": "dob_value_invalid",
          "message": "dob should be of type YYYY-MM-DD."
        }
      },
      "InvalidDocumentID": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Document id provided is invalid."
        }
      },
      "SignPositionSmall": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Sign position is too small"
        }
      },
      "SignPositionLarge": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Sign position is too large"
        }
      },
      "InvalidDocumentRequested": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Invalid Document Type Submitted"
        }
      },
      "InvalidDocument_TypeField": {
        "value": {
          "type": "validation_error",
          "code": "document_type_value_invalid",
          "message": "document_type should be AADHAAR."
        }
      },
      "InvalidDrivingLicense": {
        "value": {
          "type": "validation_error",
          "code": "driving_license_value_invalid",
          "message": "driving license is invalid"
        }
      },
      "InvalidFileFormatImage": {
        "value": {
          "type": "validation_error",
          "code": "file_format_invalid",
          "message": "please upload the file of valid format(jpeg/jpg/png)"
        }
      },
      "InvalidFileFormatPDF": {
        "value": {
          "type": "validation_error",
          "code": "file_format_invalid",
          "message": "Please upload the file of valid format(pdf)"
        }
      },
      "InvalidInputCombination": {
        "value": {
          "type": "validation_error",
          "code": "input_combination_invalid",
          "message": "provided input combination is not valid"
        }
      },
      "InvalidIpAddress": {
        "value": {
          "type": "validation_error",
          "code": "invalid_ip_address",
          "message": "please enter a valid IP address"
        }
      },
      "InvalidLatitude": {
        "value": {
          "type": "validation_error",
          "code": "latitude_value_invalid",
          "message": "latitude value should range from -90 to 90"
        }
      },
      "InvalidLongitude": {
        "value": {
          "type": "validation_error",
          "code": "longitude_value_invalid",
          "message": "longitude value should range from -180 to 180"
        }
      },
      "InvalidNotificationModes": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Notification mode provided is invalid."
        }
      },
      "InvalidPanFormat": {
        "value": {
          "type": "validation_error",
          "code": "pan_length_short",
          "message": "Enter valid PAN."
        }
      },
      "InvalidRc": {
        "value": {
          "type": "validation_error",
          "code": "vehicle_rc_value_invalid",
          "message": "vehicle-rc is invalid"
        }
      },
      "InvalidRedirectionUrlWithHttpsPrefix": {
        "value": {
          "type": "validation_error",
          "code": "redirect_url_value_invalid",
          "message": "redirect_url should be valid url."
        }
      },
      "InvalidRedirectionUrlWithoutHttpsPrefix": {
        "value": {
          "type": "validation_error",
          "code": "redirect_url_value_invalid",
          "message": "redirect_url should start with https."
        }
      },
      "InvalidReferenceIDRpd": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Please enter a valid ref_id"
        }
      },
      "InvalidSignersSequence": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Sequence passed for signers is Invalid"
        }
      },
      "InvalidVerificationIDRpd": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Please enter a valid verification_id"
        }
      },
      "InvalidVerificationId": {
        "value": {
          "type": "validation_error",
          "code": "verification_id_value_invalid",
          "message": "verification_id can include only alphanum, dot, hyphen and underscores"
        }
      },
      "InvalidVpa": {
        "value": {
          "type": "validation_error",
          "code": "vpa_value_invalid",
          "message": "vpa should be valid."
        }
      },
      "MultipleSignerNotAllowedWithoutEmailNotificationMode": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Multiple signer is not allowed without email notification mode"
        }
      },
      "Name1Empty": {
        "value": {
          "type": "validation_error",
          "code": "name_1_value_invalid",
          "message": "name_1 is not allowed to be empty."
        }
      },
      "Name1Missing": {
        "value": {
          "type": "validation_error",
          "code": "name_1_missing",
          "message": "name_1 is missing in the request."
        }
      },
      "Name2Empty": {
        "value": {
          "type": "validation_error",
          "code": "name_2_value_invalid",
          "message": "name_2 is not allowed to be empty."
        }
      },
      "Name2Missing": {
        "value": {
          "type": "validation_error",
          "code": "name_2_missing",
          "message": "name_2 is missing in the request."
        }
      },
      "NoEntriesToValidate": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Please provide atleast one entry for verification"
        }
      },
      "NotificationModesMissing": {
        "value": {
          "type": "validation_error",
          "code": "notification_modes_missing",
          "message": "notification_modes is missing in the request."
        }
      },
      "NumberOfSignersExceededLimit": {
        "value": {
          "type": "validation_error",
          "code": "invalid_input",
          "message": "Maximum number limit of Signer exceeded."
        }
      },
      "PanLiteDeactivatedRequest": {
        "description": "Deactivated PAN",
        "value": {
          "verification_id": "test003",
          "pan": "ABCDX1234F",
          "name": "John Doe",
          "dob": "1993-06-30"
        }
      },
      "PanLiteDeletedRequest": {
        "description": "Deleted PAN",
        "value": {
          "verification_id": "test003",
          "pan": "ABCDD1234F",
          "name": "John Doe",
          "dob": "1993-06-30"
        }
      },
      "PanLiteExisting": {
        "description": "Valid PAN",
        "value": {
          "verification_id": "test002",
          "pan": "ABCPV1234D",
          "name": "John Doe",
          "dob": "1993-06-30"
        }
      },
      "PanLiteFakeRequest": {
        "description": "Fake PAN",
        "value": {
          "verification_id": "test003",
          "pan": "ABCDF1234F",
          "name": "John Doe",
          "dob": "1993-06-30"
        }
      },
      "PanLiteInvalidRequest": {
        "description": "Invalid PAN",
        "value": {
          "verification_id": "test003",
          "pan": "DEFPV0126D",
          "name": "John Doe",
          "dob": "1993-06-30"
        }
      },
      "ReferenceIdMissing": {
        "value": {
          "type": "validation_error",
          "code": "reference_id_missing",
          "message": "Either of reference_id or BulkVerificationId can't be empty."
        }
      },
      "RequestParamsMissing": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Please provide verification_id or reference_id"
        }
      },
      "SecondImageIsNotUploaded": {
        "value": {
          "type": "validation_error",
          "code": "second_image_missing",
          "message": "Second image is missing in the request"
        }
      },
      "SignersMissing": {
        "value": {
          "type": "validation_error",
          "code": "signers_missing",
          "message": "signers is missing in the request."
        }
      },
      "SpecialCharactersInAadhaar": {
        "value": {
          "type": "validation_error",
          "code": "aadhaar_invalid",
          "message": "Please enter aadhaar number in numeric format"
        }
      },
      "UsingTestCredentialsInProd": {
        "value": {
          "type": "validation_error",
          "code": "x-client-secret_value_invalid",
          "message": "Client secret belongs to test environment"
        }
      },
      "VerificationAndReferenceIDMissingRpd": {
        "value": {
          "type": "validation_error",
          "code": "invalid_request",
          "message": "Please provide verification_id or ref_id"
        }
      },
      "VerificationIDCharacterLimitExceeded": {
        "value": {
          "type": "validation_error",
          "code": "verification_id_length_exceeded",
          "message": "verification_id can include a maximum of 50 characters."
        }
      },
      "VerificationIdAlreadyExist": {
        "value": {
          "type": "validation_error",
          "code": "invalid_verification_id",
          "message": "verification_id already exists"
        }
      },
      "VerificationIdMissing": {
        "value": {
          "type": "validation_error",
          "code": "verification_id_missing",
          "message": "verification_id is missing in the request."
        }
      },
      "ConsentVerificationIdMissing": {
        "value": {
          "type": "validation_error",
          "code": "consent_verification_id_missing",
          "message": "consent_verification_id is missing in the request."
        }
      },
      "RequestFiVerificationIdMissing": {
        "value": {
          "type": "validation_error",
          "code": "fi_verification_id_missing",
          "message": "fi_verification_id is missing in the request."
        }
      },
      "VerificationIdWithSpecialCharacter": {
        "value": {
          "type": "validation_error",
          "code": "verification_id_value_invalid",
          "message": "verification_id can include only alphanum, dot, hyphen and underscores."
        }
      },
      "ConsentVerificationIdWithSpecialCharacter": {
        "value": {
          "type": "validation_error",
          "code": "consent_verification_id_value_invalid",
          "message": "consent_verification_id can include only alphanum, dot, hyphen and underscores."
        }
      },
      "RequestFiVerificationIdWithSpecialCharacter": {
        "value": {
          "type": "validation_error",
          "code": "fi_verification_id_value_invalid",
          "message": "fi_verification_id can include only alphanum, dot, hyphen and underscores."
        }
      },
      "VpaMissing": {
        "value": {
          "type": "validation_error",
          "code": "vpa_missing",
          "message": "vpa is missing in the request."
        }
      },
      "WhenAadhaarNotLinkedToMobileNumber": {
        "value": {
          "type": "validation_error",
          "code": "verification_failed",
          "message": "Aadhaar not linked to mobile number",
          "error": {
            "refId": 1
          }
        }
      },
      "WhenEnteredOtpIsInvalid": {
        "value": {
          "type": "validation_error",
          "code": "verification_failed",
          "message": "OTP entered is invalid",
          "error": null,
          "refId": 210
        }
      },
      "WhenInvalidAadhaar": {
        "value": {
          "type": "validation_error",
          "code": "verification_failed",
          "message": "Invalid Aadhaar Card",
          "error": {
            "refId": 1
          }
        }
      },
      "WhenOtpEnteredIsOfInvalidFormat": {
        "value": {
          "type": "validation_error",
          "code": "otp_invalid",
          "message": "Please enter a valid otp."
        }
      },
      "WhenOtpExpired": {
        "value": {
          "type": "validation_error",
          "code": "verification_failed",
          "message": "Otp expired",
          "error": {
            "refId": 1
          }
        }
      },
      "WhenOtpIsNotEntered": {
        "value": {
          "type": "validation_error",
          "code": "otp_empty",
          "message": "Please enter the otp in the request"
        }
      },
      "WhenSessionEXPIRED": {
        "value": {
          "type": "validation_error",
          "code": "verification_failed",
          "message": "Session expired, please generate a new OTP",
          "error": {
            "refId": 1
          }
        }
      },
      "WrongFormatOfGstin": {
        "value": {
          "type": "validation_error",
          "code": "GSTIN_value_invalid",
          "message": "GSTIN first 2 digits should be numeric and length should not exceed 15 and should be alphanumeric."
        }
      },
      "XClientIdMissing": {
        "value": {
          "type": "validation_error",
          "code": "x-client-id_missing",
          "message": "x-client-id is missing in the request."
        }
      },
      "dob_and_employee": {
        "summary": "DOB and employee name",
        "description": "Get employment details with DOB and employee name",
        "value": {
          "verification_id": "test_verification_id",
          "dob": "1999-01-27",
          "employee_name": "John Doe"
        }
      },
      "dob_and_names": {
        "summary": "DOB, employer, and employee names",
        "description": "Get employment details with DOB, employer, and employee names",
        "value": {
          "verification_id": "test_verification_id",
          "dob": "1999-01-27",
          "employee_name": "John Doe",
          "employer_name": "Cashfree India Private Ltd"
        }
      },
      "phone_and_pan": {
        "summary": "Phone number and PAN",
        "description": "Get employment details with phone number and PAN",
        "value": {
          "verification_id": "test_verification_id",
          "phone": "9988775566",
          "pan": "ABCDE5930G"
        }
      },
      "phone_dob_and_employer_name": {
        "summary": "Phone number, DOB, and employee name",
        "description": "Get employment details with phone number, DOB, and employee name",
        "value": {
          "verification_id": "test_verification_id",
          "phone": "9988775566",
          "dob": "1999-01-27",
          "employee_name": "John Doe"
        }
      },
      "phone_dob_and_names": {
        "summary": "Phone number, DOB, and names",
        "description": "Get employment details with phone number, DOB, employer, and employee names",
        "value": {
          "verification_id": "test_verification_id",
          "phone": "9988775566",
          "dob": "1999-01-27",
          "employee_name": "John Doe",
          "employer_name": "Cashfree India Private Ltd"
        }
      },
      "phone_employee_and_employer_name": {
        "summary": "Phone number, employee, and employer name",
        "description": "Get employment details with phone number, employer, and employee name",
        "value": {
          "verification_id": "test_verification_id",
          "phone": "9988775566",
          "employee_name": "John Doe",
          "employer_name": "Cashfree India Private Ltd"
        }
      },
      "phone_number": {
        "summary": "Phone Number",
        "description": "Get employment details with phone number",
        "value": {
          "verification_id": "test_verification_id",
          "phone": "9988775566"
        }
      },
      "phone_pan_and_names": {
        "summary": "Phone number, PAN, and names",
        "description": "Get employment details with phone number, PAN, employer, and employee names",
        "value": {
          "verification_id": "test_verification_id",
          "phone": "9988775566",
          "pan": "ABCDE5930G",
          "employee_name": "John Doe",
          "employer_name": "Cashfree India Private Ltd"
        }
      },
      "phone_pan_dob_and_names": {
        "summary": "Phone number, PAN, DOB, and names",
        "description": "Get employment details with phone number, PAN, DOB, employer, and employee names",
        "value": {
          "verification_id": "test_verification_id",
          "phone": "9988775566",
          "pan": "ABCDE5930G",
          "dob": "1999-01-27",
          "employee_name": "John Doe",
          "employer_name": "Cashfree India Private Ltd"
        }
      },
      "uan": {
        "summary": "UAN",
        "description": "Get employment details with UAN",
        "value": {
          "verification_id": "test_verification_id",
          "uan": "101340612345"
        }
      },
      "uan_and_employee": {
        "summary": "UAN and employee name",
        "description": "Get employment details with UAN and employee name",
        "value": {
          "verification_id": "test_verification_id",
          "uan": "101340612345",
          "employee_name": "John Doe"
        }
      },
      "uan_and_names": {
        "summary": "UAN and names",
        "description": "Get employment details with UAN, employer, and employee names",
        "value": {
          "verification_id": "test_verification_id",
          "uan": "101340612345",
          "employee_name": "John Doe",
          "employer_name": "Cashfree India Private Ltd"
        }
      },
      "mobile_number": {
        "summary": "Mobile Number",
        "description": "Verify digilocker account with mobile number",
        "value": {
          "verification_id": "ABC001238",
          "mobile_number": "101340612345"
        }
      },
      "aadhaar_number": {
        "summary": "Aadhaar Number",
        "description": "Verify digilocker account with aadhaar number",
        "value": {
          "verification_id": "ABC001238",
          "aadhaar_number": "655675523712"
        }
      }
    },
    "x-elicitationConfig": {
      "VrsNameMatchVerification": {
        "enabled": true,
        "fields": {
          "name_1": {
            "required": true,
            "message": "Please provide the first name to verify",
            "schema": {
              "type": "string",
              "title": "First Name",
              "description": "First name to verify"
            },
            "mapping": {
              "target": "body.name_1",
              "transform": "string"
            }
          },
          "name_2": {
            "required": true,
            "message": "Please provide the second name to verify",
            "schema": {
              "type": "string",
              "title": "Second Name",
              "description": "Second name to verify"
            },
            "mapping": {
              "target": "body.name_2",
              "transform": "string"
            }
          }
        }
      },
      "VrsGenerateKYCLink": {
        "enabled": true, 
        "fields": {
          "phone": {
            "required": false,
            "message": "Please provide the phone number",
            "schema": {
              "type": "string",
              "title": "Phone Number",
              "description": "Phone number of the user"
            },
            "mapping": {
              "target": "body.phone",
              "transform": "string"
            }
          },
          "template_name": {
            "required": true,
            "message": "Please provide the template name",
            "schema": {
              "type": "string",
              "title": "Template Name",
              "description": "Template Name of the KYC form"
            },
            "mapping": {
              "target": "body.template_name",
              "transform": "string"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/name-match": {
      "post": {
        "operationId": "VrsNameMatchVerification",
        "security": [
          {
            "XClientID": [],
            "XClientSecret": []
          }
        ],
        "tags": [
          "Name Match"
        ],
        "summary": "Verify Name Match",
        "x-mcp": {
          "enabled": true,
          "config": {
            "elicitation": {
              "$ref": "#/components/x-elicitationConfig/VrsNameMatchVerification"
            }
          }
        },
        "description": "Use this API to verify names that have enormous variations. Provide us the names you want to verify, and we will tell you whether they match and provide the reason. View the [test data](https://www.cashfree.com/docs/api-reference/vrs/data-to-test-integration#name-match) and use the information to trigger the validations. The test data are usable only in the test environments such as sandbox.",
        "parameters": [
          {
            "$ref": "#/components/parameters/x_cf_signature"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NameMatchRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NameMatchResponse"
          },
          "400": {
            "$ref": "#/components/responses/Response400NameMatch"
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "403": {
            "$ref": "#/components/responses/Response403"
          },
          "409": {
            "$ref": "#/components/responses/Response409DuplicateId"
          },
          "422": {
            "$ref": "#/components/responses/Response422"
          },
          "429": {
            "$ref": "#/components/responses/Response429"
          },
          "500": {
            "$ref": "#/components/responses/Response500V2"
          },
          "502": {
            "$ref": "#/components/responses/Response502V2"
          }
        }
      }
    },
    "/form": {
      "post": {
        "operationId": "VrsGenerateKYCLink",
        "security": [
          {
            "XClientID": [],
            "XClientSecret": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/x_cf_signature"
          }
        ],
        "tags": [
          "Generate KYC Link"
        ],
        "summary": "Generate KYC Link",
        "x-mcp": {
          "enabled": true,
          "config": {
            "elicitation": {
              "$ref": "#/components/x-elicitationConfig/VrsGenerateKYCLink"
            }
          }
        },
        "description": "Use this API to generate a verification form to verify the KYC information of your users digitally.",
        "requestBody": {
          "$ref": "#/components/requestBodies/GenerateKYCLinkRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GenerateFormLinkResponse"
          },
          "400": {
            "$ref": "#/components/responses/Response400KYCLinkGeneration"
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "403": {
            "$ref": "#/components/responses/Response403"
          },
          "409": {
            "$ref": "#/components/responses/Response409DuplicateId"
          },
          "422": {
            "$ref": "#/components/responses/Response422"
          },
          "429": {
            "$ref": "#/components/responses/Response429"
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      },
      "get": {
        "tags": [
          "Get KYC Link Status"
        ],
        "operationId": "VrsGetKYCLinkStatus",
        "security": [
          {
            "XClientID": [],
            "XClientSecret": []
          }
        ],
        "summary": "Get KYC Link Status",
        "x-mcp": {
          "enabled": true
        },
        "description": "Use this API to get the status of the verification form. You need to input either the verification_id or reference_id to get the KYC Link status.",
        "parameters": [
          {
            "$ref": "#/components/parameters/x_cf_signature"
          },
          {
            "name": "verificationID",
            "description": "It is the unique ID you created to identify the KYC link.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ABC00123",
              "default": "ABC00123"
            }
          },
          {
            "name": "referenceID",
            "description": "It is the unique ID you receive in the response of Generate KYC Link API.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "235461",
              "default": "235461"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/getFormStatusResponse"
          },
          "400": {
            "$ref": "#/components/responses/400GetFormStatus"
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "403": {
            "$ref": "#/components/responses/Response403"
          },
          "404": {
            "$ref": "#/components/responses/Response404GetFormStatus"
          },
          "429": {
            "$ref": "#/components/responses/Response429"
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    },
    "/form/static-link": {
      "post": {
        "operationId": "VrsGenerateStaticKYCLink",
        "security": [
          {
            "XClientID": [],
            "XClientSecret": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/x_cf_signature"
          }
        ],
        "tags": [
          "Generate Static KYC Link"
        ],
        "summary": "Generate Static KYC Link",
        "x-mcp": {
          "enabled": true
        },
        "description": "Use this API to generate a static KYC link to verify the KYC information of your users digitally.",
        "requestBody": {
          "$ref": "#/components/requestBodies/StaticKYCLinkRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StaticKYCLinkResponse"
          },
          "400": {
            "$ref": "#/components/responses/Response400StaticKYCLink"
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "403": {
            "$ref": "#/components/responses/Response403"
          },
          "404": {
            "$ref": "#/components/responses/Response404StaticKYCLink"
          },
          "422": {
            "$ref": "#/components/responses/Response422"
          },
          "429": {
            "$ref": "#/components/responses/Response429"
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      },
      "delete": {
        "operationId": "VrsDeactivateStaticKYCLink",
        "security": [
          {
            "XClientID": [],
            "XClientSecret": []
          }
        ],
        "tags": [
          "Deactivate Static KYC Link"
        ],
        "summary": "Deactivate Static KYC Link",
        "x-mcp": {
          "enabled":  true
        },
        "description": "Use this API to deactivate a static KYC Link.",
        "parameters": [
          {
            "$ref": "#/components/parameters/x_cf_signature"
          },
          {
            "name": "template_name",
            "in": "query",
            "description": "It is name of the template using which static KYC link was generated.",
            "example": "Aadhaar_verification",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeactivateStaticKYCLinkResponse"
          },
          "400": {
            "$ref": "#/components/responses/Response400DeactivateStaticKYCLink"
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "403": {
            "$ref": "#/components/responses/Response403"
          },
          "404": {
            "$ref": "#/components/responses/Response404StaticKYCLink"
          },
          "422": {
            "$ref": "#/components/responses/Response422"
          },
          "429": {
            "$ref": "#/components/responses/Response429"
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    }
  }
}