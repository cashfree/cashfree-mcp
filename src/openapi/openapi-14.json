{
  "openapi": "3.0.0",
  "info": {
    "title": "Internal Transfer API",
    "version": "1.0.0",
    "description": "API to create virtual accounts on existing connected fund sources."
  },
  "servers": [
    {
      "url": "https://sandbox.cashfree.com/payout",
      "description": "Sandbox server"
    },
    {
      "url": "https://api.cashfree.com/payout",
      "description": "Production server"
    }
  ],
  "tags": [],
  "components": {
    "schemas": {
      "AccountStatementRows": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "It displays the unique ID of the account statement row. \\"
          },
          "eventId": {
            "type": "integer",
            "description": "It displays the uniquie ID of the event associated with the transaction."
          },
          "txTime": {
            "type": "string",
            "format": "date-time",
            "description": "It displays the timestamp of the transaction."
          },
          "eventType": {
            "type": "string",
            "description": "It displays the type of the event (CREDIT/DEBIT)."
          },
          "event": {
            "type": "string",
            "description": "It displays the event in detail."
          },
          "transactionAmount": {
            "type": "string",
            "format": "decimal",
            "description": "It displays the transaction amount."
          },
          "serviceCharge": {
            "type": "string",
            "format": "decimal",
            "description": "It diplays the applied service charge."
          },
          "serviceTax": {
            "type": "string",
            "format": "decimal",
            "description": "It displays the applie service tax."
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "description": "It displays the total charged amount."
          },
          "remarks": {
            "type": "string",
            "description": "It displays any additional remarks for the transaction."
          },
          "paymentInstrumentId": {
            "type": "string",
            "description": "It displays the unique ID of the payment instrument involved in the transaction."
          },
          "closingBalance": {
            "type": "string",
            "format": "decimal",
            "description": "It displays the closing balance after the transaction."
          }
        }
      },
      "CreateVirtualAccountRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "It is the name you want to display for the virtual account.",
            "example": "Demo1"
          },
          "accountPrefix": {
            "type": "string",
            "description": "It is the account prefix as allocated by the bank. This paramete is mandatory during the first account creation.",
            "example": 1234
          }
        },
        "required": [
          "displayName"
        ]
      },
      "CreateVirtualAccountResponse": {
        "type": "object",
        "properties": {
          "paymentInstrumentId": {
            "type": "string",
            "description": "It displays the unique ID to identify the payment instrument."
          },
          "virtualAccountNumber": {
            "type": "string",
            "description": "It displays the generated virtual account number."
          }
        }
      },
      "ErrorIntResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Error"
          },
          "details": {
            "type": "string",
            "example": "Detailed error message"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "violations": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "FundSourceData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "It displays the unique ID of the fund source.",
            "example": 123
          },
          "fsDisplayType": {
            "type": "string",
            "description": "It displays the type of the fund source.",
            "example": "Bank Account"
          },
          "fsDescription": {
            "type": "string",
            "nullable": true,
            "description": "It displays the description of the fund source.",
            "example": "Main operational account"
          },
          "accountHolderName": {
            "type": "string",
            "description": "It displays the name of the account holder.",
            "example": "John Doe"
          },
          "bankName": {
            "type": "string",
            "description": "It displays the bank name.",
            "example": "Bank of India"
          },
          "balance": {
            "type": "string",
            "format": "decimal",
            "description": "It displays the balance amount in the fund source.",
            "example": "1000.00"
          },
          "availableBalance": {
            "type": "string",
            "format": "decimal",
            "description": "It displays the available balance amount in the fund source.",
            "example": "950.00"
          },
          "fundsOnHold": {
            "type": "string",
            "description": "It displays the amount on hold in the fund source.",
            "format": "decimal",
            "example": "50.00"
          },
          "overdraft": {
            "type": "string",
            "format": "decimal",
            "description": "It displays the overdraft amount of the fund source.",
            "example": "0.00"
          },
          "bankAccount": {
            "type": "string",
            "description": "It displays the bank account information of the fund source.",
            "example": "1234567890"
          },
          "ifsc": {
            "type": "string",
            "description": "It displays the IFSC information.",
            "example": "BOFA0XXXXXX"
          },
          "addedOn": {
            "type": "string",
            "description": "It displays the date and time of the fund source when added.",
            "format": "date-time",
            "example": "2024-01-01T12:00:00Z"
          },
          "updatedOn": {
            "type": "string",
            "description": "It displays the latest updation date and time of the fund source.",
            "format": "date-time",
            "example": "2024-08-01T12:00:00Z"
          },
          "fsName": {
            "type": "string",
            "description": "It displays the name of the fund source.",
            "example": "Operational Account"
          },
          "displayName": {
            "type": "string",
            "description": "It displays the display name of the fund source.",
            "example": "Main Account"
          },
          "virtualAccount": {
            "type": "string",
            "description": "It displays the virtual account information.",
            "example": "VA1234567890"
          },
          "status": {
            "type": "string",
            "description": "It displays the status of the fund source.",
            "example": "ACTIVE"
          }
        }
      },
      "InternalTransferBetweenFundSourceRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "format": "decimal",
            "description": "It is the transfer amount.",
            "example": 1000.5
          },
          "transferId": {
            "type": "string",
            "description": "It is the unique ID to identify the transfer request.",
            "example": "JUNOb23"
          },
          "toPaymentInstrumentId": {
            "type": "string",
            "description": "It is the unique ID of the payment instrument that you want to transfer the amount.",
            "example": "YES_CONNECTED_484576_4f21dfa"
          },
          "paymentInstrumentId": {
            "type": "string",
            "description": "It is the unique ID of the payment instrument that you want the debit the transfer amount.",
            "example": "YES_CONNECTED_484576_4f21dfb"
          },
          "remarks": {
            "type": "string",
            "description": "It is the additional remarks for the transfer.",
            "example": "commission"
          }
        },
        "required": [
          "amount",
          "toPaymentInstrumentId",
          "paymentInstrumentId"
        ]
      },
      "InternalTransferResponse": {
        "type": "object",
        "properties": {
          "transferId": {
            "type": "string",
            "description": "It is the unique ID you created to identify the transfer request."
          }
        }
      },
      "PaginatedAccountStatementResponseWithCursor": {
        "type": "object",
        "properties": {
          "prevCursor": {
            "type": "string",
            "description": "It displays the previous cursor for pagination."
          },
          "nextCursor": {
            "type": "string",
            "description": "It displays the next cursor for pagination."
          },
          "hasNext": {
            "type": "boolean",
            "description": "If displays the information whether there are more records to fetch."
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountStatementRows"
            }
          }
        }
      },
      "PayoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the request (SUCCESS/FAILURE).",
            "example": "SUCCESS"
          },
          "subCode": {
            "type": "string",
            "description": "It displays the sub code of the request.",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "It displays the outcome of the request.",
            "example": "FundSource Details Retrieved"
          },
          "data": {
            "type": "object",
            "description": "Response data.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreateVirtualAccountResponse"
              },
              {
                "$ref": "#/components/schemas/InternalTransferResponse"
              }
            ],
            "$ref": "#/components/schemas/FundSourceData"
          }
        }
      },
      "RechargeErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the request."
          },
          "subCode": {
            "type": "string",
            "description": "A code identifying the error."
          },
          "message": {
            "type": "string",
            "description": "A message describing the error."
          }
        }
      },
      "RechargeRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "format": "decimal",
            "example": 500.01,
            "description": "It is the recharge amount in decimal value up to 2 precision."
          },
          "paymentInstrumentId": {
            "type": "string",
            "description": "It is the unique ID to identify the payment instrument.",
            "example": "YES_CONNECTED_484576_4f21dfa"
          },
          "rechargeId": {
            "type": "string",
            "description": "It is the unique ID to identify the recharge request.",
            "example": "recharge12"
          },
          "utr": {
            "type": "string",
            "description": "It is the unique transaction reference number for the recharge transaction (optional).",
            "example": 54600012345
          },
          "remarks": {
            "type": "string",
            "description": "Remarks for the recharge transaction (optional).",
            "example": "salary"
          }
        },
        "required": [
          "amount",
          "paymentInstrumentId"
        ]
      },
      "RechargeSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "It displays the status of the request."
          },
          "subCode": {
            "type": "string",
            "description": "It displays the code identify the status of the request."
          },
          "message": {
            "type": "string",
            "description": "It displays the outcome of the request."
          },
          "data": {
            "type": "object",
            "properties": {
              "referenceId": {
                "type": "string",
                "description": "It displays the unique ID generated by Cashfree Payments for reference purpose."
              },
              "message": {
                "type": "string",
                "description": "It displays the outcome of the recharge."
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/fundsources/connected/virtual-account": {
      "post": {
        "summary": "Create Virtual Account",
        "description": "Use this API to create a virtual account that helps streamline the management of funds, enhance tracking capabilities, and simplify the financial process.",
        "operationId": "createVirtualAccount",
        "requestBody": {
          "description": "Find the request parameters to create the virtual account",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVirtualAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Virtual account successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Virtual account created",
                      "data": {
                        "paymentInstrumentId": "KOTAKCR_CONNECTED_376933_9e478d1",
                        "virtualAccountNumber": "90909010KR0M"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Virtual account successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "201",
                      "message": "Virtual account created",
                      "data": {
                        "paymentInstrumentId": "KOTAKCR_CONNECTED_376933_9e478d1",
                        "virtualAccountNumber": "90909010KR0M"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Virtual account creation is not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "406",
                      "message": "Virtual account creation is not allowed"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "errorActiveNotExist": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "412",
                      "message": "Active main escrow connected fundSource does not exist"
                    }
                  },
                  "errorMultipleActive": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "412",
                      "message": "More than one active main escrow connected fundsource."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide a valid displayName"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "500",
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1.2/internalTransfer": {
      "post": {
        "summary": "Transfer Funds Between VAs",
        "description": "Use this API to transfer funds between virtual accounts (VAs).",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header with tokens.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalTransferBetweenFundSourceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal transfer successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "RefId-<TransferId>/<Remarks>-Internal Fund Transfer",
                      "data": {
                        "transferId": "<TransferId>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "FAILURE",
                      "subCode": "400",
                      "message": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "internal_transfer_not_allowed": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Internal Fund Transfer is not allowed for the selected Fund Sources"
                    }
                  },
                  "account_not_configured": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Account not configured. Please reach out to account manager"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "FAILURE",
                      "subCode": "500",
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/accountStatement": {
      "get": {
        "summary": "Get Account Statement",
        "description": "Use this API to fetch the account statement of the virtual account in a paginated format using cursor-based pagination.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header with tokens.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "It is the starting date and time of the information you require in the UNIX timestamp format.",
            "required": true,
            "example": "2023-10-12 13:04:25",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "It is the ending date and time of the information you require in the UNIX timestamp format.",
            "required": true,
            "example": "2023-10-12 13:04:25",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "It is the number of records to display per page.",
            "required": false,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "It is the cursor to paginate through large sets of data.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstrumentId",
            "in": "query",
            "description": "It is the unique ID to identify the payment instrument. Use this parameter if you require the account statment for a virtual account.",
            "required": false,
            "example": "YES_CONNECTED_484576_4f21dfb",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account statement retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAccountStatementResponseWithCursor"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Account Statement Retrieved",
                      "data": {
                        "prevCursor": "",
                        "nextCursor": "",
                        "hasNext": false,
                        "batches": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                }
              }
            }
          },
          "404": {
            "description": "Fund source not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "fundsource_not_found": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "fundsource_id does not exist"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                },
                "examples": {
                  "invalid_endTime": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide a valid endTime"
                    }
                  },
                  "invalid_startTime": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide a valid startTime"
                    }
                  },
                  "invalid_startTime_format": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "startTime should be of format yyyy-mm-dd hh:mm:ss"
                    }
                  },
                  "invalid_endTime_format": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "endTime should be of format yyyy-mm-dd hh:mm:ss"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/connected-wallet/recharge": {
      "post": {
        "summary": "Allocate Funds to Virtual Account",
        "description": "Use this API to recharge the OneEscrow account (notional credit) using a payment instrument.",
        "operationId": "rechargeOneEscrow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recharge successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RechargeSuccessResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Recharge successful",
                      "data": {
                        "referenceId": 4379710,
                        "message": "Amount added to the merchant balance"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Bad request)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RechargeErrorResponse"
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Bad request, please check API documentation"
                    }
                  },
                  "paymentInstrumentNotFound": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Specified paymentInstrumentId not available."
                    }
                  },
                  "rechargeAlreadyExists": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Recharge Already Exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RechargeErrorResponse"
                },
                "examples": {
                  "serverError": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "500",
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/fundsources/{paymentInstrumentId}": {
      "get": {
        "summary": "Get Fund Source Details",
        "description": "Use this API to get the details of the fund source.",
        "tags": [
          "Fund Source"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentInstrumentId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "It is the unique ID of the payment instrument.",
            "example": "YES_CONNECTED_484576_4f21dfa"
          }
        ],
        "responses": {
          "200": {
            "description": "Fund source details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Specified paymentInstrumentId not available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorIntResponse"
                },
                "examples": {
                  "error": {
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Specified paymentInstrumentId not available."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorIntResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}