{
  "openapi": "3.0.3",
  "info": {
    "title": "Global Collections - Partners",
    "version": "4"
  },
  "servers": [
    {
      "url": "https://sandbox.cashfree.com/",
      "description": "Sandbox server"
    },
    {
      "url": "https://api.cashfree.com/",
      "description": "Production server"
    }
  ],
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "subCode": {
            "type": "string",
            "example": "200"
          },
          "message": {
            "type": "string",
            "example": "success_message"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "authentication_error"
          },
          "message": {
            "type": "string",
            "example": "failed to authenticate"
          },
          "code": {
            "type": "string",
            "example": "authentication_failed"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "example": 1
          },
          "totalElements": {
            "type": "integer",
            "example": 1
          },
          "first": {
            "type": "boolean",
            "example": true
          },
          "last": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "VirtualAccount": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "example": "GB47TCCL12345648154924"
          },
          "accountType": {
            "type": "string",
            "example": "iban"
          },
          "paymentType": {
            "type": "string",
            "example": "priority"
          },
          "bankName": {
            "type": "string",
            "example": "The Currency Cloud Limited"
          },
          "bankAddress": {
            "type": "string",
            "example": "12 Steward Street, The Steward Building, London, E1 6FQ, GB"
          },
          "bankCountry": {
            "type": "string",
            "example": "GB"
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          },
          "routingCode": {
            "type": "string",
            "example": "TCCLGB3L"
          },
          "routingCodeType": {
            "type": "string",
            "example": "bic_swift"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time",
            "example": "2023-09-15 16:13:48"
          },
          "vaccountId": {
            "type": "string",
            "example": "GB47T"
          }
        }
      },
      "VirtualAccountsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaginatedResponse"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "vAccounts": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VirtualAccount"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "Settlement": {
        "type": "object",
        "properties": {
          "expectedSettlementDate": {
            "type": "string",
            "example": "2023-07-27"
          },
          "firaFileDownloadUrl": {
            "type": "string",
            "example": "fileDownloadUrl"
          },
          "id": {
            "type": "string",
            "example": "ae0b76a5-4edd-45f3-81f1-0cf099abe78a"
          },
          "inrAmount": {
            "type": "number",
            "example": 16219.65
          },
          "status": {
            "type": "string",
            "example": "SETTLED"
          },
          "utr": {
            "type": "string",
            "example": "URN1"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "4950.00"
          },
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "paymentRail": {
            "type": "string",
            "example": "ACH"
          },
          "paymentTime": {
            "type": "string",
            "example": "2023-05-03 15:05:03"
          },
          "referenceId": {
            "type": "integer",
            "example": 2125
          },
          "remarks": {
            "type": "string",
            "example": "successful transaction"
          },
          "remitterAccount": {
            "type": "string",
            "example": "114015040938"
          },
          "remitterAddress": {
            "type": "string",
            "example": "Wellington street, Oakridge"
          },
          "remitterBic": {
            "type": "string",
            "example": "6789"
          },
          "remitterCountry": {
            "type": "string",
            "example": "USA"
          },
          "remitterName": {
            "type": "string",
            "example": "JANE"
          },
          "remitterRoutingCode": {
            "type": "string",
            "example": "9089"
          },
          "status": {
            "type": "string",
            "example": "READY_FOR_SETTLEMENT"
          },
          "updatedStatusTime": {
            "type": "string",
            "example": "2022-04-21 04:34:04"
          },
          "utr": {
            "type": "string",
            "example": "99105"
          },
          "vAccountId": {
            "type": "string",
            "example": "DEMO2"
          },
          "vAccountNumber": {
            "type": "string",
            "example": "CASHFREELGSH1234"
          },
          "settlement": {
            "$ref": "#/components/schemas/Settlement"
          }
        }
      },
      "PaymentsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "payments": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "TokenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9..."
                  },
                  "expiry": {
                    "type": "integer",
                    "example": 1697611541
                  }
                }
              }
            }
          }
        ]
      },
      "TokenVerificationResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "example": 23794572
          },
          "expiry": {
            "type": "integer",
            "example": 1697611626
          },
          "agentId": {
            "type": "integer",
            "example": 23794572
          },
          "channel": {
            "type": "string",
            "example": ""
          },
          "enableApi": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        }
      },
      "InvoiceRequest": {
        "type": "object",
        "required": [
          "invoiceNumber",
          "invoiceAmount",
          "invoiceFile",
          "remitterName"
        ],
        "properties": {
          "invoiceNumber": {
            "type": "string"
          },
          "invoiceAmount": {
            "type": "string"
          },
          "invoiceFile": {
            "type": "string",
            "format": "binary"
          },
          "remitterName": {
            "type": "string"
          },
          "purposeCode": {
            "type": "string"
          }
        }
      },
      "InvoiceResponse": {
        "type": "object",
        "properties": {
          "cmsProfileId": {
            "type": "integer",
            "example": 23802472
          },
          "cmsPaymentId": {
            "type": "integer",
            "example": 310729
          },
          "invoiceNumber": {
            "type": "string",
            "example": "ABC123"
          },
          "invoiceAmount": {
            "type": "integer",
            "example": 1
          },
          "remitterName": {
            "type": "string",
            "example": "remitter"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          }
        }
      },
      "InvoiceError": {
        "oneOf": [
          {
            "title": "Payment Not Found",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "PAYMENT_NOT_FOUND"
              },
              "detail": {
                "type": "string",
                "example": "Payment with ID 11111 could not be found."
              }
            }
          },
          {
            "title": "Payment not in Awaiting for Details state",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "REQUEST_INVALID"
              },
              "detail": {
                "type": "string",
                "example": "Payment with ID 11111 is not in AWAITING_DETAILS state."
              }
            }
          },
          {
            "title": "Total Invoice Sum Exceeds Transaction Amount",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "REQUEST_INVALID"
              },
              "detail": {
                "type": "string",
                "example": "Total invoice sum (11) exceeds payment amount (10.00)."
              }
            }
          },
          {
            "title": "Duplicate Invoice",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "INVOICE_DUPLICATE"
              },
              "detail": {
                "type": "string",
                "example": "Invoice with number inv_01_abc already exists for Payment ID 11111"
              }
            }
          },
          {
            "title": "Invalid Purpose Code",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "REQUEST_INVALID"
              },
              "detail": {
                "type": "string",
                "example": "Please reach out to your account manager as purpose code you are trying is not verified."
              }
            }
          }
        ]
      }
    },
    "parameters": {
      "PartnerApiKey": {
        "name": "x-partner-api-key",
        "in": "header",
        "description": "Enter partner API keygit",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "PartnerMerchantId": {
        "name": "x-partner-merchantid",
        "in": "header",
        "description": "Enter the merchant reference id used while creating merchant during onboarding",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ApiVersion": {
        "name": "x-api-version",
        "in": "header",
        "description": "API version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Bearer auth token",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/gc/virtual-accounts": {
      "get": {
        "summary": "Get All Collection Accounts for Merchants",
        "description": "This API fetches all the virtual accounts that is linked with the given merchantId.",
        "operationId": "get-collection-accounts-partner",
        "parameters": [
          {
            "$ref": "#/components/parameters/PartnerApiKey"
          },
          {
            "$ref": "#/components/parameters/PartnerMerchantId"
          },
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specify the page number you want to see. The default value is 0.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Specify the page size, the default value is 20.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Please mention the currency for which you want to view virtual account details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved virtual accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualAccountsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gc/transactions": {
      "get": {
        "summary": "Get All Transaction Details for Partner Merchants",
        "description": "Use this API to get all the transaction details within a time interval.",
        "operationId": "get-all-transaction-details-partner",
        "parameters": [
          {
            "$ref": "#/components/parameters/PartnerApiKey"
          },
          {
            "$ref": "#/components/parameters/PartnerMerchantId"
          },
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date in YYYYMMDD or YYYY-MM-DD HH:MM:SS. Search till this date. Has to be greater than startDate.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Date in YYYYMMDD or YYYY-MM-DD HH:MM:SS. Search beginning from this date.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxReturn",
            "in": "query",
            "description": "Number (200 >= maxReturn > 0). For pagination support.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lastReturnId",
            "in": "query",
            "description": "Number. For pagination support.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gc/transactions/emulate": {
      "post": {
        "summary": "Simulate funding to mimic scenario when payment hits the virtual account",
        "description": "Use this API to simulate a funding in test environment.",
        "operationId": "emulate-funding-partner",
        "parameters": [
          {
            "$ref": "#/components/parameters/PartnerApiKey"
          },
          {
            "$ref": "#/components/parameters/PartnerMerchantId"
          },
          {
            "$ref": "#/components/parameters/ApiVersion"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "vAccountNumber",
                  "amount",
                  "currency",
                  "fundingActions",
                  "remitterAccountNumber"
                ],
                "properties": {
                  "vAccountNumber": {
                    "type": "string",
                    "description": "Pass the receiving bank account number for which you want to simulate the funding."
                  },
                  "amount": {
                    "type": "string",
                    "description": "Enter the amount for which the funding has to be simulated."
                  },
                  "currency": {
                    "type": "string",
                    "description": "Enter the three character ISO."
                  },
                  "fundingActions": {
                    "type": "string",
                    "description": "Provide the action you want to do with the funding."
                  },
                  "remitterAccountNumber": {
                    "type": "string",
                    "description": "Provide the remitter account number."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully simulated funding",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gc/authorize": {
      "post": {
        "summary": "Get Token",
        "description": "Use this API to authenticate with the Cashfree system and obtain the authorization bearer token.",
        "operationId": "global-collections-get-token",
        "parameters": [
          {
            "$ref": "#/components/parameters/PartnerApiKey"
          },
          {
            "$ref": "#/components/parameters/PartnerMerchantId"
          },
          {
            "$ref": "#/components/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gc/transactions/{referenceId}/invoice-details": {
      "post": {
        "summary": "Add Transaction Details for Partner Merchants",
        "description": "Use this API to input invoice details for a specific transaction. You have the flexibility to upload multiple invoices until the cumulative total of all invoice amounts matches the transaction amount.",
        "operationId": "add-transaction-details-partner",
        "parameters": [
          {
            "$ref": "#/components/parameters/PartnerApiKey"
          },
          {
            "$ref": "#/components/parameters/PartnerMerchantId"
          },
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "name": "referenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added invoice details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceError"
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl --location 'https://sandbox.cashfree.com/gc/transactions/{referenceId}/invoice-details' \\\n--header 'x-partner-api-key: FGXPahnl24w2777c61b3d6c31cde1ce****9d224868395f5e1c' \\\n--header 'x-partner-merchantid: test_123' \\\n--header 'x-api-version: 20231016'\n--form 'invoiceNumber=\"inv_01_abc\"' \\\n--form 'invoiceAmount=\"1\"' \\\n--form 'invoiceFile=@\"/Users/testUser/file.pdf\"' \\\n--form 'remitterName=\"test remitter name\"'"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/gc/token/verify": {
      "get": {
        "summary": "Verify Token",
        "description": "Verify the authentication token generated by the user.",
        "operationId": "global-collections-verify-token",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully verified token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenVerificationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "headers": [],
    "explorer-enabled": true,
    "proxy-enabled": true
  },
  "x-readme-fauxas": true
}